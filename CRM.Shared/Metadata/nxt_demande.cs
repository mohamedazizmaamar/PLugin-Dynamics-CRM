//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Entité de base pour le processus Demande</para>
/// <para>Display Name: Processus des Demandes</para>
/// </summary>
[EntityLogicalName("nxt_demande")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_demande : ExtendedEntity<nxt_demandeState, nxt_demande_statuscode> {
    
    public const string EntityLogicalName = "nxt_demande";
    
    public const int EntityTypeCode = 10655;
    
    public nxt_demande() : 
            base(EntityLogicalName) {
    }
    
    public nxt_demande(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("bpf_name");
        }
    }
    
    [AttributeLogicalName("businessprocessflowinstanceid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("businessprocessflowinstanceid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Demande</para>
    /// </summary>
    [AttributeLogicalName("businessprocessflowinstanceid")]
    [DisplayName("Demande")]
    public Guid? BusinessProcessFlowInstanceId {
        get {
            return GetAttributeValue<Guid?>("businessprocessflowinstanceid");
        }
        set {
            SetId("businessprocessflowinstanceid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la phase active pour l'instance du flux des processus d'entreprise.</para>
    /// <para>Display Name: Phase active</para>
    /// </summary>
    [AttributeLogicalName("activestageid")]
    [DisplayName("Phase active")]
    public EntityReference ActiveStageId {
        get {
            return GetAttributeValue<EntityReference>("activestageid");
        }
        set {
            SetAttributeValue("activestageid", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de démarrage de la phase active actuelle</para>
    /// <para>Display Name: Date de démarrage de la phase active</para>
    /// </summary>
    [AttributeLogicalName("activestagestartedon")]
    [DisplayName("Date de démarrage de la phase active")]
    public DateTime? ActiveStageStartedOn {
        get {
            return GetAttributeValue<DateTime?>("activestagestartedon");
        }
        set {
            SetAttributeValue("activestagestartedon", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de fin de l'instance du flux des processus d'entreprise.</para>
    /// <para>Display Name: Terminé(e) le</para>
    /// </summary>
    [AttributeLogicalName("completedon")]
    [DisplayName("Terminé(e) le")]
    public DateTime? CompletedOn {
        get {
            return GetAttributeValue<DateTime?>("completedon");
        }
        set {
            SetAttributeValue("completedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'organisation</para>
    /// <para>Display Name: ID d’organisation</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("ID d’organisation")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Description</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("bpf_name")]
    [DisplayName("Nom")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("bpf_name");
        }
        set {
            SetAttributeValue("bpf_name", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du workflow associé à l'instance du flux des processus d'entreprise.</para>
    /// <para>Display Name: Traiter</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Traiter")]
    public EntityReference ProcessId {
        get {
            return GetAttributeValue<EntityReference>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Chaîne séparée par des virgules dans laquelle figurent des identificateurs de phases représentant les phases consultées de l'instance de flux des processus d'entreprise.</para>
    /// <para>Display Name: Chemin d'accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("Chemin d\'accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Durée du flux des processus d'entreprise</para>
    /// <para>Display Name: Durée</para>
    /// </summary>
    [AttributeLogicalName("bpf_duration")]
    [DisplayName("Durée")]
    [Range(0, 2147483647)]
    public int? bpf_Duration {
        get {
            return GetAttributeValue<int?>("bpf_duration");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Incident</para>
    /// </summary>
    [AttributeLogicalName("bpf_incidentid")]
    [DisplayName("Incident")]
    public EntityReference bpf_incidentid {
        get {
            return GetAttributeValue<EntityReference>("bpf_incidentid");
        }
        set {
            SetAttributeValue("bpf_incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Description</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("bpf_name")]
    [DisplayName("Nom")]
    [MaxLength(100)]
    public string bpf_name {
        get {
            return GetAttributeValue<string>("bpf_name");
        }
        set {
            SetAttributeValue("bpf_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Demande</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_demandeState? statecode {
        get {
            return GetOptionSetValue<nxt_demandeState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Demande</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public nxt_demande_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_demande_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("bpf_incidentid")]
    [RelationshipSchemaName("bpf_incident_nxt_demande")]
    public Incident bpf_incident_nxt_demande {
        get {
            return GetRelatedEntity<Incident>("bpf_incident_nxt_demande", null);
        }
        set {
            SetRelatedEntity("bpf_incident_nxt_demande", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_demande_createdby")]
    public SystemUser lk_nxt_demande_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_demande_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_demande_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_demande_createdonbehalfby")]
    public SystemUser lk_nxt_demande_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_demande_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_demande_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_demande_modifiedby")]
    public SystemUser lk_nxt_demande_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_demande_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_demande_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_demande_modifiedonbehalfby")]
    public SystemUser lk_nxt_demande_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_demande_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_demande_modifiedonbehalfby", null, value);
        }
    }
    
    public static nxt_demande Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_demande,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum nxt_demandeState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_demande_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé(e)", Index=1, Lcid=1036)]
    Terminée = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Abandonné(e)", Index=2, Lcid=1036)]
    Abandonnée = 3,
}
