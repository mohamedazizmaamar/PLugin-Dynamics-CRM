//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Personne liée à une division, telle qu'un client, un fournisseur ou un collègue.</para>
/// <para>Display Name: Individu</para>
/// </summary>
[EntityLogicalName("contact")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
    
    public const string EntityLogicalName = "contact";
    
    public const int EntityTypeCode = 2;
    
    public Contact() : 
            base(EntityLogicalName) {
    }
    
    public Contact(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("fullname");
        }
    }
    
    [AttributeLogicalName("contactid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("contactid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du contact.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public Guid? ContactId {
        get {
            return GetAttributeValue<Guid?>("contactid");
        }
        set {
            SetId("contactid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du compte auquel le contact est associé.</para>
    /// <para>Display Name: Compte</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Compte")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le rôle du contact dans la société ou le processus de vente, tel que décisionnaire, employé ou influenceur.</para>
    /// <para>Display Name: Rôle</para>
    /// </summary>
    [AttributeLogicalName("accountrolecode")]
    [DisplayName("Rôle")]
    public Contact_AccountRoleCode? AccountRoleCode {
        get {
            return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
        }
        set {
            SetOptionSetValue("accountrolecode", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Adresse 1 : ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d’adresse principale.</para>
    /// <para>Display Name: Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Type d\'adresse")]
    public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse principale.</para>
    /// <para>Display Name: Ville</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("Ville")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse principale complète.</para>
    /// <para>Display Name: Adresse 1</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Adresse 1")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse principale.</para>
    /// <para>Display Name: Pays (standard)</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Pays (standard)")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la région de l'adresse principale.</para>
    /// <para>Display Name: Commune</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Commune")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Adresse 1 : Télécopie")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour l'adresse principale pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Adresse 1 : Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("address1_freighttermscode")]
    [DisplayName("Adresse 1 : Conditions de transport")]
    public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
        }
        set {
            SetOptionSetValue("address1_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la latitude de l'adresse principale à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 1 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Adresse 1 : Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse principale.</para>
    /// <para>Display Name: Rue</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Rue")]
    [MaxLength(500)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse principale.</para>
    /// <para>Display Name: Complément d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Complément d\'adresse")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Obsolète suite AVLO2-2698</para>
    /// <para>Display Name: ZZ_Rue</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("ZZ_Rue")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la longitude de l'adresse principale à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 1 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Adresse 1 : Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour l'adresse principale, comme Siège social de l'entreprise.</para>
    /// <para>Display Name: Complément de nom</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Complément de nom")]
    [MaxLength(200)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de boîte postale de l'adresse principale.</para>
    /// <para>Display Name: Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Boîte postale")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse principale.</para>
    /// <para>Display Name: Code postal</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("Code postal")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal pour l’adresse principale du compte.</para>
    /// <para>Display Name: Adresse 1 : Nom du contact principal</para>
    /// </summary>
    [AttributeLogicalName("address1_primarycontactname")]
    [DisplayName("Adresse 1 : Nom du contact principal")]
    [MaxLength(100)]
    public string Address1_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address1_primarycontactname");
        }
        set {
            SetAttributeValue("address1_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Adresse 1 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Adresse 1 : Mode de livraison")]
    public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Département/province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("Adresse 1 : Département/province")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Téléphone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Téléphone")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Adresse 1 : Téléphone 2")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Adresse 1 : Téléphone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la zone UPS de l'adresse principale pour vous assurer que les frais de livraison sont calculés correctement et que les livraisons sont effectuées rapidement si elles sont prises en charge par UPS.</para>
    /// <para>Display Name: Adresse 1 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Adresse 1 : Zone UPS")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le fuseau horaire, ou décalage UTC, pour cette adresse pour que les autres utilisateurs puissent y faire référence s'ils contactent quelqu'un à cette adresse.</para>
    /// <para>Display Name: Adresse 1 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Adresse 1 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Adresse 2 : ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d’adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Adresse 2 : Type d\'adresse")]
    public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse secondaire.</para>
    /// <para>Display Name: Ville</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Ville")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse secondaire complète.</para>
    /// <para>Display Name: Adresse 2</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Adresse 2")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Pays (standard)</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Adresse 2 : Pays (standard)")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la région de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Commune</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Adresse 2 : Commune")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Adresse 2 : Télécopie")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour l'adresse secondaire pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Adresse 2 : Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("address2_freighttermscode")]
    [DisplayName("Adresse 2 : Conditions de transport")]
    public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
        }
        set {
            SetOptionSetValue("address2_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la latitude de l'adresse secondaire à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 2 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Adresse 2 : Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse secondaire.</para>
    /// <para>Display Name: Rue</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Rue")]
    [MaxLength(500)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse secondaire.</para>
    /// <para>Display Name: Complément d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Complément d\'adresse")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Obsolète suite AVLO2-2698</para>
    /// <para>Display Name: ZZ_Rue</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("ZZ_Rue")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la longitude de l'adresse secondaire à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 2 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Adresse 2 : Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour l'adresse secondaire, comme Siège social de l'entreprise.</para>
    /// <para>Display Name: Adresse 2 : Complément de nom</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Adresse 2 : Complément de nom")]
    [MaxLength(100)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de boîte postale de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Adresse 2 : Boîte postale")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse secondaire.</para>
    /// <para>Display Name: Code postal</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Code postal")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal pour l’adresse secondaire du compte.</para>
    /// <para>Display Name: Adresse 2 : Nom du contact principal</para>
    /// </summary>
    [AttributeLogicalName("address2_primarycontactname")]
    [DisplayName("Adresse 2 : Nom du contact principal")]
    [MaxLength(100)]
    public string Address2_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address2_primarycontactname");
        }
        set {
            SetAttributeValue("address2_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Adresse 2 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Adresse 2 : Mode de livraison")]
    public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Département/province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Adresse 2 : Département/province")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Adresse 2 : Téléphone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Adresse 2 : Téléphone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Adresse 2 : Téléphone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la zone UPS de l'adresse secondaire pour vous assurer que les frais de livraison sont calculés correctement et que les livraisons sont effectuées rapidement si elles sont prises en charge par UPS.</para>
    /// <para>Display Name: Adresse 2 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Adresse 2 : Zone UPS")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le fuseau horaire, ou décalage UTC, pour cette adresse pour que les autres utilisateurs puissent y faire référence s'ils contactent quelqu'un à cette adresse.</para>
    /// <para>Display Name: Adresse 2 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Adresse 2 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 3.</para>
    /// <para>Display Name: Adresse 3 : ID</para>
    /// </summary>
    [AttributeLogicalName("address3_addressid")]
    [DisplayName("Adresse 3 : ID")]
    public Guid? Address3_AddressId {
        get {
            return GetAttributeValue<Guid?>("address3_addressid");
        }
        set {
            SetAttributeValue("address3_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le troisième type d’adresse.</para>
    /// <para>Display Name: Adresse 3 : type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address3_addresstypecode")]
    [DisplayName("Adresse 3 : type d\'adresse")]
    public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
        get {
            return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
        }
        set {
            SetOptionSetValue("address3_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : ville</para>
    /// </summary>
    [AttributeLogicalName("address3_city")]
    [DisplayName("Adresse 3 : ville")]
    [MaxLength(80)]
    public string Address3_City {
        get {
            return GetAttributeValue<string>("address3_city");
        }
        set {
            SetAttributeValue("address3_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la troisième adresse complète.</para>
    /// <para>Display Name: Adresse 3</para>
    /// </summary>
    [AttributeLogicalName("address3_composite")]
    [DisplayName("Adresse 3")]
    public string Address3_Composite {
        get {
            return GetAttributeValue<string>("address3_composite");
        }
    }
    
    /// <summary>
    /// <para>pays ou région de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : pays/région</para>
    /// </summary>
    [AttributeLogicalName("address3_country")]
    [DisplayName("Adresse 3 : pays/région")]
    [MaxLength(80)]
    public string Address3_Country {
        get {
            return GetAttributeValue<string>("address3_country");
        }
        set {
            SetAttributeValue("address3_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la commune de la troisième adresse.</para>
    /// <para>Display Name: Adresse 3 : commune</para>
    /// </summary>
    [AttributeLogicalName("address3_county")]
    [DisplayName("Adresse 3 : commune")]
    [MaxLength(50)]
    public string Address3_County {
        get {
            return GetAttributeValue<string>("address3_county");
        }
        set {
            SetAttributeValue("address3_county", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie associé à la troisième adresse.</para>
    /// <para>Display Name: Adresse 3 : télécopie</para>
    /// </summary>
    [AttributeLogicalName("address3_fax")]
    [DisplayName("Adresse 3 : télécopie")]
    [MaxLength(50)]
    public string Address3_Fax {
        get {
            return GetAttributeValue<string>("address3_fax");
        }
        set {
            SetAttributeValue("address3_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour la troisième adresse afin de vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Adresse 3 : conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("address3_freighttermscode")]
    [DisplayName("Adresse 3 : conditions de transport")]
    public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
        get {
            return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
        }
        set {
            SetOptionSetValue("address3_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la latitude de la troisième adresse à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 3 : latitude</para>
    /// </summary>
    [AttributeLogicalName("address3_latitude")]
    [DisplayName("Adresse 3 : latitude")]
    public double? Address3_Latitude {
        get {
            return GetAttributeValue<double?>("address3_latitude");
        }
        set {
            SetAttributeValue("address3_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>première ligne de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : rue 1</para>
    /// </summary>
    [AttributeLogicalName("address3_line1")]
    [DisplayName("Adresse 3 : rue 1")]
    [MaxLength(250)]
    public string Address3_Line1 {
        get {
            return GetAttributeValue<string>("address3_line1");
        }
        set {
            SetAttributeValue("address3_line1", value);
        }
    }
    
    /// <summary>
    /// <para>deuxième ligne de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : rue 2</para>
    /// </summary>
    [AttributeLogicalName("address3_line2")]
    [DisplayName("Adresse 3 : rue 2")]
    [MaxLength(250)]
    public string Address3_Line2 {
        get {
            return GetAttributeValue<string>("address3_line2");
        }
        set {
            SetAttributeValue("address3_line2", value);
        }
    }
    
    /// <summary>
    /// <para>troisième ligne de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : rue 3</para>
    /// </summary>
    [AttributeLogicalName("address3_line3")]
    [DisplayName("Adresse 3 : rue 3")]
    [MaxLength(250)]
    public string Address3_Line3 {
        get {
            return GetAttributeValue<string>("address3_line3");
        }
        set {
            SetAttributeValue("address3_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la longitude de la troisième adresse à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 3 : longitude</para>
    /// </summary>
    [AttributeLogicalName("address3_longitude")]
    [DisplayName("Adresse 3 : longitude")]
    public double? Address3_Longitude {
        get {
            return GetAttributeValue<double?>("address3_longitude");
        }
        set {
            SetAttributeValue("address3_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour la troisième adresse, comme Siège social de l'entreprise.</para>
    /// <para>Display Name: Adresse 3 : nom</para>
    /// </summary>
    [AttributeLogicalName("address3_name")]
    [DisplayName("Adresse 3 : nom")]
    [MaxLength(200)]
    public string Address3_Name {
        get {
            return GetAttributeValue<string>("address3_name");
        }
        set {
            SetAttributeValue("address3_name", value);
        }
    }
    
    /// <summary>
    /// <para>numéro de boîte postale de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address3_postofficebox")]
    [DisplayName("Adresse 3 : boîte postale")]
    [MaxLength(20)]
    public string Address3_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address3_postofficebox");
        }
        set {
            SetAttributeValue("address3_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>code postal de la 3e adresse.</para>
    /// <para>Display Name: Adresse 3 : code postal</para>
    /// </summary>
    [AttributeLogicalName("address3_postalcode")]
    [DisplayName("Adresse 3 : code postal")]
    [MaxLength(20)]
    public string Address3_PostalCode {
        get {
            return GetAttributeValue<string>("address3_postalcode");
        }
        set {
            SetAttributeValue("address3_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal pour la troisième adresse du compte.</para>
    /// <para>Display Name: Adresse 3 : nom du contact principal</para>
    /// </summary>
    [AttributeLogicalName("address3_primarycontactname")]
    [DisplayName("Adresse 3 : nom du contact principal")]
    [MaxLength(100)]
    public string Address3_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address3_primarycontactname");
        }
        set {
            SetAttributeValue("address3_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Adresse 3 : mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address3_shippingmethodcode")]
    [DisplayName("Adresse 3 : mode de livraison")]
    public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address3_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>département ou province de la troisième adresse.</para>
    /// <para>Display Name: Adresse 3 : département/province</para>
    /// </summary>
    [AttributeLogicalName("address3_stateorprovince")]
    [DisplayName("Adresse 3 : département/province")]
    [MaxLength(50)]
    public string Address3_StateOrProvince {
        get {
            return GetAttributeValue<string>("address3_stateorprovince");
        }
        set {
            SetAttributeValue("address3_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone principal associé à la troisième adresse.</para>
    /// <para>Display Name: Adresse 3 : téléphone 1</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone1")]
    [DisplayName("Adresse 3 : téléphone 1")]
    [MaxLength(50)]
    public string Address3_Telephone1 {
        get {
            return GetAttributeValue<string>("address3_telephone1");
        }
        set {
            SetAttributeValue("address3_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone associé à la troisième adresse.</para>
    /// <para>Display Name: Adresse 3 : téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone2")]
    [DisplayName("Adresse 3 : téléphone 2")]
    [MaxLength(50)]
    public string Address3_Telephone2 {
        get {
            return GetAttributeValue<string>("address3_telephone2");
        }
        set {
            SetAttributeValue("address3_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 3 : téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address3_telephone3")]
    [DisplayName("Adresse 3 : téléphone 3")]
    [MaxLength(50)]
    public string Address3_Telephone3 {
        get {
            return GetAttributeValue<string>("address3_telephone3");
        }
        set {
            SetAttributeValue("address3_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la zone UPS de la troisième adresse pour vous assurer que les frais de livraison sont calculés correctement et que les livraisons sont effectuées rapidement si elles sont prises en charge par UPS.</para>
    /// <para>Display Name: Adresse 3 : zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address3_upszone")]
    [DisplayName("Adresse 3 : zone UPS")]
    [MaxLength(4)]
    public string Address3_UPSZone {
        get {
            return GetAttributeValue<string>("address3_upszone");
        }
        set {
            SetAttributeValue("address3_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le fuseau horaire, ou décalage UTC, pour cette adresse pour que les autres utilisateurs puissent y faire référence s'ils contactent quelqu'un à cette adresse.</para>
    /// <para>Display Name: Adresse 3 : décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address3_utcoffset")]
    [DisplayName("Adresse 3 : décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address3_UTCOffset {
        get {
            return GetAttributeValue<int?>("address3_utcoffset");
        }
        set {
            SetAttributeValue("address3_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Création par adresse IP</para>
    /// </summary>
    [AttributeLogicalName("adx_createdbyipaddress")]
    [DisplayName("Création par adresse IP")]
    [MaxLength(100)]
    public string Adx_CreatedByIPAddress {
        get {
            return GetAttributeValue<string>("adx_createdbyipaddress");
        }
        set {
            SetAttributeValue("adx_createdbyipaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Création par nom d’utilisateur</para>
    /// </summary>
    [AttributeLogicalName("adx_createdbyusername")]
    [DisplayName("Création par nom d’utilisateur")]
    [MaxLength(100)]
    public string Adx_CreatedByUsername {
        get {
            return GetAttributeValue<string>("adx_createdbyusername");
        }
        set {
            SetAttributeValue("adx_createdbyusername", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modification par adresse IP</para>
    /// </summary>
    [AttributeLogicalName("adx_modifiedbyipaddress")]
    [DisplayName("Modification par adresse IP")]
    [MaxLength(100)]
    public string Adx_ModifiedByIPAddress {
        get {
            return GetAttributeValue<string>("adx_modifiedbyipaddress");
        }
        set {
            SetAttributeValue("adx_modifiedbyipaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modification par nom d’utilisateur</para>
    /// </summary>
    [AttributeLogicalName("adx_modifiedbyusername")]
    [DisplayName("Modification par nom d’utilisateur")]
    [MaxLength(100)]
    public string Adx_ModifiedByUsername {
        get {
            return GetAttributeValue<string>("adx_modifiedbyusername");
        }
        set {
            SetAttributeValue("adx_modifiedbyusername", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Organization Name</para>
    /// </summary>
    [AttributeLogicalName("adx_organizationname")]
    [DisplayName("Organization Name")]
    [MaxLength(250)]
    public string Adx_OrganizationName {
        get {
            return GetAttributeValue<string>("adx_organizationname");
        }
        set {
            SetAttributeValue("adx_organizationname", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Le profil est Anonyme</para>
    /// </summary>
    [AttributeLogicalName("adx_profileisanonymous")]
    [DisplayName("Le profil est Anonyme")]
    public bool? Adx_ProfileIsAnonymous {
        get {
            return GetAttributeValue<bool?>("adx_profileisanonymous");
        }
        set {
            SetAttributeValue("adx_profileisanonymous", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Dernière activité du profil</para>
    /// </summary>
    [AttributeLogicalName("adx_profilelastactivity")]
    [DisplayName("Dernière activité du profil")]
    public DateTime? Adx_ProfileLastActivity {
        get {
            return GetAttributeValue<DateTime?>("adx_profilelastactivity");
        }
        set {
            SetAttributeValue("adx_profilelastactivity", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Time Zone</para>
    /// </summary>
    [AttributeLogicalName("adx_timezone")]
    [DisplayName("Time Zone")]
    [Range(-1500, 1500)]
    public int? Adx_TimeZone {
        get {
            return GetAttributeValue<int?>("adx_timezone");
        }
        set {
            SetAttributeValue("adx_timezone", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 30</para>
    /// </summary>
    [AttributeLogicalName("aging30")]
    [DisplayName("Classement chronologique à 30")]
    public decimal? Aging30 {
        get {
            return GetMoneyValue("aging30");
        }
    }
    
    /// <summary>
    /// <para>Affiche le champ Classement chronologique à 30 converti en devise de base par défaut du système. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Classement chronologique à 30 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging30_base")]
    [DisplayName("Classement chronologique à 30 (devise de base)")]
    public decimal? Aging30_Base {
        get {
            return GetMoneyValue("aging30_base");
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 60</para>
    /// </summary>
    [AttributeLogicalName("aging60")]
    [DisplayName("Classement chronologique à 60")]
    public decimal? Aging60 {
        get {
            return GetMoneyValue("aging60");
        }
    }
    
    /// <summary>
    /// <para>Affiche le champ Classement chronologique à 60 converti en devise de base par défaut du système. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Classement chronologique à 60 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging60_base")]
    [DisplayName("Classement chronologique à 60 (devise de base)")]
    public decimal? Aging60_Base {
        get {
            return GetMoneyValue("aging60_base");
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 90</para>
    /// </summary>
    [AttributeLogicalName("aging90")]
    [DisplayName("Classement chronologique à 90")]
    public decimal? Aging90 {
        get {
            return GetMoneyValue("aging90");
        }
    }
    
    /// <summary>
    /// <para>Affiche le champ Classement chronologique à 90 converti en devise de base par défaut du système. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Classement chronologique à 90 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging90_base")]
    [DisplayName("Classement chronologique à 90 (devise de base)")]
    public decimal? Aging90_Base {
        get {
            return GetMoneyValue("aging90_base");
        }
    }
    
    /// <summary>
    /// <para>Entrez la date d'anniversaire d'entrée en service ou de mariage du contact pour l'utiliser dans les programmes de cadeaux aux clients ou les autres communications.</para>
    /// <para>Display Name: Date d'anniversaire</para>
    /// </summary>
    [AttributeLogicalName("anniversary")]
    [DisplayName("Date d\'anniversaire")]
    public DateTime? Anniversary {
        get {
            return GetAttributeValue<DateTime?>("anniversary");
        }
        set {
            SetAttributeValue("anniversary", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le revenu annuel du contact pour l'utiliser dans le profilage et l'analyse financière.</para>
    /// <para>Display Name: Chiffre d'affaires annuel</para>
    /// </summary>
    [AttributeLogicalName("annualincome")]
    [DisplayName("Chiffre d\'affaires annuel")]
    public decimal? AnnualIncome {
        get {
            return GetMoneyValue("annualincome");
        }
        set {
            SetMoneyValue("annualincome", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le champ Chiffre d'affaires annuel converti en devise de base par défaut du système. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Chiffre d'affaires annuel (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("annualincome_base")]
    [DisplayName("Chiffre d\'affaires annuel (devise de base)")]
    public decimal? AnnualIncome_Base {
        get {
            return GetMoneyValue("annualincome_base");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom de l'assistant du contact.</para>
    /// <para>Display Name: Assistant(e) </para>
    /// </summary>
    [AttributeLogicalName("assistantname")]
    [DisplayName("Assistant(e) ")]
    [MaxLength(100)]
    public string AssistantName {
        get {
            return GetAttributeValue<string>("assistantname");
        }
        set {
            SetAttributeValue("assistantname", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone de l'assistant du contact.</para>
    /// <para>Display Name: Numéro de téléphone de l'assistant</para>
    /// </summary>
    [AttributeLogicalName("assistantphone")]
    [DisplayName("Numéro de téléphone de l\'assistant")]
    [MaxLength(50)]
    public string AssistantPhone {
        get {
            return GetAttributeValue<string>("assistantphone");
        }
        set {
            SetAttributeValue("assistantphone", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date d'anniversaire du contact pour l'utiliser dans les programmes de cadeaux aux clients ou les autres communications.</para>
    /// <para>Display Name: Date de naissance</para>
    /// </summary>
    [AttributeLogicalName("birthdate")]
    [DisplayName("Date de naissance")]
    public DateTime? BirthDate {
        get {
            return GetAttributeValue<DateTime?>("birthdate");
        }
        set {
            SetAttributeValue("birthdate", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone professionnel pour ce contact.</para>
    /// <para>Display Name: Téléphone professionnel 2</para>
    /// </summary>
    [AttributeLogicalName("business2")]
    [DisplayName("Téléphone professionnel 2")]
    [MaxLength(50)]
    public string Business2 {
        get {
            return GetAttributeValue<string>("business2");
        }
        set {
            SetAttributeValue("business2", value);
        }
    }
    
    /// <summary>
    /// <para>Stocke l’image de la carte de visite</para>
    /// <para>Display Name: Carte de visite</para>
    /// </summary>
    [AttributeLogicalName("businesscard")]
    [DisplayName("Carte de visite")]
    public string BusinessCard {
        get {
            return GetAttributeValue<string>("businesscard");
        }
        set {
            SetAttributeValue("businesscard", value);
        }
    }
    
    /// <summary>
    /// <para>Stocke les propriétés de contrôle de la carte de visite.</para>
    /// <para>Display Name: BusinessCardAttributes</para>
    /// </summary>
    [AttributeLogicalName("businesscardattributes")]
    [DisplayName("BusinessCardAttributes")]
    [MaxLength(4000)]
    public string BusinessCardAttributes {
        get {
            return GetAttributeValue<string>("businesscardattributes");
        }
        set {
            SetAttributeValue("businesscardattributes", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un numéro de téléphone de rappel pour ce contact.</para>
    /// <para>Display Name: Numéro de rappel</para>
    /// </summary>
    [AttributeLogicalName("callback")]
    [DisplayName("Numéro de rappel")]
    [MaxLength(50)]
    public string Callback {
        get {
            return GetAttributeValue<string>("callback");
        }
        set {
            SetAttributeValue("callback", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez les noms des enfants du contact pour référence dans les communications et les programmes clients.</para>
    /// <para>Display Name: Nom des enfants</para>
    /// </summary>
    [AttributeLogicalName("childrensnames")]
    [DisplayName("Nom des enfants")]
    [MaxLength(255)]
    public string ChildrensNames {
        get {
            return GetAttributeValue<string>("childrensnames");
        }
        set {
            SetAttributeValue("childrensnames", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone de la société du contact.</para>
    /// <para>Display Name: Numéro de téléphone de la société</para>
    /// </summary>
    [AttributeLogicalName("company")]
    [DisplayName("Numéro de téléphone de la société")]
    [MaxLength(50)]
    public string Company {
        get {
            return GetAttributeValue<string>("company");
        }
        set {
            SetAttributeValue("company", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Créé par (partie externe)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la création de l'enregistrement. Celles-ci sont affichées dans le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tapez la limite de crédit du contact pour référence quand vous abordez des problèmes de facturation et de comptabilité avec le client.</para>
    /// <para>Display Name: Limite de crédit</para>
    /// </summary>
    [AttributeLogicalName("creditlimit")]
    [DisplayName("Limite de crédit")]
    public decimal? CreditLimit {
        get {
            return GetMoneyValue("creditlimit");
        }
        set {
            SetMoneyValue("creditlimit", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le champ Limite de crédit converti en devise de base par défaut du système pour la production de rapports. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Limite de crédit (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("creditlimit_base")]
    [DisplayName("Limite de crédit (devise de base)")]
    public decimal? CreditLimit_Base {
        get {
            return GetMoneyValue("creditlimit_base");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact fait l'objet d'une suspension de crédit pour référence quand vous abordez des problèmes de facturation et de comptabilité avec le client.</para>
    /// <para>Display Name: Suspension de crédit</para>
    /// </summary>
    [AttributeLogicalName("creditonhold")]
    [DisplayName("Suspension de crédit")]
    public bool? CreditOnHold {
        get {
            return GetAttributeValue<bool?>("creditonhold");
        }
        set {
            SetAttributeValue("creditonhold", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la taille de la société du contact à des fins de génération de rapports et de segmentation.</para>
    /// <para>Display Name: Taille du client</para>
    /// </summary>
    [AttributeLogicalName("customersizecode")]
    [DisplayName("Taille du client")]
    public Contact_CustomerSizeCode? CustomerSizeCode {
        get {
            return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
        }
        set {
            SetOptionSetValue("customersizecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la catégorie qui décrit le mieux la relation entre le contact et votre organisation.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("customertypecode")]
    [DisplayName("Type")]
    public Contact_CustomerTypeCode? CustomerTypeCode {
        get {
            return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
        }
        set {
            SetOptionSetValue("customertypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez les tarifs par défaut associés au contact pour vous assurer que les prix exacts du produit sont appliqués à ce client dans les opportunités de vente, les devis et les commandes.</para>
    /// <para>Display Name: Tarifs</para>
    /// </summary>
    [AttributeLogicalName("defaultpricelevelid")]
    [DisplayName("Tarifs")]
    public EntityReference DefaultPriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("defaultpricelevelid");
        }
        set {
            SetAttributeValue("defaultpricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le service ou la division dans laquelle le contact travaille dans l'entreprise ou la société mère.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("department")]
    [DisplayName("Service")]
    [MaxLength(100)]
    public string Department {
        get {
            return GetAttributeValue<string>("department");
        }
        set {
            SetAttributeValue("department", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire le contact, par exemple un extrait du site Web de la société.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact accepte les envois en nombre via les campagnes marketing ou les campagnes rapides. Si Ne pas autoriser est sélectionné, le contact peut être ajouté aux listes marketing, mais est exclu du courrier électronique.</para>
    /// <para>Display Name: Ne pas autoriser l’envoi de messages en nombre</para>
    /// </summary>
    [AttributeLogicalName("donotbulkemail")]
    [DisplayName("Ne pas autoriser l’envoi de messages en nombre")]
    public bool? DoNotBulkEMail {
        get {
            return GetAttributeValue<bool?>("donotbulkemail");
        }
        set {
            SetAttributeValue("donotbulkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact accepte le courrier postal en nombre via les campagnes marketing ou les campagnes rapides. Si Ne pas autoriser est sélectionné, le contact peut être ajouté aux listes marketing, mais est exclu des lettres.</para>
    /// <para>Display Name: Ne pas autoriser l'envoi de messages en nombre</para>
    /// </summary>
    [AttributeLogicalName("donotbulkpostalmail")]
    [DisplayName("Ne pas autoriser l\'envoi de messages en nombre")]
    public bool? DoNotBulkPostalMail {
        get {
            return GetAttributeValue<bool?>("donotbulkpostalmail");
        }
        set {
            SetAttributeValue("donotbulkpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact autorise le courrier direct envoyé depuis Microsoft Dynamics 365. Si Ne pas autoriser est sélectionné, Microsoft Dynamics 365 n'envoie pas le courrier électronique.</para>
    /// <para>Display Name: Ne pas autoriser le courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Ne pas autoriser le courrier électronique")]
    public bool? DoNotEMail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
        set {
            SetAttributeValue("donotemail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact autorise les télécopies. Si Ne pas autoriser est sélectionné, le contact peut être exclu des activités de télécopie distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser la télécopie</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Ne pas autoriser la télécopie")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
        set {
            SetAttributeValue("donotfax", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact accepte les appels téléphoniques. Si Ne pas autoriser est sélectionné, le contact peut être exclu des activités d'appel téléphonique distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser les appels téléphoniques</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Ne pas autoriser les appels téléphoniques")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
        set {
            SetAttributeValue("donotphone", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact autorise le courrier direct. Si Ne pas autoriser est sélectionné, le contact peut être exclu des activités de lettre distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser le courrier postal</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Ne pas autoriser le courrier postal")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
        set {
            SetAttributeValue("donotpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact accepte les documents marketing, tels que des brochures ou des catalogues. Les contacts qui refusent de recevoir les publicités peuvent être exclus des initiatives marketing.</para>
    /// <para>Display Name: Envoyer les documents marketing</para>
    /// </summary>
    [AttributeLogicalName("donotsendmm")]
    [DisplayName("Envoyer les documents marketing")]
    public bool? DoNotSendMM {
        get {
            return GetAttributeValue<bool?>("donotsendmm");
        }
        set {
            SetAttributeValue("donotsendmm", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'adresse de messagerie principale pour le contact.</para>
    /// <para>Display Name: E-mail principal</para>
    /// </summary>
    [AttributeLogicalName("emailaddress1")]
    [DisplayName("E-mail principal")]
    [MaxLength(100)]
    public string EMailAddress1 {
        get {
            return GetAttributeValue<string>("emailaddress1");
        }
        set {
            SetAttributeValue("emailaddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'adresse de messagerie secondaire pour le contact.</para>
    /// <para>Display Name: E-mail secondaire</para>
    /// </summary>
    [AttributeLogicalName("emailaddress2")]
    [DisplayName("E-mail secondaire")]
    [MaxLength(100)]
    public string EMailAddress2 {
        get {
            return GetAttributeValue<string>("emailaddress2");
        }
        set {
            SetAttributeValue("emailaddress2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une autre adresse de messagerie pour le contact.</para>
    /// <para>Display Name: E-mail 3</para>
    /// </summary>
    [AttributeLogicalName("emailaddress3")]
    [DisplayName("E-mail 3")]
    [MaxLength(100)]
    public string EMailAddress3 {
        get {
            return GetAttributeValue<string>("emailaddress3");
        }
        set {
            SetAttributeValue("emailaddress3", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le niveau de formation le plus élevé du contact à utiliser dans la segmentation marketing et l'analyse démographique.</para>
    /// <para>Display Name: Formation</para>
    /// </summary>
    [AttributeLogicalName("educationcode")]
    [DisplayName("Formation")]
    public Contact_EducationCode? EducationCode {
        get {
            return GetOptionSetValue<Contact_EducationCode>("educationcode");
        }
        set {
            SetOptionSetValue("educationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro ou l'identificateur d'employé du contact pour référence dans les commandes, les incidents de service ou les autres communications avec l'organisation du contact.</para>
    /// <para>Display Name: Employé</para>
    /// </summary>
    [AttributeLogicalName("employeeid")]
    [DisplayName("Employé")]
    [MaxLength(50)]
    public string EmployeeId {
        get {
            return GetAttributeValue<string>("employeeid");
        }
        set {
            SetAttributeValue("employeeid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Code d'image de l'entité</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Code d\'image de l\'entité")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs d'argent de l'enregistrement de la devise locale en devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Identificateur d'utilisateur externe.</para>
    /// <para>Display Name: Identificateur d'utilisateur externe</para>
    /// </summary>
    [AttributeLogicalName("externaluseridentifier")]
    [DisplayName("Identificateur d\'utilisateur externe")]
    [MaxLength(50)]
    public string ExternalUserIdentifier {
        get {
            return GetAttributeValue<string>("externaluseridentifier");
        }
        set {
            SetAttributeValue("externaluseridentifier", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez l'état civil du contact pour référence dans les appels téléphoniques et toute autre communication de suivi.</para>
    /// <para>Display Name: État civil</para>
    /// </summary>
    [AttributeLogicalName("familystatuscode")]
    [DisplayName("État civil")]
    public Contact_FamilyStatusCode? FamilyStatusCode {
        get {
            return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
        }
        set {
            SetOptionSetValue("familystatuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie du contact.</para>
    /// <para>Display Name: Télécopie</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Télécopie")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le prénom du contact pour vous assurer que le contact est mentionné correctement dans les appels de télévente, le courrier électronique et les campagnes marketing.</para>
    /// <para>Display Name: Prénom</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    [DisplayName("Prénom")]
    [MaxLength(100)]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>Informations indiquant si le suivi de l'activité de courrier électronique telle que les ouvertures, les affichages de pièce jointe et les clics sur les liens doit être autorisé pour les courriers électroniques envoyés au contact.</para>
    /// <para>Display Name: Suivre l'activité de courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("followemail")]
    [DisplayName("Suivre l\'activité de courrier électronique")]
    public bool? FollowEmail {
        get {
            return GetAttributeValue<bool?>("followemail");
        }
        set {
            SetAttributeValue("followemail", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'URL du site FTP du contact pour permettre aux utilisateurs d'accéder aux données et de partager les documents.</para>
    /// <para>Display Name: Site FTP</para>
    /// </summary>
    [AttributeLogicalName("ftpsiteurl")]
    [DisplayName("Site FTP")]
    [MaxLength(200)]
    public string FtpSiteUrl {
        get {
            return GetAttributeValue<string>("ftpsiteurl");
        }
        set {
            SetAttributeValue("ftpsiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Combine et affiche le nom et le prénom du contact pour que le nom complet puisse être affiché dans les vues et les rapports.</para>
    /// <para>Display Name: Nom complet</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    [DisplayName("Nom complet")]
    [MaxLength(160)]
    public string FullName {
        get {
            return GetAttributeValue<string>("fullname");
        }
        set {
            SetAttributeValue("fullname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le sexe du contact pour vous assurer que le contact est mentionné correctement dans les appels de télévente, le courrier électronique et les campagnes marketing.</para>
    /// <para>Display Name: Sexe</para>
    /// </summary>
    [AttributeLogicalName("gendercode")]
    [DisplayName("Sexe")]
    public Contact_GenderCode? GenderCode {
        get {
            return GetOptionSetValue<Contact_GenderCode>("gendercode");
        }
        set {
            SetOptionSetValue("gendercode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de passeport ou un autre numéro gouvernemental pour le contact à utiliser dans les documents ou les rapports.</para>
    /// <para>Display Name: Organismes d'état</para>
    /// </summary>
    [AttributeLogicalName("governmentid")]
    [DisplayName("Organismes d\'état")]
    [MaxLength(50)]
    public string GovernmentId {
        get {
            return GetAttributeValue<string>("governmentid");
        }
        set {
            SetAttributeValue("governmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact a des enfants pour référence dans les appels téléphoniques et toute autre communication de suivi.</para>
    /// <para>Display Name: A des enfants</para>
    /// </summary>
    [AttributeLogicalName("haschildrencode")]
    [DisplayName("A des enfants")]
    public Contact_HasChildrenCode? HasChildrenCode {
        get {
            return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
        }
        set {
            SetOptionSetValue("haschildrencode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone personnel pour ce contact.</para>
    /// <para>Display Name: Téléphone personnel 2</para>
    /// </summary>
    [AttributeLogicalName("home2")]
    [DisplayName("Téléphone personnel 2")]
    [MaxLength(50)]
    public string Home2 {
        get {
            return GetAttributeValue<string>("home2");
        }
        set {
            SetAttributeValue("home2", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le contact existe dans une comptabilité distincte ou un autre système, tel que Microsoft Dynamics GP ou une autre base de données ERP, à utiliser dans les processus d'intégration.</para>
    /// <para>Display Name: Client d'arrière-guichet</para>
    /// </summary>
    [AttributeLogicalName("isbackofficecustomer")]
    [DisplayName("Client d\'arrière-guichet")]
    public bool? IsBackofficeCustomer {
        get {
            return GetAttributeValue<bool?>("isbackofficecustomer");
        }
        set {
            SetAttributeValue("isbackofficecustomer", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la fonction du contact pour vous assurer que le contact est mentionné correctement dans les appels commerciaux, le courrier électronique et les campagnes marketing.</para>
    /// <para>Display Name: Fonction</para>
    /// </summary>
    [AttributeLogicalName("jobtitle")]
    [DisplayName("Fonction")]
    [MaxLength(250)]
    public string JobTitle {
        get {
            return GetAttributeValue<string>("jobtitle");
        }
        set {
            SetAttributeValue("jobtitle", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact pour vous assurer que le contact est mentionné correctement dans les appels de télévente, le courrier électronique et les campagnes marketing.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    [DisplayName("Nom")]
    [MaxLength(100)]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date de la dernière inclusion du contact à une campagne marketing ou une campagne rapide.</para>
    /// <para>Display Name: Dernière date incluse de la campagne</para>
    /// </summary>
    [AttributeLogicalName("lastusedincampaign")]
    [DisplayName("Dernière date incluse de la campagne")]
    public DateTime? LastUsedInCampaign {
        get {
            return GetAttributeValue<DateTime?>("lastusedincampaign");
        }
        set {
            SetAttributeValue("lastusedincampaign", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la principale source marketing qui a redirigé le contact vers votre organisation.</para>
    /// <para>Display Name: Source du prospect</para>
    /// </summary>
    [AttributeLogicalName("leadsourcecode")]
    [DisplayName("Source du prospect")]
    public Contact_LeadSourceCode? LeadSourceCode {
        get {
            return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
        }
        set {
            SetOptionSetValue("leadsourcecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du directeur du contact à utiliser dans les problèmes réaffectés ou les autres communications de suivi avec le contact.</para>
    /// <para>Display Name: Directeur</para>
    /// </summary>
    [AttributeLogicalName("managername")]
    [DisplayName("Directeur")]
    [MaxLength(100)]
    public string ManagerName {
        get {
            return GetAttributeValue<string>("managername");
        }
        set {
            SetAttributeValue("managername", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone du directeur du contact.</para>
    /// <para>Display Name: Numéro de téléphone du directeur</para>
    /// </summary>
    [AttributeLogicalName("managerphone")]
    [DisplayName("Numéro de téléphone du directeur")]
    [MaxLength(50)]
    public string ManagerPhone {
        get {
            return GetAttributeValue<string>("managerphone");
        }
        set {
            SetAttributeValue("managerphone", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si uniquement pour marketing</para>
    /// <para>Display Name: Marketing uniquement</para>
    /// </summary>
    [AttributeLogicalName("marketingonly")]
    [DisplayName("Marketing uniquement")]
    public bool? MarketingOnly {
        get {
            return GetAttributeValue<bool?>("marketingonly");
        }
        set {
            SetAttributeValue("marketingonly", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du contact principal pour la fusion.</para>
    /// <para>Display Name: ID principal</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("ID principal")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
    }
    
    /// <summary>
    /// <para>Indique si le compte a été fusionné avec un contact principal.</para>
    /// <para>Display Name: Fusionné(e)</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Fusionné(e)")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Tapez le deuxième prénom ou l'initiale du contact pour vous assurer que le contact est mentionné correctement.</para>
    /// <para>Display Name: Deuxième prénom</para>
    /// </summary>
    [AttributeLogicalName("middlename")]
    [DisplayName("Deuxième prénom")]
    [MaxLength(50)]
    public string MiddleName {
        get {
            return GetAttributeValue<string>("middlename");
        }
        set {
            SetAttributeValue("middlename", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone mobile du contact.</para>
    /// <para>Display Name: Téléphone portable</para>
    /// </summary>
    [AttributeLogicalName("mobilephone")]
    [DisplayName("Téléphone portable")]
    [MaxLength(50)]
    public string MobilePhone {
        get {
            return GetAttributeValue<string>("mobilephone");
        }
        set {
            SetAttributeValue("mobilephone", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modifié par (partie externe)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la dernière mise à jour de l'enregistrement. La date et l'heure sont affichées selon le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement à la place d'un autre utilisateur.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tapez le surnom du contact.</para>
    /// <para>Display Name: Surnom</para>
    /// </summary>
    [AttributeLogicalName("nickname")]
    [DisplayName("Surnom")]
    [MaxLength(100)]
    public string NickName {
        get {
            return GetAttributeValue<string>("nickname");
        }
        set {
            SetAttributeValue("nickname", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre d'enfants du contact pour référence dans les appels téléphoniques et toute autre communication de suivi.</para>
    /// <para>Display Name: Nombre d'enfants</para>
    /// </summary>
    [AttributeLogicalName("numberofchildren")]
    [DisplayName("Nombre d\'enfants")]
    [Range(0, 1000000000)]
    public int? NumberOfChildren {
        get {
            return GetAttributeValue<int?>("numberofchildren");
        }
        set {
            SetAttributeValue("numberofchildren", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée, en minutes, de la suspension de l'enregistrement.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Affiche le prospect à partir duquel le contact a été créé si le contact a été créé par conversion d'un prospect dans Microsoft Dynamics 365. Permet d'établir un lien entre le contact et les données du prospect initial en vue d'une utilisation dans la génération de rapports et d'analyses.</para>
    /// <para>Display Name: Prospect d'origine</para>
    /// </summary>
    [AttributeLogicalName("originatingleadid")]
    [DisplayName("Prospect d\'origine")]
    public EntityReference OriginatingLeadId {
        get {
            return GetAttributeValue<EntityReference>("originatingleadid");
        }
        set {
            SetAttributeValue("originatingleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez l'utilisateur ou l'équipe affectée à la gestion de l'enregistrement. Ce champ est mis à jour à chaque fois que l'enregistrement est attribué à un utilisateur différent.</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire du contact.</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’équipe propriétaire du contact.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur propriétaire du contact.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de radiomessagerie du contact.</para>
    /// <para>Display Name: Radiomessagerie</para>
    /// </summary>
    [AttributeLogicalName("pager")]
    [DisplayName("Radiomessagerie")]
    [MaxLength(50)]
    public string Pager {
        get {
            return GetAttributeValue<string>("pager");
        }
        set {
            SetAttributeValue("pager", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du contact parent.</para>
    /// <para>Display Name: Contact parent</para>
    /// </summary>
    [AttributeLogicalName("parentcontactid")]
    [DisplayName("Contact parent")]
    public EntityReference ParentContactId {
        get {
            return GetAttributeValue<EntityReference>("parentcontactid");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le compte parent ou le contact parent du contact pour fournir un lien rapide vers les détails supplémentaires, comme les informations financières, les activités et les opportunités.</para>
    /// <para>Display Name: Nom de la société</para>
    /// </summary>
    [AttributeLogicalName("parentcustomerid")]
    [DisplayName("Nom de la société")]
    public EntityReference ParentCustomerId {
        get {
            return GetAttributeValue<EntityReference>("parentcustomerid");
        }
        set {
            SetAttributeValue("parentcustomerid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le contact participe aux règles de workflow.</para>
    /// <para>Display Name: Participe au workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participe au workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de paiement pour indiquer quand le client doit payer le montant total.</para>
    /// <para>Display Name: Conditions de paiement</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Conditions de paiement")]
    public Contact_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le jour préféré de la semaine pour les rendez-vous de service.</para>
    /// <para>Display Name: Jour privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmentdaycode")]
    [DisplayName("Jour privilégié")]
    public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
        get {
            return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
        }
        set {
            SetOptionSetValue("preferredappointmentdaycode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez l'heure préférée de la semaine pour les rendez-vous de service.</para>
    /// <para>Display Name: Heure privilégiée</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmenttimecode")]
    [DisplayName("Heure privilégiée")]
    public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
        get {
            return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
        }
        set {
            SetOptionSetValue("preferredappointmenttimecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la méthode de contact préférée.</para>
    /// <para>Display Name: Mode de communication privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredcontactmethodcode")]
    [DisplayName("Mode de communication privilégié")]
    public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
        get {
            return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
        }
        set {
            SetOptionSetValue("preferredcontactmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'équipement ou l'installation de service préférée du contact pour vous assurer que les services sont planifiés correctement pour le client.</para>
    /// <para>Display Name: Installation/équipement privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredequipmentid")]
    [DisplayName("Installation/équipement privilégié")]
    public EntityReference PreferredEquipmentId {
        get {
            return GetAttributeValue<EntityReference>("preferredequipmentid");
        }
        set {
            SetAttributeValue("preferredequipmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le service préféré du contact pour vous assurer que les services sont planifiés correctement pour le client.</para>
    /// <para>Display Name: Service privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredserviceid")]
    [DisplayName("Service privilégié")]
    public EntityReference PreferredServiceId {
        get {
            return GetAttributeValue<EntityReference>("preferredserviceid");
        }
        set {
            SetAttributeValue("preferredserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le conseiller du service clientèle préféré ou habituel pour référence lorsque vous planifiez des activités de service pour le contact.</para>
    /// <para>Display Name: Utilisateur privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredsystemuserid")]
    [DisplayName("Utilisateur privilégié")]
    public EntityReference PreferredSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("preferredsystemuserid");
        }
        set {
            SetAttributeValue("preferredsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Combine et affiche le nom et le prénom du contact pour que le nom complet puisse être affiché dans les vues et les rapports.</para>
    /// <para>Display Name: Nom complet</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    [DisplayName("Nom complet")]
    [MaxLength(160)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("fullname");
        }
        set {
            SetAttributeValue("fullname", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement de contact.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cet incident. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Tapez la salutation du contact pour vous assurer que le contact est mentionné correctement dans les appels de télévente, les messages électroniques et les campagnes marketing.</para>
    /// <para>Display Name: Salutations</para>
    /// </summary>
    [AttributeLogicalName("salutation")]
    [DisplayName("Salutations")]
    [MaxLength(100)]
    public string Salutation {
        get {
            return GetAttributeValue<string>("salutation");
        }
        set {
            SetAttributeValue("salutation", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Mode de livraison")]
    public Contact_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du conjoint(e)/partenaire du contact pour référence lors des appels, événements ou autres communications avec le contact.</para>
    /// <para>Display Name: Nom du (de la) conjoint(e)/partenaire</para>
    /// </summary>
    [AttributeLogicalName("spousesname")]
    [DisplayName("Nom du (de la) conjoint(e)/partenaire")]
    [MaxLength(100)]
    public string SpousesName {
        get {
            return GetAttributeValue<string>("spousesname");
        }
        set {
            SetAttributeValue("spousesname", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le contact est actif ou inactif. Les contacts inactifs sont en lecture seule et ne peuvent pas être modifiés avant d'être réactivés.</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public ContactState? StateCode {
        get {
            return GetOptionSetValue<ContactState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le statut du contact.</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public Contact_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Contact_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Abonnement</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Abonnement")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le suffixe utilisé dans le nom du contact, comme Junior ou Senior, pour vous assurer que le contact est mentionné correctement dans les appels de télévente, le courrier électronique et les campagnes marketing.</para>
    /// <para>Display Name: Suffixe</para>
    /// </summary>
    [AttributeLogicalName("suffix")]
    [DisplayName("Suffixe")]
    [MaxLength(10)]
    public string Suffix {
        get {
            return GetAttributeValue<string>("suffix");
        }
        set {
            SetAttributeValue("suffix", value);
        }
    }
    
    /// <summary>
    /// <para>Nombre d'utilisateurs ou de conversations qui ont suivi l'enregistrement</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone principal pour ce contact.</para>
    /// <para>Display Name: Téléphone bureau</para>
    /// </summary>
    [AttributeLogicalName("telephone1")]
    [DisplayName("Téléphone bureau")]
    [MaxLength(50)]
    public string Telephone1 {
        get {
            return GetAttributeValue<string>("telephone1");
        }
        set {
            SetAttributeValue("telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone pour ce contact.</para>
    /// <para>Display Name: Téléphone personnel</para>
    /// </summary>
    [AttributeLogicalName("telephone2")]
    [DisplayName("Téléphone personnel")]
    [MaxLength(50)]
    public string Telephone2 {
        get {
            return GetAttributeValue<string>("telephone2");
        }
        set {
            SetAttributeValue("telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone pour ce contact.</para>
    /// <para>Display Name: Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("telephone3")]
    [DisplayName("Téléphone 3")]
    [MaxLength(50)]
    public string Telephone3 {
        get {
            return GetAttributeValue<string>("telephone3");
        }
        set {
            SetAttributeValue("telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une région ou un territoire pour le contact, à utiliser dans la segmentation et les analyses.</para>
    /// <para>Display Name: Secteur de vente</para>
    /// </summary>
    [AttributeLogicalName("territorycode")]
    [DisplayName("Secteur de vente")]
    public Contact_TerritoryCode? TerritoryCode {
        get {
            return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
        }
        set {
            SetOptionSetValue("territorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Temps total que je consacre aux courriers électroniques (lecture et écriture) et aux réunions pour l'enregistrement de contact.</para>
    /// <para>Display Name: Temps que je consacre</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Temps que je consacre")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale pour l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code de fuseau horaire utilisé à la création de l’enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version du contact.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Tapez l'URL du blog ou du site Web personnel ou professionnel du contact.</para>
    /// <para>Display Name: Site Web</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Site Web")]
    [MaxLength(200)]
    public string WebSiteUrl {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'orthographe phonétique du prénom du contact si le nom est indiqué en japonais pour vous assurer que le nom est prononcé correctement dans les appels téléphoniques et toute autre communication.</para>
    /// <para>Display Name: Prénom Yomi</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    [DisplayName("Prénom Yomi")]
    [MaxLength(150)]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le prénom et le nom Yomi combinés du contact pour que le nom phonétique complet puisse être affiché dans les vues et les rapports.</para>
    /// <para>Display Name: Nom complet Yomi</para>
    /// </summary>
    [AttributeLogicalName("yomifullname")]
    [DisplayName("Nom complet Yomi")]
    [MaxLength(450)]
    public string YomiFullName {
        get {
            return GetAttributeValue<string>("yomifullname");
        }
    }
    
    /// <summary>
    /// <para>Tapez l'orthographe phonétique du nom du contact si le nom est indiqué en japonais pour vous assurer que le nom est prononcé correctement dans les appels téléphoniques et toute autre communication.</para>
    /// <para>Display Name: Nom Yomi</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    [DisplayName("Nom Yomi")]
    [MaxLength(150)]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'orthographe phonétique du deuxième prénom du contact si le nom est indiqué en japonais pour vous assurer que le nom est prononcé correctement dans les appels téléphoniques et toute autre communication.</para>
    /// <para>Display Name: Deuxième prénom Yomi</para>
    /// </summary>
    [AttributeLogicalName("yomimiddlename")]
    [DisplayName("Deuxième prénom Yomi")]
    [MaxLength(150)]
    public string YomiMiddleName {
        get {
            return GetAttributeValue<string>("yomimiddlename");
        }
        set {
            SetAttributeValue("yomimiddlename", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Confirmer la suppression du mot de passe</para>
    /// </summary>
    [AttributeLogicalName("adx_confirmremovepassword")]
    [DisplayName("Confirmer la suppression du mot de passe")]
    public bool? adx_ConfirmRemovePassword {
        get {
            return GetAttributeValue<bool?>("adx_confirmremovepassword");
        }
        set {
            SetAttributeValue("adx_confirmremovepassword", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Copie du profil public</para>
    /// </summary>
    [AttributeLogicalName("adx_publicprofilecopy")]
    [DisplayName("Copie du profil public")]
    public string adx_PublicProfileCopy {
        get {
            return GetAttributeValue<string>("adx_publicprofilecopy");
        }
        set {
            SetAttributeValue("adx_publicprofilecopy", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre actuel de tentatives manquées de saisie de mot de passe pour le contact.</para>
    /// <para>Display Name: Nombre d’accès manqués</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_accessfailedcount")]
    [DisplayName("Nombre d’accès manqués")]
    [Range(-2147483648, 2147483647)]
    public int? adx_identity_accessfailedcount {
        get {
            return GetAttributeValue<int?>("adx_identity_accessfailedcount");
        }
        set {
            SetAttributeValue("adx_identity_accessfailedcount", value);
        }
    }
    
    /// <summary>
    /// <para>Détermine si l’adresse de messagerie est confirmée par le contact.</para>
    /// <para>Display Name: Adresse de messagerie confirmée</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_emailaddress1confirmed")]
    [DisplayName("Adresse de messagerie confirmée")]
    public bool? adx_identity_emailaddress1confirmed {
        get {
            return GetAttributeValue<bool?>("adx_identity_emailaddress1confirmed");
        }
        set {
            SetAttributeValue("adx_identity_emailaddress1confirmed", value);
        }
    }
    
    /// <summary>
    /// <para>Indique la date et l’heure de la dernière connexion de l’utilisateur à un portail.</para>
    /// <para>Display Name: Dernière connexion</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_lastsuccessfullogin")]
    [DisplayName("Dernière connexion")]
    public DateTime? adx_identity_lastsuccessfullogin {
        get {
            return GetAttributeValue<DateTime?>("adx_identity_lastsuccessfullogin");
        }
        set {
            SetAttributeValue("adx_identity_lastsuccessfullogin", value);
        }
    }
    
    /// <summary>
    /// <para>Indique que le contact ne peut plus se connecter au portail à l’aide du compte local.</para>
    /// <para>Display Name: Connexion locale désactivée</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_locallogindisabled")]
    [DisplayName("Connexion locale désactivée")]
    public bool? adx_identity_locallogindisabled {
        get {
            return GetAttributeValue<bool?>("adx_identity_locallogindisabled");
        }
        set {
            SetAttributeValue("adx_identity_locallogindisabled", value);
        }
    }
    
    /// <summary>
    /// <para>Détermine si ce contact consigne les tentatives d’accès infructueuses et se trouve verrouillé après un trop grand nombre de tentatives. Pour empêcher que ce contact ne se trouve verrouillé, vous pouvez désactiver ce paramètre.</para>
    /// <para>Display Name: Verrouillage activé</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_lockoutenabled")]
    [DisplayName("Verrouillage activé")]
    public bool? adx_identity_lockoutenabled {
        get {
            return GetAttributeValue<bool?>("adx_identity_lockoutenabled");
        }
        set {
            SetAttributeValue("adx_identity_lockoutenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le moment où le contact verrouillé est déverrouillé.</para>
    /// <para>Display Name: Date de fin du verrouillage</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_lockoutenddate")]
    [DisplayName("Date de fin du verrouillage")]
    public DateTime? adx_identity_lockoutenddate {
        get {
            return GetAttributeValue<DateTime?>("adx_identity_lockoutenddate");
        }
        set {
            SetAttributeValue("adx_identity_lockoutenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Détermine si l’authentification Web est activée pour le contact.</para>
    /// <para>Display Name: Connexion activée</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_logonenabled")]
    [DisplayName("Connexion activée")]
    public bool? adx_identity_logonenabled {
        get {
            return GetAttributeValue<bool?>("adx_identity_logonenabled");
        }
        set {
            SetAttributeValue("adx_identity_logonenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Détermine si le numéro de téléphone est confirmé par le contact.</para>
    /// <para>Display Name: Téléphone mobile confirmé</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_mobilephoneconfirmed")]
    [DisplayName("Téléphone mobile confirmé")]
    public bool? adx_identity_mobilephoneconfirmed {
        get {
            return GetAttributeValue<bool?>("adx_identity_mobilephoneconfirmed");
        }
        set {
            SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Saisie du nouveau mot de passe</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_newpassword")]
    [DisplayName("Saisie du nouveau mot de passe")]
    [MaxLength(100)]
    public string adx_identity_newpassword {
        get {
            return GetAttributeValue<string>("adx_identity_newpassword");
        }
        set {
            SetAttributeValue("adx_identity_newpassword", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Hachage du mot de passe</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_passwordhash")]
    [DisplayName("Hachage du mot de passe")]
    [MaxLength(128)]
    public string adx_identity_passwordhash {
        get {
            return GetAttributeValue<string>("adx_identity_passwordhash");
        }
        set {
            SetAttributeValue("adx_identity_passwordhash", value);
        }
    }
    
    /// <summary>
    /// <para>Jeton servant à gérer la session d’authentification Web.</para>
    /// <para>Display Name: Tampon de sécurité</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_securitystamp")]
    [DisplayName("Tampon de sécurité")]
    [MaxLength(100)]
    public string adx_identity_securitystamp {
        get {
            return GetAttributeValue<string>("adx_identity_securitystamp");
        }
        set {
            SetAttributeValue("adx_identity_securitystamp", value);
        }
    }
    
    /// <summary>
    /// <para>Détermine si l’authentification à deux facteurs est activée pour le contact.</para>
    /// <para>Display Name: Auth. à deux facteurs activée</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_twofactorenabled")]
    [DisplayName("Auth. à deux facteurs activée")]
    public bool? adx_identity_twofactorenabled {
        get {
            return GetAttributeValue<bool?>("adx_identity_twofactorenabled");
        }
        set {
            SetAttributeValue("adx_identity_twofactorenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l’identité de l’utilisateur pour l’authentification Web locale.</para>
    /// <para>Display Name: Nom d’utilisateur</para>
    /// </summary>
    [AttributeLogicalName("adx_identity_username")]
    [DisplayName("Nom d’utilisateur")]
    [MaxLength(100)]
    public string adx_identity_username {
        get {
            return GetAttributeValue<string>("adx_identity_username");
        }
        set {
            SetAttributeValue("adx_identity_username", value);
        }
    }
    
    /// <summary>
    /// <para>LCID de portail préféré de l’utilisateur</para>
    /// <para>Display Name: LCID préféré (déconseillé)</para>
    /// </summary>
    [AttributeLogicalName("adx_preferredlcid")]
    [DisplayName("LCID préféré (déconseillé)")]
    [Range(-2147483648, 2147483647)]
    public int? adx_preferredlcid {
        get {
            return GetAttributeValue<int?>("adx_preferredlcid");
        }
        set {
            SetAttributeValue("adx_preferredlcid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Alerte du profil</para>
    /// </summary>
    [AttributeLogicalName("adx_profilealert")]
    [DisplayName("Alerte du profil")]
    public bool? adx_profilealert {
        get {
            return GetAttributeValue<bool?>("adx_profilealert");
        }
        set {
            SetAttributeValue("adx_profilealert", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de l’alerte du profil</para>
    /// </summary>
    [AttributeLogicalName("adx_profilealertdate")]
    [DisplayName("Date de l’alerte du profil")]
    public DateTime? adx_profilealertdate {
        get {
            return GetAttributeValue<DateTime?>("adx_profilealertdate");
        }
        set {
            SetAttributeValue("adx_profilealertdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Instructions des alertes du profil</para>
    /// </summary>
    [AttributeLogicalName("adx_profilealertinstructions")]
    [DisplayName("Instructions des alertes du profil")]
    public string adx_profilealertinstructions {
        get {
            return GetAttributeValue<string>("adx_profilealertinstructions");
        }
        set {
            SetAttributeValue("adx_profilealertinstructions", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Profil modifié le</para>
    /// </summary>
    [AttributeLogicalName("adx_profilemodifiedon")]
    [DisplayName("Profil modifié le")]
    public DateTime? adx_profilemodifiedon {
        get {
            return GetAttributeValue<DateTime?>("adx_profilemodifiedon");
        }
        set {
            SetAttributeValue("adx_profilemodifiedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du compte associé au contact.</para>
    /// <para>Display Name: Partenaire responsable</para>
    /// </summary>
    [AttributeLogicalName("msa_managingpartnerid")]
    [DisplayName("Partenaire responsable")]
    public EntityReference msa_managingpartnerid {
        get {
            return GetAttributeValue<EntityReference>("msa_managingpartnerid");
        }
        set {
            SetAttributeValue("msa_managingpartnerid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique le fuseau horaire principal sur lequel le contact travaille.</para>
    /// <para>Display Name: Fuseau horaire principal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primarytimezone")]
    [DisplayName("Fuseau horaire principal")]
    [Range(-1500, 1500)]
    public int? msdyn_PrimaryTimeZone {
        get {
            return GetAttributeValue<int?>("msdyn_primarytimezone");
        }
        set {
            SetAttributeValue("msdyn_primarytimezone", value);
        }
    }
    
    /// <summary>
    /// <para>Correspond aux enregistrements KPI du contact</para>
    /// <para>Display Name: Indicateur de performance clé</para>
    /// </summary>
    [AttributeLogicalName("msdyn_contactkpiid")]
    [DisplayName("Indicateur de performance clé")]
    public EntityReference msdyn_contactkpiid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_contactkpiid");
        }
        set {
            SetAttributeValue("msdyn_contactkpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquer l’influence d’achat à l’aide des étiquettes</para>
    /// <para>Display Name: Étiquettes d’influence sur la décision</para>
    /// </summary>
    [AttributeLogicalName("msdyn_decisioninfluencetag")]
    [DisplayName("Étiquettes d’influence sur la décision")]
    public Contact_msdyn_decisioninfluencetag? msdyn_decisioninfluencetag {
        get {
            return GetOptionSetValue<Contact_msdyn_decisioninfluencetag>("msdyn_decisioninfluencetag");
        }
        set {
            SetOptionSetValue("msdyn_decisioninfluencetag", value);
        }
    }
    
    /// <summary>
    /// <para>Indique que le contact a refusé le suivi Web.</para>
    /// <para>Display Name: Désactiver le suivi Web</para>
    /// </summary>
    [AttributeLogicalName("msdyn_disablewebtracking")]
    [DisplayName("Désactiver le suivi Web")]
    public bool? msdyn_disablewebtracking {
        get {
            return GetAttributeValue<bool?>("msdyn_disablewebtracking");
        }
        set {
            SetAttributeValue("msdyn_disablewebtracking", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le contact est désactivé ou non</para>
    /// <para>Display Name: Désactivation de RGPD</para>
    /// </summary>
    [AttributeLogicalName("msdyn_gdproptout")]
    [DisplayName("Désactivation de RGPD")]
    public bool? msdyn_gdproptout {
        get {
            return GetAttributeValue<bool?>("msdyn_gdproptout");
        }
        set {
            SetAttributeValue("msdyn_gdproptout", value);
        }
    }
    
    /// <summary>
    /// <para>Décrit si le contact est un assistant dans l’organigramme.</para>
    /// <para>Display Name: Assistant</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isassistantinorgchart")]
    [DisplayName("Assistant")]
    public bool? msdyn_isassistantinorgchart {
        get {
            return GetAttributeValue<bool?>("msdyn_isassistantinorgchart");
        }
        set {
            SetAttributeValue("msdyn_isassistantinorgchart", value);
        }
    }
    
    /// <summary>
    /// <para>Indique que le contact est considéré comme mineur dans sa juridiction.</para>
    /// <para>Display Name: Est mineur</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isminor")]
    [DisplayName("Est mineur")]
    public bool? msdyn_isminor {
        get {
            return GetAttributeValue<bool?>("msdyn_isminor");
        }
        set {
            SetAttributeValue("msdyn_isminor", value);
        }
    }
    
    /// <summary>
    /// <para>Indique que le contact est considéré comme mineur dans sa juridiction et a un accord parental.</para>
    /// <para>Display Name: Est mineur avec accord parental</para>
    /// </summary>
    [AttributeLogicalName("msdyn_isminorwithparentalconsent")]
    [DisplayName("Est mineur avec accord parental")]
    public bool? msdyn_isminorwithparentalconsent {
        get {
            return GetAttributeValue<bool?>("msdyn_isminorwithparentalconsent");
        }
        set {
            SetAttributeValue("msdyn_isminorwithparentalconsent", value);
        }
    }
    
    /// <summary>
    /// <para>Le contact appartient ou non au compte associé</para>
    /// <para>Display Name: Indicateur Externe à la société</para>
    /// </summary>
    [AttributeLogicalName("msdyn_orgchangestatus")]
    [DisplayName("Indicateur Externe à la société")]
    public Contact_msdyn_orgchangestatus? msdyn_orgchangestatus {
        get {
            return GetOptionSetValue<Contact_msdyn_orgchangestatus>("msdyn_orgchangestatus");
        }
        set {
            SetOptionSetValue("msdyn_orgchangestatus", value);
        }
    }
    
    /// <summary>
    /// <para>Indique la date et l’heure auxquelles la personne a accepté les termes et conditions du portail.</para>
    /// <para>Display Name: Date d’acceptation des termes du portail</para>
    /// </summary>
    [AttributeLogicalName("msdyn_portaltermsagreementdate")]
    [DisplayName("Date d’acceptation des termes du portail")]
    public DateTime? msdyn_portaltermsagreementdate {
        get {
            return GetAttributeValue<DateTime?>("msdyn_portaltermsagreementdate");
        }
        set {
            SetAttributeValue("msdyn_portaltermsagreementdate", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du segment associé à contact.</para>
    /// <para>Display Name: ID de segment</para>
    /// </summary>
    [AttributeLogicalName("msdyn_segmentid")]
    [DisplayName("ID de segment")]
    public EntityReference msdyn_segmentid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_segmentid");
        }
        set {
            SetAttributeValue("msdyn_segmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Langue de portail préférée de l’utilisateur</para>
    /// <para>Display Name: Langue par défaut</para>
    /// </summary>
    [AttributeLogicalName("mspp_userpreferredlcid")]
    [DisplayName("Langue par défaut")]
    public powerpagelanguages? mspp_userpreferredlcid {
        get {
            return GetOptionSetValue<powerpagelanguages>("mspp_userpreferredlcid");
        }
        set {
            SetOptionSetValue("mspp_userpreferredlcid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Pays (Adresse 1)</para>
    /// </summary>
    [AttributeLogicalName("nxt_address1_countryid")]
    [DisplayName("Pays (Adresse 1)")]
    public EntityReference nxt_Address1_CountryId {
        get {
            return GetAttributeValue<EntityReference>("nxt_address1_countryid");
        }
        set {
            SetAttributeValue("nxt_address1_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Pays (Adresse 2)</para>
    /// </summary>
    [AttributeLogicalName("nxt_address2_countryid")]
    [DisplayName("Pays (Adresse 2)")]
    public EntityReference nxt_Address2_CountryId {
        get {
            return GetAttributeValue<EntityReference>("nxt_address2_countryid");
        }
        set {
            SetAttributeValue("nxt_address2_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Pays (Adresse 3)</para>
    /// </summary>
    [AttributeLogicalName("nxt_address3_countryid")]
    [DisplayName("Pays (Adresse 3)")]
    public EntityReference nxt_Address3_CountryId {
        get {
            return GetAttributeValue<EntityReference>("nxt_address3_countryid");
        }
        set {
            SetAttributeValue("nxt_address3_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Civilité</para>
    /// </summary>
    [AttributeLogicalName("nxt_civilitycode")]
    [DisplayName("Civilité")]
    public nxt_civility? nxt_CivilityCode {
        get {
            return GetOptionSetValue<nxt_civility>("nxt_civilitycode");
        }
        set {
            SetOptionSetValue("nxt_civilitycode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Optin E-Mail</para>
    /// </summary>
    [AttributeLogicalName("nxt_emailoptincode")]
    [DisplayName("Optin E-Mail")]
    public nxt_optin? nxt_EMailOptinCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_emailoptincode");
        }
        set {
            SetOptionSetValue("nxt_emailoptincode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Stop PUB</para>
    /// </summary>
    [AttributeLogicalName("nxt_globaloptoutcode")]
    [DisplayName("Stop PUB")]
    public nxt_optin? nxt_GlobalOptoutCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_globaloptoutcode");
        }
        set {
            SetOptionSetValue("nxt_globaloptoutcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ID RGR</para>
    /// </summary>
    [AttributeLogicalName("nxt_idrgr")]
    [DisplayName("ID RGR")]
    [MaxLength(100)]
    public string nxt_IdRgr {
        get {
            return GetAttributeValue<string>("nxt_idrgr");
        }
        set {
            SetAttributeValue("nxt_idrgr", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Id Sigeo</para>
    /// </summary>
    [AttributeLogicalName("nxt_idsigeo")]
    [DisplayName("Id Sigeo")]
    [MaxLength(100)]
    public string nxt_IdSigeo {
        get {
            return GetAttributeValue<string>("nxt_idsigeo");
        }
        set {
            SetAttributeValue("nxt_idsigeo", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Collaborateur du groupe</para>
    /// </summary>
    [AttributeLogicalName("nxt_isgroupcollaborator")]
    [DisplayName("Collaborateur du groupe")]
    public bool? nxt_IsGroupCollaborator {
        get {
            return GetAttributeValue<bool?>("nxt_isgroupcollaborator");
        }
        set {
            SetAttributeValue("nxt_isgroupcollaborator", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Langue</para>
    /// </summary>
    [AttributeLogicalName("nxt_languagecode")]
    [DisplayName("Langue")]
    public msdyn_languagecodes? nxt_LanguageCode {
        get {
            return GetOptionSetValue<msdyn_languagecodes>("nxt_languagecode");
        }
        set {
            SetOptionSetValue("nxt_languagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Langue</para>
    /// </summary>
    [AttributeLogicalName("nxt_languageid")]
    [DisplayName("Langue")]
    public EntityReference nxt_LanguageId {
        get {
            return GetAttributeValue<EntityReference>("nxt_languageid");
        }
        set {
            SetAttributeValue("nxt_languageid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ID Legacy</para>
    /// </summary>
    [AttributeLogicalName("nxt_legacyid")]
    [DisplayName("ID Legacy")]
    [MaxLength(100)]
    public string nxt_LegacyId {
        get {
            return GetAttributeValue<string>("nxt_legacyid");
        }
        set {
            SetAttributeValue("nxt_legacyid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modifié par (système)</para>
    /// </summary>
    [AttributeLogicalName("nxt_modifiedbysystemcode")]
    [DisplayName("Modifié par (système)")]
    public nxt_systemcode? nxt_ModifiedBySystemCode {
        get {
            return GetOptionSetValue<nxt_systemcode>("nxt_modifiedbysystemcode");
        }
        set {
            SetOptionSetValue("nxt_modifiedbysystemcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modifié le (système)</para>
    /// </summary>
    [AttributeLogicalName("nxt_modifiedonbysystem")]
    [DisplayName("Modifié le (système)")]
    public DateTime? nxt_ModifiedOnBySystem {
        get {
            return GetAttributeValue<DateTime?>("nxt_modifiedonbysystem");
        }
        set {
            SetAttributeValue("nxt_modifiedonbysystem", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Optin SMS</para>
    /// </summary>
    [AttributeLogicalName("nxt_smsoptincode")]
    [DisplayName("Optin SMS")]
    public nxt_optin? nxt_SmsOptinCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_smsoptincode");
        }
        set {
            SetOptionSetValue("nxt_smsoptincode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sous-type</para>
    /// </summary>
    [AttributeLogicalName("nxt_subtypecode")]
    [DisplayName("Sous-type")]
    public nxt_contactsubtype? nxt_SubTypeCode {
        get {
            return GetOptionSetValue<nxt_contactsubtype>("nxt_subtypecode");
        }
        set {
            SetOptionSetValue("nxt_subtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Personne décédée</para>
    /// </summary>
    [AttributeLogicalName("nxt_isdead")]
    [DisplayName("Personne décédée")]
    public bool? nxt_isDead {
        get {
            return GetAttributeValue<bool?>("nxt_isdead");
        }
        set {
            SetAttributeValue("nxt_isdead", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Client VIP</para>
    /// </summary>
    [AttributeLogicalName("nxt_isvipcustomer")]
    [DisplayName("Client VIP")]
    public bool? nxt_isVipCustomer {
        get {
            return GetAttributeValue<bool?>("nxt_isvipcustomer");
        }
        set {
            SetAttributeValue("nxt_isvipcustomer", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement</para>
    /// <para>Display Name: parent_contactid</para>
    /// </summary>
    [AttributeLogicalName("parent_contactid")]
    [DisplayName("parent_contactid")]
    public EntityReference parent_contactid {
        get {
            return GetAttributeValue<EntityReference>("parent_contactid");
        }
        set {
            SetAttributeValue("parent_contactid", value);
        }
    }
    
    [RelationshipSchemaName("Contact_Email_EmailSender")]
    public IEnumerable<Email> Contact_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Contact_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Contact_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Emails")]
    public IEnumerable<Email> Contact_Emails {
        get {
            return GetRelatedEntities<Email>("Contact_Emails", null);
        }
        set {
            SetRelatedEntities("Contact_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Contact_Phonecalls")]
    public IEnumerable<PhoneCall> Contact_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Contact_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Contact_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
    public IEnumerable<Contact> Referencedcontact_customer_contacts {
        get {
            return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
    public IEnumerable<Contact> Referencedcontact_master_contact {
        get {
            return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("contact_parent_contact", EntityRole.Referenced)]
    public IEnumerable<Contact> Referencedcontact_parent_contact {
        get {
            return GetRelatedEntities<Contact>("contact_parent_contact", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("contact_parent_contact", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentcustomerid")]
    [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
    public Contact Referencingcontact_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
    public Contact Referencingcontact_master_contact {
        get {
            return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parent_contactid")]
    [RelationshipSchemaName("contact_parent_contact", EntityRole.Referencing)]
    public Contact Referencingcontact_parent_contact {
        get {
            return GetRelatedEntity<Contact>("contact_parent_contact", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("contact_parent_contact", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("account_primary_contact")]
    public IEnumerable<Account> account_primary_contact {
        get {
            return GetRelatedEntities<Account>("account_primary_contact", null);
        }
        set {
            SetRelatedEntities("account_primary_contact", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_contacts")]
    public BusinessUnit business_unit_contacts {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_contacts", null);
        }
        set {
            SetRelatedEntity("business_unit_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_activity_parties")]
    public IEnumerable<ActivityParty> contact_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("contact_activity_parties", null);
        }
        set {
            SetRelatedEntities("contact_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_as_primary_contact")]
    public IEnumerable<Incident> contact_as_primary_contact {
        get {
            return GetRelatedEntities<Incident>("contact_as_primary_contact", null);
        }
        set {
            SetRelatedEntities("contact_as_primary_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_as_responsible_contact")]
    public IEnumerable<Incident> contact_as_responsible_contact {
        get {
            return GetRelatedEntities<Incident>("contact_as_responsible_contact", null);
        }
        set {
            SetRelatedEntities("contact_as_responsible_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_connections1")]
    public IEnumerable<Connection> contact_connections1 {
        get {
            return GetRelatedEntities<Connection>("contact_connections1", null);
        }
        set {
            SetRelatedEntities("contact_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_connections2")]
    public IEnumerable<Connection> contact_connections2 {
        get {
            return GetRelatedEntities<Connection>("contact_connections2", null);
        }
        set {
            SetRelatedEntities("contact_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("parentcustomerid")]
    [RelationshipSchemaName("contact_customer_accounts")]
    public Account contact_customer_accounts {
        get {
            return GetRelatedEntity<Account>("contact_customer_accounts", null);
        }
        set {
            SetRelatedEntity("contact_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_nxt_Messages")]
    public IEnumerable<nxt_Message> contact_nxt_Messages {
        get {
            return GetRelatedEntities<nxt_Message>("contact_nxt_Messages", null);
        }
        set {
            SetRelatedEntities("contact_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("contact_owning_user")]
    public SystemUser contact_owning_user {
        get {
            return GetRelatedEntity<SystemUser>("contact_owning_user", null);
        }
        set {
            SetRelatedEntity("contact_owning_user", null, value);
        }
    }
    
    [RelationshipSchemaName("contactinvoices_association")]
    public IEnumerable<Invoice> contactinvoices_association {
        get {
            return GetRelatedEntities<Invoice>("contactinvoices_association", null);
        }
        set {
            SetRelatedEntities("contactinvoices_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contactorders_association")]
    public IEnumerable<SalesOrder> contactorders_association {
        get {
            return GetRelatedEntities<SalesOrder>("contactorders_association", null);
        }
        set {
            SetRelatedEntities("contactorders_association", null, value);
        }
    }
    
    [RelationshipSchemaName("contactquotes_association")]
    public IEnumerable<Quote> contactquotes_association {
        get {
            return GetRelatedEntities<Quote>("contactquotes_association", null);
        }
        set {
            SetRelatedEntities("contactquotes_association", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_customer_contacts")]
    public IEnumerable<Incident> incident_customer_contacts {
        get {
            return GetRelatedEntities<Incident>("incident_customer_contacts", null);
        }
        set {
            SetRelatedEntities("incident_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_customer_contacts")]
    public IEnumerable<Invoice> invoice_customer_contacts {
        get {
            return GetRelatedEntities<Invoice>("invoice_customer_contacts", null);
        }
        set {
            SetRelatedEntities("invoice_customer_contacts", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_contact_createdonbehalfby")]
    public SystemUser lk_contact_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
    public SystemUser lk_contact_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_contactbase_createdby")]
    public SystemUser lk_contactbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_contactbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_contactbase_modifiedby")]
    public SystemUser lk_contactbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_contactbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("msa_managingpartnerid")]
    [RelationshipSchemaName("msa_contact_managingpartner")]
    public Account msa_contact_managingpartner {
        get {
            return GetRelatedEntity<Account>("msa_contact_managingpartner", null);
        }
        set {
            SetRelatedEntity("msa_contact_managingpartner", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_Contact_Account")]
    public IEnumerable<Account> nxt_Contact_Account {
        get {
            return GetRelatedEntities<Account>("nxt_Contact_Account", null);
        }
        set {
            SetRelatedEntities("nxt_Contact_Account", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_address1_countryid")]
    [RelationshipSchemaName("nxt_contact_Address1_CountryId_nxt_country")]
    public nxt_country nxt_contact_Address1_CountryId_nxt_country {
        get {
            return GetRelatedEntity<nxt_country>("nxt_contact_Address1_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntity("nxt_contact_Address1_CountryId_nxt_country", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_address2_countryid")]
    [RelationshipSchemaName("nxt_contact_Address2_CountryId_nxt_country")]
    public nxt_country nxt_contact_Address2_CountryId_nxt_country {
        get {
            return GetRelatedEntity<nxt_country>("nxt_contact_Address2_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntity("nxt_contact_Address2_CountryId_nxt_country", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_address3_countryid")]
    [RelationshipSchemaName("nxt_contact_Address3_CountryId_nxt_country")]
    public nxt_country nxt_contact_Address3_CountryId_nxt_country {
        get {
            return GetRelatedEntity<nxt_country>("nxt_contact_Address3_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntity("nxt_contact_Address3_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_nxt_contractingrole")]
    public IEnumerable<nxt_ContractingRole> nxt_contact_nxt_contractingrole {
        get {
            return GetRelatedEntities<nxt_ContractingRole>("nxt_contact_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntities("nxt_contact_nxt_contractingrole", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_nxt_contributor_21")]
    public IEnumerable<nxt_Contributor> nxt_contact_nxt_contributor_21 {
        get {
            return GetRelatedEntities<nxt_Contributor>("nxt_contact_nxt_contributor_21", null);
        }
        set {
            SetRelatedEntities("nxt_contact_nxt_contributor_21", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_nxt_personaldata_CustomerId")]
    public IEnumerable<nxt_PersonalData> nxt_contact_nxt_personaldata_CustomerId {
        get {
            return GetRelatedEntities<nxt_PersonalData>("nxt_contact_nxt_personaldata_CustomerId", null);
        }
        set {
            SetRelatedEntities("nxt_contact_nxt_personaldata_CustomerId", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_customerfolder_nxt_PrimaryContactId_conta")]
    public IEnumerable<nxt_customerfolder> nxt_customerfolder_nxt_PrimaryContactId_conta {
        get {
            return GetRelatedEntities<nxt_customerfolder>("nxt_customerfolder_nxt_PrimaryContactId_conta", null);
        }
        set {
            SetRelatedEntities("nxt_customerfolder_nxt_PrimaryContactId_conta", null, value);
        }
    }
    
    [RelationshipSchemaName("order_customer_contacts")]
    public IEnumerable<SalesOrder> order_customer_contacts {
        get {
            return GetRelatedEntities<SalesOrder>("order_customer_contacts", null);
        }
        set {
            SetRelatedEntities("order_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_customer_contacts")]
    public IEnumerable<Quote> quote_customer_contacts {
        get {
            return GetRelatedEntities<Quote>("quote_customer_contacts", null);
        }
        set {
            SetRelatedEntities("quote_customer_contacts", null, value);
        }
    }
    
    [AttributeLogicalName("preferredsystemuserid")]
    [RelationshipSchemaName("system_user_contacts")]
    public SystemUser system_user_contacts {
        get {
            return GetRelatedEntity<SystemUser>("system_user_contacts", null);
        }
        set {
            SetRelatedEntity("system_user_contacts", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_contacts")]
    public Team team_contacts {
        get {
            return GetRelatedEntity<Team>("team_contacts", null);
        }
        set {
            SetRelatedEntity("team_contacts", null, value);
        }
    }
    
    public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyIdRgr'</para>
    /// </summary>
    public static Contact Retrieve_nxt_AlternateKeyIdRgr(IOrganizationService service, string nxt_IdRgr, params Expression<Func<Contact,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_idrgr", nxt_IdRgr);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyIdRgr'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyIdRgr(string nxt_IdRgr) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_idrgr", nxt_IdRgr);
    }
}

[DataContract()]
public enum ContactState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum Contact_AccountRoleCode {
    
    [EnumMember()]
    [OptionSetMetadata("Décisionnaire", Index=0, Lcid=1036)]
    Décisionnaire = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Employé", Index=1, Lcid=1036)]
    Employé = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Influenceur", Index=2, Lcid=1036)]
    Influenceur = 3,
}

[DataContract()]
public enum Contact_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Principale", Index=0, Lcid=1036, Description="")]
    Principale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Secondaire", Index=1, Lcid=1036, Description="")]
    Secondaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=2, Lcid=1036, Description="")]
    Courrier = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facture", Index=3, Lcid=1036, Description="")]
    Facture = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Paiement", Index=4, Lcid=1036, Description="")]
    Paiement = 5,
}

[DataContract()]
public enum Contact_Address1_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FAB", Index=0, Lcid=1036)]
    FAB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Sans supplément", Index=1, Lcid=1036)]
    Sanssupplément = 2,
}

[DataContract()]
public enum Contact_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Courrier postal", Index=0, Lcid=1036)]
    Courrierpostal = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Collecte", Index=1, Lcid=1036)]
    Collecte = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Autre", Index=2, Lcid=1036)]
    Autre = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Transporteur", Index=3, Lcid=1036)]
    Transporteur = 17,
}

[DataContract()]
public enum Contact_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Principale", Index=0, Lcid=1036, Description="")]
    Principale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Secondaire", Index=1, Lcid=1036, Description="")]
    Secondaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=2, Lcid=1036, Description="")]
    Courrier = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facture", Index=3, Lcid=1036, Description="")]
    Facture = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Paiement", Index=4, Lcid=1036, Description="")]
    Paiement = 5,
}

[DataContract()]
public enum Contact_Address2_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_Address3_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Principale", Index=0, Lcid=1036, Description="")]
    Principale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Secondaire", Index=1, Lcid=1036, Description="")]
    Secondaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=2, Lcid=1036, Description="")]
    Courrier = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facture", Index=3, Lcid=1036, Description="")]
    Facture = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Paiement", Index=4, Lcid=1036, Description="")]
    Paiement = 5,
}

[DataContract()]
public enum Contact_Address3_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_Address3_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_CustomerSizeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_CustomerTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Client", Index=0, Lcid=1036, Description="")]
    Client = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Intervenant", Index=1, Lcid=1036, Description="")]
    Intervenant = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Client Grand Compte ", Index=2, Lcid=1036, Description="")]
    ClientGrandCompte = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Contact", Index=3, Lcid=1036, Description="")]
    Contact = 4,
}

[DataContract()]
public enum Contact_EducationCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_FamilyStatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Célibataire", Index=0, Lcid=1036)]
    Célibataire = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Marié(e)", Index=1, Lcid=1036)]
    Mariée = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Divorcé(e)", Index=2, Lcid=1036)]
    Divorcée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Veuf(ve)", Index=3, Lcid=1036)]
    Veufve = 4,
}

[DataContract()]
public enum Contact_GenderCode {
    
    [EnumMember()]
    [OptionSetMetadata("Homme", Index=0, Lcid=1036)]
    Homme = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Femme", Index=1, Lcid=1036)]
    Femme = 2,
}

[DataContract()]
public enum Contact_HasChildrenCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_LeadSourceCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30J", Index=0, Lcid=1036)]
    Net30J = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60J", Index=1, Lcid=1036)]
    Net60J = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Au comptant", Index=2, Lcid=1036)]
    Aucomptant = 10,
    
    [EnumMember()]
    [OptionSetMetadata("À réception de facture", Index=3, Lcid=1036)]
    Àréceptiondefacture = 15,
    
    [EnumMember()]
    [OptionSetMetadata("30J FDM", Index=4, Lcid=1036)]
    _30JFDM = 16,
    
    [EnumMember()]
    [OptionSetMetadata("60J FDM", Index=5, Lcid=1036)]
    _60JFDM = 17,
}

[DataContract()]
public enum Contact_PreferredAppointmentDayCode {
    
    [EnumMember()]
    [OptionSetMetadata("Dimanche", Index=0, Lcid=1036)]
    Dimanche = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Lundi", Index=1, Lcid=1036)]
    Lundi = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Mardi", Index=2, Lcid=1036)]
    Mardi = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Mercredi", Index=3, Lcid=1036)]
    Mercredi = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Jeudi", Index=4, Lcid=1036)]
    Jeudi = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Vendredi", Index=5, Lcid=1036)]
    Vendredi = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Samedi", Index=6, Lcid=1036)]
    Samedi = 6,
}

[DataContract()]
public enum Contact_PreferredAppointmentTimeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Matin", Index=0, Lcid=1036)]
    Matin = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Après-midi", Index=1, Lcid=1036)]
    Aprèsmidi = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Soir", Index=2, Lcid=1036)]
    Soir = 3,
}

[DataContract()]
public enum Contact_PreferredContactMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Sans préférence", Index=0, Lcid=1036, Description="")]
    Sanspréférence = 1,
    
    [EnumMember()]
    [OptionSetMetadata("E-mail", Index=1, Lcid=1036, Description="")]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone mobile", Index=2, Lcid=1036, Description="")]
    Téléphonemobile = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone personnel", Index=3, Lcid=1036, Description="")]
    Téléphonepersonnel = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone bureau", Index=4, Lcid=1036, Description="")]
    Téléphonebureau = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=5, Lcid=1036, Description="")]
    Courrier = 6,
}

[DataContract()]
public enum Contact_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}

[DataContract()]
public enum Contact_TerritoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Contact_msdyn_decisioninfluencetag {
    
    [EnumMember()]
    [OptionSetMetadata("Décisionnaire", Index=0, Lcid=1036, Color="#32C100")]
    Décisionnaire = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Influenceur", Index=1, Lcid=1036, Color="#FFD74B")]
    Influenceur = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Bloqueur", Index=2, Lcid=1036, Color="#FF0000")]
    Bloqueur = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Inconnu", Index=3, Lcid=1036, Color="#E1DFDD")]
    Inconnu = 3,
}

[DataContract()]
public enum Contact_msdyn_orgchangestatus {
    
    [EnumMember()]
    [OptionSetMetadata("Aucun commentaire", Index=0, Lcid=1036, Color="#0000ff")]
    Aucuncommentaire = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Externe à la société", Index=1, Lcid=1036, Color="#0000ff")]
    Externeàlasociété = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Ignorer", Index=2, Lcid=1036, Color="#0000ff")]
    Ignorer = 2,
}
