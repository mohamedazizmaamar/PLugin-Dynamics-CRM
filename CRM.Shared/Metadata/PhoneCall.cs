//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Activité de suivi d'un appel téléphonique.</para>
/// <para>Display Name: Appel téléphonique</para>
/// </summary>
[EntityLogicalName("phonecall")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class PhoneCall : ExtendedEntity<PhoneCallState, PhoneCall_StatusCode> {
    
    public const string EntityLogicalName = "phonecall";
    
    public const int EntityTypeCode = 4210;
    
    public PhoneCall() : 
            base(EntityLogicalName) {
    }
    
    public PhoneCall(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'activité d'appel téléphonique.</para>
    /// <para>Display Name: Appel téléphonique</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Appel téléphonique")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Paramètres supplémentaires</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Paramètres supplémentaires")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le type de l'activité.</para>
    /// <para>Display Name: Type d'activité</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Type d\'activité")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre de minutes passées pour l'appel téléphonique. La durée est utilisée dans les rapports.</para>
    /// <para>Display Name: Durée</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Durée")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure de fin réelles de l'appel téléphonique. Par défaut, la date et l'heure auxquelles l'activité est terminée ou annulée sont affichées, mais elles peuvent être modifiées pour tenir compte de la durée réelle de l'appel téléphonique.</para>
    /// <para>Display Name: Fin réelle</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Fin réelle")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la date et l'heure de début réelles de l'appel téléphonique. Par défaut, la date et l'heure auxquelles l'activité a été créée sont affichées, mais elles peuvent être modifiées pour tenir compte de la durée réelle de l'appel téléphonique.</para>
    /// <para>Display Name: Début réel</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Début réel")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une catégorie pour identifier le type de l'appel téléphonique, comme le rassemblement de prospects ou le suivi de clients, pour lier l'appel téléphonique à un groupe professionnel ou à une fonction.</para>
    /// <para>Display Name: Catégorie</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Catégorie")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la création de l'enregistrement. Celles-ci sont affichées dans le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire l'appel téléphonique, comme le message principal ou les produits et les services dont il a été question.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la direction de l'appel téléphonique, entrant ou sortant.</para>
    /// <para>Display Name: Direction</para>
    /// </summary>
    [AttributeLogicalName("directioncode")]
    [DisplayName("Direction")]
    public bool? DirectionCode {
        get {
            return GetAttributeValue<bool?>("directioncode");
        }
        set {
            SetAttributeValue("directioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs d'argent de l'enregistrement de la devise locale en devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Entrez le compte, le contact, le prospect ou l'utilisateur qui a passé l'appel téléphonique.</para>
    /// <para>Display Name: Origine de l'appel</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("Origine de l\'appel")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l'activité d'appel téléphonique a été facturée dans le cadre de la résolution d'un incident.</para>
    /// <para>Display Name: Est facturé</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Est facturé")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l’activité est régulière ou de type événement.</para>
    /// <para>Display Name: Est une activité régulière</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Est une activité régulière")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l'activité d'appel téléphonique a été créée à partir d'une règle de workflow.</para>
    /// <para>Display Name: Est créé(e) par le workflow</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Est créé(e) par le workflow")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si un message vocal a été laissé.</para>
    /// <para>Display Name: Message vocal laissé</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Message vocal laissé")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la dernière mise à jour de l'enregistrement. La date et l'heure sont affichées selon le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement à la place d'un autre utilisateur.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée, en minutes, de la suspension de l'enregistrement.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez l'utilisateur ou l'équipe affectée à la gestion de l'enregistrement. Ce champ est mis à jour à chaque fois que l'enregistrement est attribué à un utilisateur différent.</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'activité d'appel téléphonique.</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’équipe propriétaire de l’activité d’appel téléphonique.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur propriétaire de l’activité d’appel téléphonique.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone.</para>
    /// <para>Display Name: Numéro de téléphone</para>
    /// </summary>
    [AttributeLogicalName("phonenumber")]
    [DisplayName("Numéro de téléphone")]
    [MaxLength(200)]
    public string PhoneNumber {
        get {
            return GetAttributeValue<string>("phonenumber");
        }
        set {
            SetAttributeValue("phonenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une courte description de l'objectif ou du sujet principal de l'appel téléphonique.</para>
    /// <para>Display Name: Sujet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Sujet")]
    [MaxLength(200)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la priorité afin que les clients préférés ou les problèmes critiques soient traités rapidement.</para>
    /// <para>Display Name: Priorité</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priorité")]
    public PhoneCall_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<PhoneCall_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'enregistrement concerné par l'appel téléphonique.</para>
    /// <para>Display Name: Concernant</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Concernant")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement Appel téléphonique.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cet appel téléphonique. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Durée planifiée de l'activité d'appel téléphonique, spécifiée en minutes.</para>
    /// <para>Display Name: Durée planifiée</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Durée planifiée")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure d'échéance prévues.</para>
    /// <para>Display Name: Échéance</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Échéance")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure d'échéance prévues.</para>
    /// <para>Display Name: Date de début</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Date de début")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique d'un service associé.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de tri des activités.</para>
    /// <para>Display Name: Date de tri</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Date de tri")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si l'appel téléphonique est ouvert, terminé ou annulé. Les appels téléphoniques terminés et annulés sont en lecture seule et ne peuvent pas être modifiés.</para>
    /// <para>Display Name: Statut d'activité</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut d\'activité")]
    public PhoneCallState? StateCode {
        get {
            return GetOptionSetValue<PhoneCallState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le statut de l'appel téléphonique.</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public PhoneCall_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<PhoneCall_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une sous-catégorie pour identifier le type de l'appel téléphonique et associer l'activité à un produit, une région de vente, un groupe professionnel ou une fonction spécifique.</para>
    /// <para>Display Name: Sous-catégorie</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sous-catégorie")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une courte description de l'objectif ou du sujet principal de l'appel téléphonique.</para>
    /// <para>Display Name: Sujet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Sujet")]
    [MaxLength(200)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Abonnement</para>
    /// </summary>
    [AttributeLogicalName("subscriptionid")]
    [DisplayName("Abonnement")]
    public Guid? SubscriptionId {
        get {
            return GetAttributeValue<Guid?>("subscriptionid");
        }
        set {
            SetAttributeValue("subscriptionid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez le compte, le contact, le prospect ou l'utilisateur destinataire de l'appel téléphonique.</para>
    /// <para>Display Name: Destination de l'appel</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("Destination de l\'appel")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale pour l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code de fuseau horaire utilisé à la création de l’enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version de l’activité d’appel téléphonique.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Display Name: ID Externe</para>
    /// </summary>
    [AttributeLogicalName("nxt_idexternal")]
    [DisplayName("ID Externe")]
    [MaxLength(100)]
    public string nxt_IdExternal {
        get {
            return GetAttributeValue<string>("nxt_idexternal");
        }
        set {
            SetAttributeValue("nxt_idexternal", value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Phonecalls")]
    public Account Account_Phonecalls {
        get {
            return GetRelatedEntity<Account>("Account_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Account_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Phonecalls")]
    public Contact Contact_Phonecalls {
        get {
            return GetRelatedEntity<Contact>("Contact_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Contact_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Phonecalls")]
    public Incident Incident_Phonecalls {
        get {
            return GetRelatedEntity<Incident>("Incident_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Incident_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Phonecalls")]
    public Invoice Invoice_Phonecalls {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Invoice_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("PhoneCall_QueueItem")]
    public IEnumerable<QueueItem> PhoneCall_QueueItem {
        get {
            return GetRelatedEntities<QueueItem>("PhoneCall_QueueItem", null);
        }
        set {
            SetRelatedEntities("PhoneCall_QueueItem", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Phonecalls")]
    public Quote Quote_Phonecalls {
        get {
            return GetRelatedEntity<Quote>("Quote_Phonecalls", null);
        }
        set {
            SetRelatedEntity("Quote_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Phonecalls")]
    public SalesOrder SalesOrder_Phonecalls {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Phonecalls", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_phone_call_activities")]
    public BusinessUnit business_unit_phone_call_activities {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_phone_call_activities", null);
        }
        set {
            SetRelatedEntity("business_unit_phone_call_activities", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_phonecall_createdby")]
    public SystemUser lk_phonecall_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_createdby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
    public SystemUser lk_phonecall_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_phonecall_modifiedby")]
    public SystemUser lk_phonecall_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
    public SystemUser lk_phonecall_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_phonecall_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_customerfolder_PhoneCalls")]
    public nxt_customerfolder nxt_customerfolder_PhoneCalls {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_customerfolder_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("nxt_customerfolder_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_program_PhoneCalls")]
    public nxt_Program nxt_program_PhoneCalls {
        get {
            return GetRelatedEntity<nxt_Program>("nxt_program_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("nxt_program_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierintervention_PhoneCalls")]
    public nxt_SupplierIntervention nxt_supplierintervention_PhoneCalls {
        get {
            return GetRelatedEntity<nxt_SupplierIntervention>("nxt_supplierintervention_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("nxt_supplierintervention_PhoneCalls", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierquote_PhoneCalls")]
    public nxt_SupplierQuote nxt_supplierquote_PhoneCalls {
        get {
            return GetRelatedEntity<nxt_SupplierQuote>("nxt_supplierquote_PhoneCalls", null);
        }
        set {
            SetRelatedEntity("nxt_supplierquote_PhoneCalls", null, value);
        }
    }
    
    [RelationshipSchemaName("phonecall_activity_parties")]
    public IEnumerable<ActivityParty> phonecall_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("phonecall_activity_parties", null);
        }
        set {
            SetRelatedEntities("phonecall_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("phonecall_connections1")]
    public IEnumerable<Connection> phonecall_connections1 {
        get {
            return GetRelatedEntities<Connection>("phonecall_connections1", null);
        }
        set {
            SetRelatedEntities("phonecall_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("phonecall_connections2")]
    public IEnumerable<Connection> phonecall_connections2 {
        get {
            return GetRelatedEntities<Connection>("phonecall_connections2", null);
        }
        set {
            SetRelatedEntities("phonecall_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_phonecall")]
    public Team team_phonecall {
        get {
            return GetRelatedEntity<Team>("team_phonecall", null);
        }
        set {
            SetRelatedEntity("team_phonecall", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_phonecall")]
    public SystemUser user_phonecall {
        get {
            return GetRelatedEntity<SystemUser>("user_phonecall", null);
        }
        set {
            SetRelatedEntity("user_phonecall", null, value);
        }
    }
    
    public static PhoneCall Retrieve(IOrganizationService service, Guid id, params Expression<Func<PhoneCall,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyIdExterne'</para>
    /// </summary>
    public static PhoneCall Retrieve_nxt_AlternateKeyIdExterne(IOrganizationService service, string nxt_IdExternal, params Expression<Func<PhoneCall,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_idexternal", nxt_IdExternal);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyIdExterne'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyIdExterne(string nxt_IdExternal) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_idexternal", nxt_IdExternal);
    }
}

[DataContract()]
public enum PhoneCallState {
    
    [EnumMember()]
    [OptionSetMetadata("Ouvert", Index=0, Lcid=1036)]
    Ouvert = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé", Index=1, Lcid=1036)]
    Terminé = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé", Index=2, Lcid=1036)]
    Annulé = 2,
}

[DataContract()]
public enum PhoneCall_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Faible", Index=0, Lcid=1036)]
    Faible = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normale", Index=1, Lcid=1036)]
    Normale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Haute", Index=2, Lcid=1036)]
    Haute = 2,
}

[DataContract()]
public enum PhoneCall_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Ouvert(e)", Index=0, Lcid=1036, Color="#3b79b7")]
    Ouverte = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Fabriqué", Index=1, Lcid=1036, Color="#358717")]
    Fabriqué = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé(e)", Index=2, Lcid=1036, Color="#666666")]
    Annulée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Reçu", Index=3, Lcid=1036, Color="#358717")]
    Reçu = 4,
}
