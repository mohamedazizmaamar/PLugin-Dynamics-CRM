//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Activité effectuée via des protocoles de courrier électronique.</para>
/// <para>Display Name: Courrier électronique</para>
/// </summary>
[EntityLogicalName("email")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Email : ExtendedEntity<EmailState, Email_StatusCode> {
    
    public const string EntityLogicalName = "email";
    
    public const int EntityTypeCode = 4202;
    
    public Email() : 
            base(EntityLogicalName) {
    }
    
    public Email(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'activité de courrier électronique.</para>
    /// <para>Display Name: Message électronique</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Message électronique")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Entité qui a accepté le courrier électronique</para>
    /// <para>Display Name: Entité qui a accepté</para>
    /// </summary>
    [AttributeLogicalName("acceptingentityid")]
    [DisplayName("Entité qui a accepté")]
    public EntityReference AcceptingEntityId {
        get {
            return GetAttributeValue<EntityReference>("acceptingentityid");
        }
        set {
            SetAttributeValue("acceptingentityid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Paramètres supplémentaires</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Paramètres supplémentaires")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le type de l'activité.</para>
    /// <para>Display Name: Type d'activité</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Type d\'activité")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre de minutes passées à la création et à l'envoi du courrier électronique. La durée est utilisée dans les rapports.</para>
    /// <para>Display Name: Durée</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Durée")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure de fin réelles du courrier électronique. Par défaut, la date et l'heure auxquelles l'activité est terminée ou annulée sont affichées, mais elles peuvent être modifiées pour tenir compte de la durée réelle de la création et de l'envoi du courrier électronique.</para>
    /// <para>Display Name: Fin réelle</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Fin réelle")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la date et l'heure de début réelles du courrier électronique. Par défaut, la date et l'heure auxquelles l'activité est créée sont affichées, mais elles peuvent être modifiées pour tenir compte de la durée réelle de la création et de l'envoi du courrier électronique.</para>
    /// <para>Display Name: Début réel</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Début réel")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre de pièces jointes du message électronique.</para>
    /// <para>Display Name: Nombre de pièces jointes</para>
    /// </summary>
    [AttributeLogicalName("attachmentcount")]
    [DisplayName("Nombre de pièces jointes")]
    [Range(0, 2147483647)]
    public int? AttachmentCount {
        get {
            return GetAttributeValue<int?>("attachmentcount");
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre de vues de la pièce jointe au courrier électronique.</para>
    /// <para>Display Name: Nombre d'ouvertures de pièce jointe</para>
    /// </summary>
    [AttributeLogicalName("attachmentopencount")]
    [DisplayName("Nombre d\'ouvertures de pièce jointe")]
    [Range(0, 2147483647)]
    public int? AttachmentOpenCount {
        get {
            return GetAttributeValue<int?>("attachmentopencount");
        }
        set {
            SetAttributeValue("attachmentopencount", value);
        }
    }
    
    /// <summary>
    /// <para>Hachage de base d'index de conversation.</para>
    /// <para>Display Name: Index de conversation (Hachage)</para>
    /// </summary>
    [AttributeLogicalName("baseconversationindexhash")]
    [DisplayName("Index de conversation (Hachage)")]
    [Range(-2147483648, 2147483647)]
    public int? BaseConversationIndexHash {
        get {
            return GetAttributeValue<int?>("baseconversationindexhash");
        }
        set {
            SetAttributeValue("baseconversationindexhash", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez les destinataires qui sont inclus dans la distribution du courrier électronique, mais ne sont pas affichés pour les autres.</para>
    /// <para>Display Name: Cci</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("Cci")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une catégorie pour identifier le type de courrier électronique, comme l'intervention auprès des prospects, le suivi de clients ou l'alerte de service pour lier le courrier électronique à un groupe professionnel ou à une fonction.</para>
    /// <para>Display Name: Catégorie</para>
    /// </summary>
    [AttributeLogicalName("category")]
    [DisplayName("Catégorie")]
    [MaxLength(250)]
    public string Category {
        get {
            return GetAttributeValue<string>("category");
        }
        set {
            SetAttributeValue("category", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez les destinataires qui doivent être en copie du courrier électronique.</para>
    /// <para>Display Name: Cc</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("Cc")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le corps du message est compressé.</para>
    /// <para>Display Name: Compression</para>
    /// </summary>
    [AttributeLogicalName("compressed")]
    [DisplayName("Compression")]
    public bool? Compressed {
        get {
            return GetAttributeValue<bool?>("compressed");
        }
    }
    
    /// <summary>
    /// <para>Identificateur pour toutes les réponses par voie électronique pour cette conversation.</para>
    /// <para>Display Name: Index de conversation</para>
    /// </summary>
    [AttributeLogicalName("conversationindex")]
    [DisplayName("Index de conversation")]
    [MaxLength(2048)]
    public string ConversationIndex {
        get {
            return GetAttributeValue<string>("conversationindex");
        }
    }
    
    /// <summary>
    /// <para>ID de suivi de la conversation.</para>
    /// <para>Display Name: ID de suivi de la conversation</para>
    /// </summary>
    [AttributeLogicalName("conversationtrackingid")]
    [DisplayName("ID de suivi de la conversation")]
    public Guid? ConversationTrackingId {
        get {
            return GetAttributeValue<Guid?>("conversationtrackingid");
        }
        set {
            SetAttributeValue("conversationtrackingid", value);
        }
    }
    
    /// <summary>
    /// <para>ID d’activité corrélée</para>
    /// <para>Display Name: ID d’activité corrélée</para>
    /// </summary>
    [AttributeLogicalName("correlatedactivityid")]
    [DisplayName("ID d’activité corrélée")]
    public EntityReference CorrelatedActivityId {
        get {
            return GetAttributeValue<EntityReference>("correlatedactivityid");
        }
        set {
            SetAttributeValue("correlatedactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique la correspondance d’un courrier électronique à un courrier électronique existant dans Microsoft Dynamics 365. XHeader et CustomCorrelation ne sont pas utilisés. Utilisation par le système uniquement.</para>
    /// <para>Display Name: Mode de corrélation</para>
    /// </summary>
    [AttributeLogicalName("correlationmethod")]
    [DisplayName("Mode de corrélation")]
    public Email_CorrelationMethod? CorrelationMethod {
        get {
            return GetOptionSetValue<Email_CorrelationMethod>("correlationmethod");
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la création de l'enregistrement. Celles-ci sont affichées dans le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Saisissez la date et l'heure d'envoi prévues du courrier électronique.</para>
    /// <para>Display Name: Envoyer ultérieurement</para>
    /// </summary>
    [AttributeLogicalName("delayedemailsendtime")]
    [DisplayName("Envoyer ultérieurement")]
    public DateTime? DelayedEmailSendTime {
        get {
            return GetAttributeValue<DateTime?>("delayedemailsendtime");
        }
        set {
            SetAttributeValue("delayedemailsendtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre de tentatives d'envoi du courrier électronique Le nombre sert d'indicateur des problèmes d'acheminement du courrier électronique.</para>
    /// <para>Display Name: Nombre de tentatives de remise</para>
    /// </summary>
    [AttributeLogicalName("deliveryattempts")]
    [DisplayName("Nombre de tentatives de remise")]
    [Range(0, 1000000000)]
    public int? DeliveryAttempts {
        get {
            return GetAttributeValue<int?>("deliveryattempts");
        }
        set {
            SetAttributeValue("deliveryattempts", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la priorité de livraison du courrier électronique au serveur de messagerie.</para>
    /// <para>Display Name: Priorité de livraison</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Priorité de livraison")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si l'expéditeur doit recevoir la confirmation de remise du courrier électronique.</para>
    /// <para>Display Name: Accusé de réception demandé</para>
    /// </summary>
    [AttributeLogicalName("deliveryreceiptrequested")]
    [DisplayName("Accusé de réception demandé")]
    public bool? DeliveryReceiptRequested {
        get {
            return GetAttributeValue<bool?>("deliveryreceiptrequested");
        }
        set {
            SetAttributeValue("deliveryreceiptrequested", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le texte de bienvenue et le corps du message électronique.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la direction du courrier électronique, entrant ou sortant.</para>
    /// <para>Display Name: Direction</para>
    /// </summary>
    [AttributeLogicalName("directioncode")]
    [DisplayName("Direction")]
    public bool? DirectionCode {
        get {
            return GetAttributeValue<bool?>("directioncode");
        }
        set {
            SetAttributeValue("directioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure d'expiration d'un rappel d'un courrier électronique.</para>
    /// <para>Display Name: Heure d'expiration du rappel par courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailreminderexpirytime")]
    [DisplayName("Heure d\'expiration du rappel par courrier électronique")]
    public DateTime? EmailReminderExpiryTime {
        get {
            return GetAttributeValue<DateTime?>("emailreminderexpirytime");
        }
        set {
            SetAttributeValue("emailreminderexpirytime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le statut du rappel par courrier électronique.</para>
    /// <para>Display Name: Statut du rappel par courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailreminderstatus")]
    [DisplayName("Statut du rappel par courrier électronique")]
    public Email_EmailReminderStatus? EmailReminderStatus {
        get {
            return GetOptionSetValue<Email_EmailReminderStatus>("emailreminderstatus");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Texte du rappel par courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailremindertext")]
    [DisplayName("Texte du rappel par courrier électronique")]
    [MaxLength(1250)]
    public string EmailReminderText {
        get {
            return GetAttributeValue<string>("emailremindertext");
        }
        set {
            SetAttributeValue("emailremindertext", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le type de rappel par courrier électronique.</para>
    /// <para>Display Name: Type de rappel par courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailremindertype")]
    [DisplayName("Type de rappel par courrier électronique")]
    public Email_EmailReminderType? EmailReminderType {
        get {
            return GetOptionSetValue<Email_EmailReminderType>("emailremindertype");
        }
        set {
            SetOptionSetValue("emailremindertype", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'expéditeur du message électronique.</para>
    /// <para>Display Name: Expéditeur</para>
    /// </summary>
    [AttributeLogicalName("emailsender")]
    [DisplayName("Expéditeur")]
    public EntityReference EmailSender {
        get {
            return GetAttributeValue<EntityReference>("emailsender");
        }
    }
    
    /// <summary>
    /// <para>ID de suivi du courrier électronique.</para>
    /// <para>Display Name: ID de suivi du courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailtrackingid")]
    [DisplayName("ID de suivi du courrier électronique")]
    public Guid? EmailTrackingId {
        get {
            return GetAttributeValue<Guid?>("emailtrackingid");
        }
        set {
            SetAttributeValue("emailtrackingid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs d'argent de l'enregistrement de la devise locale en devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si la messagerie électronique autorise le suivi des activités de destinataire envoyées depuis Microsoft Dynamics 365. Cet état de préférence utilisateur peut être remplacé par l'état évalué par le système.</para>
    /// <para>Display Name: Suivi</para>
    /// </summary>
    [AttributeLogicalName("followemailuserpreference")]
    [DisplayName("Suivi")]
    public bool? FollowEmailUserPreference {
        get {
            return GetAttributeValue<bool?>("followemailuserpreference");
        }
        set {
            SetAttributeValue("followemailuserpreference", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez l'expéditeur du courrier électronique.</para>
    /// <para>Display Name: De</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("De")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'ID du message électronique dont cette activité électronique constitue une réponse.</para>
    /// <para>Display Name: En réponse au message</para>
    /// </summary>
    [AttributeLogicalName("inreplyto")]
    [DisplayName("En réponse au message")]
    [MaxLength(320)]
    public string InReplyTo {
        get {
            return GetAttributeValue<string>("inreplyto");
        }
    }
    
    /// <summary>
    /// <para>Contient un ensemble d’en-têtes Internet associés au message électronique au format json</para>
    /// <para>Display Name: En-têtes de message Internet</para>
    /// </summary>
    [AttributeLogicalName("internetmessageheaders")]
    [DisplayName("En-têtes de message Internet")]
    [MaxLength(500)]
    public string InternetMessageHeaders {
        get {
            return GetAttributeValue<string>("internetmessageheaders");
        }
        set {
            SetAttributeValue("internetmessageheaders", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l'activité de courrier électronique a été facturée dans le cadre de la résolution d'un incident.</para>
    /// <para>Display Name: Est facturé</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Est facturé")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si l’expéditeur du courrier électronique n’est pas résolu en cas de correspondance multiple</para>
    /// <para>Display Name: L’expéditeur en double n’est pas résolu</para>
    /// </summary>
    [AttributeLogicalName("isduplicatesenderunresolved")]
    [DisplayName("L’expéditeur en double n’est pas résolu")]
    public bool? IsDuplicateSenderUnresolved {
        get {
            return GetAttributeValue<bool?>("isduplicatesenderunresolved");
        }
        set {
            SetAttributeValue("isduplicatesenderunresolved", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement. Indique si ce courrier électronique est suivi ou non. Cet état évalué remplace la sélection de l'utilisateur pour le suivi du courrier électronique.</para>
    /// <para>Display Name: Suivi(e)</para>
    /// </summary>
    [AttributeLogicalName("isemailfollowed")]
    [DisplayName("Suivi(e)")]
    public bool? IsEmailFollowed {
        get {
            return GetAttributeValue<bool?>("isemailfollowed");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement. Affiche si ce rappel par courrier électronique est défini ou non.</para>
    /// <para>Display Name: Rappel défini</para>
    /// </summary>
    [AttributeLogicalName("isemailreminderset")]
    [DisplayName("Rappel défini")]
    public bool? IsEmailReminderSet {
        get {
            return GetAttributeValue<bool?>("isemailreminderset");
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l’activité est régulière ou de type événement.</para>
    /// <para>Display Name: Est une activité régulière</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Est une activité régulière")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Est non sécurisé(e)</para>
    /// </summary>
    [AttributeLogicalName("isunsafe")]
    [DisplayName("Est non sécurisé(e)")]
    [Range(0, 2147483647)]
    public int? IsUnsafe {
        get {
            return GetAttributeValue<int?>("isunsafe");
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si le courrier électronique a été créé à partir d'une règle de workflow.</para>
    /// <para>Display Name: Est créé(e) par le workflow</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Est créé(e) par le workflow")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la dernière ouverture du courrier électronique.</para>
    /// <para>Display Name: Heure de la dernière ouverture</para>
    /// </summary>
    [AttributeLogicalName("lastopenedtime")]
    [DisplayName("Heure de la dernière ouverture")]
    public DateTime? LastOpenedTime {
        get {
            return GetAttributeValue<DateTime?>("lastopenedtime");
        }
        set {
            SetAttributeValue("lastopenedtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre de clics sur un lien dans un courrier électronique.</para>
    /// <para>Display Name: Nombre de clics sur les liens</para>
    /// </summary>
    [AttributeLogicalName("linksclickedcount")]
    [DisplayName("Nombre de clics sur les liens")]
    [Range(0, 2147483647)]
    public int? LinksClickedCount {
        get {
            return GetAttributeValue<int?>("linksclickedcount");
        }
        set {
            SetAttributeValue("linksclickedcount", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du message électronique. S'utilise uniquement avec le courrier reçu.</para>
    /// <para>Display Name: ID de message</para>
    /// </summary>
    [AttributeLogicalName("messageid")]
    [DisplayName("ID de message")]
    [MaxLength(320)]
    public string MessageId {
        get {
            return GetAttributeValue<string>("messageid");
        }
        set {
            SetAttributeValue("messageid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Vérification doublons dans ID de message</para>
    /// </summary>
    [AttributeLogicalName("messageiddupcheck")]
    [DisplayName("Vérification doublons dans ID de message")]
    public Guid? MessageIdDupCheck {
        get {
            return GetAttributeValue<Guid?>("messageiddupcheck");
        }
        set {
            SetAttributeValue("messageiddupcheck", value);
        }
    }
    
    /// <summary>
    /// <para>Type MIME des données du message électronique.</para>
    /// <para>Display Name: Type MIME</para>
    /// </summary>
    [AttributeLogicalName("mimetype")]
    [DisplayName("Type MIME")]
    [MaxLength(256)]
    public string MimeType {
        get {
            return GetAttributeValue<string>("mimetype");
        }
        set {
            SetAttributeValue("mimetype", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la dernière mise à jour de l'enregistrement. La date et l'heure sont affichées selon le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement à la place d'un autre utilisateur.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le code de notification permettant d'identifier les problèmes concernant les destinataires ou les pièces jointes du courrier électronique, comme les pièces jointes bloquées.</para>
    /// <para>Display Name: Notifications</para>
    /// </summary>
    [AttributeLogicalName("notifications")]
    [DisplayName("Notifications")]
    public Email_Notifications? Notifications {
        get {
            return GetOptionSetValue<Email_Notifications>("notifications");
        }
        set {
            SetOptionSetValue("notifications", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée, en minutes, de la suspension de l'enregistrement.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre d'ouvertures d'un message électronique.</para>
    /// <para>Display Name: Nombre d'ouvertures</para>
    /// </summary>
    [AttributeLogicalName("opencount")]
    [DisplayName("Nombre d\'ouvertures")]
    [Range(0, 2147483647)]
    public int? OpenCount {
        get {
            return GetAttributeValue<int?>("opencount");
        }
        set {
            SetAttributeValue("opencount", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez l'utilisateur ou l'équipe affectée à la gestion de l'enregistrement. Ce champ est mis à jour à chaque fois que l'enregistrement est attribué à un utilisateur différent.</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'activité de courrier électronique.</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’équipe propriétaire de l’activité de courrier électronique.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'activité de courrier électronique.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez l'activité à laquelle le courrier électronique est associé.</para>
    /// <para>Display Name: ID de l'activité parente</para>
    /// </summary>
    [AttributeLogicalName("parentactivityid")]
    [DisplayName("ID de l\'activité parente")]
    public EntityReference ParentActivityId {
        get {
            return GetAttributeValue<EntityReference>("parentactivityid");
        }
        set {
            SetAttributeValue("parentactivityid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Postposer le traitement du courrier électronique à</para>
    /// </summary>
    [AttributeLogicalName("postponeemailprocessinguntil")]
    [DisplayName("Postposer le traitement du courrier électronique à")]
    public DateTime? PostponeEmailProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeemailprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Tapez une courte description de l’objectif ou du sujet principal du courrier électronique.</para>
    /// <para>Display Name: Objet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Objet")]
    [MaxLength(800)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la priorité afin que les clients préférés ou les problèmes critiques soient traités rapidement.</para>
    /// <para>Display Name: Priorité</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priorité")]
    public Email_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Email_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique qu'une confirmation de lecture est demandée.</para>
    /// <para>Display Name: Confirmation de lecture demandée</para>
    /// </summary>
    [AttributeLogicalName("readreceiptrequested")]
    [DisplayName("Confirmation de lecture demandée")]
    public bool? ReadReceiptRequested {
        get {
            return GetAttributeValue<bool?>("readreceiptrequested");
        }
        set {
            SetAttributeValue("readreceiptrequested", value);
        }
    }
    
    /// <summary>
    /// <para>Boîte aux lettres qui a reçu le courrier électronique.</para>
    /// <para>Display Name: Boîte aux lettres de réception</para>
    /// </summary>
    [AttributeLogicalName("receivingmailboxid")]
    [DisplayName("Boîte aux lettres de réception")]
    public EntityReference ReceivingMailboxId {
        get {
            return GetAttributeValue<EntityReference>("receivingmailboxid");
        }
        set {
            SetAttributeValue("receivingmailboxid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'enregistrement concerné par le courrier électronique.</para>
    /// <para>Display Name: Concernant</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Concernant")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>ID de carte d'action de rappel.</para>
    /// <para>Display Name: ID de carte d'action de rappel.</para>
    /// </summary>
    [AttributeLogicalName("reminderactioncardid")]
    [DisplayName("ID de carte d\'action de rappel.")]
    public Guid? ReminderActionCardId {
        get {
            return GetAttributeValue<Guid?>("reminderactioncardid");
        }
        set {
            SetAttributeValue("reminderactioncardid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le nombre de réponse reçues pour un courrier électronique.</para>
    /// <para>Display Name: Nombre de réponses</para>
    /// </summary>
    [AttributeLogicalName("replycount")]
    [DisplayName("Nombre de réponses")]
    [Range(0, 2147483647)]
    public int? ReplyCount {
        get {
            return GetAttributeValue<int?>("replycount");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement</para>
    /// <para>Display Name: Réservé à un usage interne</para>
    /// </summary>
    [AttributeLogicalName("reservedforinternaluse")]
    [DisplayName("Réservé à un usage interne")]
    public string ReservedForInternalUse {
        get {
            return GetAttributeValue<string>("reservedforinternaluse");
        }
        set {
            SetAttributeValue("reservedforinternaluse", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement de messagerie.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cet e-mail. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Durée planifiée de l'activité de courrier électronique en minutes.</para>
    /// <para>Display Name: Durée planifiée</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Durée planifiée")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure d'échéance auxquelles il est prévu que l'activité finisse pour indiquer quand le courrier électronique est envoyé.</para>
    /// <para>Display Name: Date d’échéance</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Date d’échéance")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure de début auxquelles il est prévu que l'activité démarre pour indiquer l'heure provisoire à laquelle l'activité de courrier électronique doit être commencée.</para>
    /// <para>Display Name: Date de début</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Date de début")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Expéditeur du courrier électronique.</para>
    /// <para>Display Name: De</para>
    /// </summary>
    [AttributeLogicalName("sender")]
    [DisplayName("De")]
    [MaxLength(250)]
    public string Sender {
        get {
            return GetAttributeValue<string>("sender");
        }
        set {
            SetAttributeValue("sender", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la boîte aux lettres associée à l'expéditeur du message électronique.</para>
    /// <para>Display Name: Boîte aux lettres de l'expéditeur</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Boîte aux lettres de l\'expéditeur")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Indique le compte parent de l'expéditeur du message électronique.</para>
    /// <para>Display Name: Compte de l'expéditeur</para>
    /// </summary>
    [AttributeLogicalName("sendersaccount")]
    [DisplayName("Compte de l\'expéditeur")]
    public EntityReference SendersAccount {
        get {
            return GetAttributeValue<EntityReference>("sendersaccount");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure d'envoi du courrier électronique.</para>
    /// <para>Display Name: Date d'envoi</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date d\'envoi")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du service associé.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de tri des activités.</para>
    /// <para>Display Name: Date de tri</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Date de tri")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le courrier électronique est ouvert, terminé ou annulé. Les courriers électroniques terminés et annulés sont en lecture seule et ne peuvent pas être modifiés.</para>
    /// <para>Display Name: Statut d'activité</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut d\'activité")]
    public EmailState? StateCode {
        get {
            return GetOptionSetValue<EmailState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le statut du courrier électronique.</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Statut")]
    public Email_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Email_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une sous-catégorie pour identifier le type de courrier électronique et associer l'activité à un produit, une région de vente, un groupe professionnel ou une fonction spécifique.</para>
    /// <para>Display Name: Sous-catégorie</para>
    /// </summary>
    [AttributeLogicalName("subcategory")]
    [DisplayName("Sous-catégorie")]
    [MaxLength(250)]
    public string Subcategory {
        get {
            return GetAttributeValue<string>("subcategory");
        }
        set {
            SetAttributeValue("subcategory", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une courte description de l’objectif ou du sujet principal du courrier électronique.</para>
    /// <para>Display Name: Objet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Objet")]
    [MaxLength(800)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le compte Microsoft Office Outlook de l'utilisateur qui a soumis le courrier électronique à Microsoft Dynamics 365.</para>
    /// <para>Display Name: Soumis par</para>
    /// </summary>
    [AttributeLogicalName("submittedby")]
    [DisplayName("Soumis par")]
    [MaxLength(250)]
    public string SubmittedBy {
        get {
            return GetAttributeValue<string>("submittedby");
        }
        set {
            SetAttributeValue("submittedby", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement. ID du modèle utilisé dans le courrier électronique.</para>
    /// <para>Display Name: ID du modèle utilisé.</para>
    /// </summary>
    [AttributeLogicalName("templateid")]
    [DisplayName("ID du modèle utilisé.")]
    public EntityReference TemplateId {
        get {
            return GetAttributeValue<EntityReference>("templateid");
        }
        set {
            SetAttributeValue("templateid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez le compte, le contact, le prospect, la file d'attente ou les destinataires du courrier électronique.</para>
    /// <para>Display Name: À</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("À")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche les adresses de messagerie correspondant aux destinataires.</para>
    /// <para>Display Name: Aux destinataires</para>
    /// </summary>
    [AttributeLogicalName("torecipients")]
    [DisplayName("Aux destinataires")]
    [MaxLength(500)]
    public string ToRecipients {
        get {
            return GetAttributeValue<string>("torecipients");
        }
        set {
            SetAttributeValue("torecipients", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le jeton de suivi attribué au courrier électronique pour assurer le suivi automatique des réponses dans Microsoft Dynamics 365.</para>
    /// <para>Display Name: Jeton de suivi</para>
    /// </summary>
    [AttributeLogicalName("trackingtoken")]
    [DisplayName("Jeton de suivi")]
    [MaxLength(50)]
    public string TrackingToken {
        get {
            return GetAttributeValue<string>("trackingtoken");
        }
        set {
            SetAttributeValue("trackingtoken", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale pour l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code de fuseau horaire utilisé à la création de l’enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version du courrier électronique.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Indique si l’objet a changé par rapport à celui du courrier électronique corrélé</para>
    /// <para>Display Name: Objet corrélé modifié</para>
    /// </summary>
    [AttributeLogicalName("correlatedsubjectchanged")]
    [DisplayName("Objet corrélé modifié")]
    public bool? correlatedsubjectchanged {
        get {
            return GetAttributeValue<bool?>("correlatedsubjectchanged");
        }
        set {
            SetAttributeValue("correlatedsubjectchanged", value);
        }
    }
    
    /// <summary>
    /// <para>Un e-mail individuel sera envoyé à chaque destinataire.</para>
    /// <para>Display Name: Liste de destinataires</para>
    /// </summary>
    [AttributeLogicalName("msdyn_recipientlist")]
    [DisplayName("Liste de destinataires")]
    [MaxLength(8000)]
    public string msdyn_RecipientList {
        get {
            return GetAttributeValue<string>("msdyn_recipientlist");
        }
        set {
            SetAttributeValue("msdyn_recipientlist", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Interaction avec Copilot</para>
    /// </summary>
    [AttributeLogicalName("msdyn_copilotengaged")]
    [DisplayName("Interaction avec Copilot")]
    public bool? msdyn_copilotengaged {
        get {
            return GetAttributeValue<bool?>("msdyn_copilotengaged");
        }
        set {
            SetAttributeValue("msdyn_copilotengaged", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Traité</para>
    /// </summary>
    [AttributeLogicalName("nxt_isprocessed")]
    [DisplayName("Traité")]
    public bool? nxt_IsProcessed {
        get {
            return GetAttributeValue<bool?>("nxt_isprocessed");
        }
        set {
            SetAttributeValue("nxt_isprocessed", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Destinataire</para>
    /// </summary>
    [AttributeLogicalName("nxt_recipientcode")]
    [DisplayName("Destinataire")]
    public nxt_recipientcode? nxt_RecipientCode {
        get {
            return GetOptionSetValue<nxt_recipientcode>("nxt_recipientcode");
        }
        set {
            SetOptionSetValue("nxt_recipientcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Recherche client</para>
    /// </summary>
    [AttributeLogicalName("nxt_searchcontractingroleid")]
    [DisplayName("Recherche client")]
    public EntityReference nxt_SearchContractingRoleId {
        get {
            return GetAttributeValue<EntityReference>("nxt_searchcontractingroleid");
        }
        set {
            SetAttributeValue("nxt_searchcontractingroleid", value);
        }
    }
    
    /// <summary>
    /// <para>Permet d’entrer les enregistrements associés au courrier électronique.</para>
    /// <para>Display Name: Associé</para>
    /// </summary>
    [AttributeLogicalName("related")]
    [DisplayName("Associé")]
    public IEnumerable<ActivityParty> related {
        get {
            return GetEntityCollection<ActivityParty>("related");
        }
        set {
            SetEntityCollection("related", value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Account_Email_EmailSender")]
    public Account Account_Email_EmailSender {
        get {
            return GetRelatedEntity<Account>("Account_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Account_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("sendersaccount")]
    [RelationshipSchemaName("Account_Email_SendersAccount")]
    public Account Account_Email_SendersAccount {
        get {
            return GetRelatedEntity<Account>("Account_Email_SendersAccount", null);
        }
        set {
            SetRelatedEntity("Account_Email_SendersAccount", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Account_Emails")]
    public Account Account_Emails {
        get {
            return GetRelatedEntity<Account>("Account_Emails", null);
        }
        set {
            SetRelatedEntity("Account_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Contact_Email_EmailSender")]
    public Contact Contact_Email_EmailSender {
        get {
            return GetRelatedEntity<Contact>("Contact_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Contact_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Contact_Emails")]
    public Contact Contact_Emails {
        get {
            return GetRelatedEntity<Contact>("Contact_Emails", null);
        }
        set {
            SetRelatedEntity("Contact_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Email_QueueItem")]
    public IEnumerable<QueueItem> Email_QueueItem {
        get {
            return GetRelatedEntities<QueueItem>("Email_QueueItem", null);
        }
        set {
            SetRelatedEntities("Email_QueueItem", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Incident_Emails")]
    public Incident Incident_Emails {
        get {
            return GetRelatedEntity<Incident>("Incident_Emails", null);
        }
        set {
            SetRelatedEntity("Incident_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Invoice_Emails")]
    public Invoice Invoice_Emails {
        get {
            return GetRelatedEntity<Invoice>("Invoice_Emails", null);
        }
        set {
            SetRelatedEntity("Invoice_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("Queue_Email_EmailSender")]
    public Queue Queue_Email_EmailSender {
        get {
            return GetRelatedEntity<Queue>("Queue_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("Queue_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("Quote_Emails")]
    public Quote Quote_Emails {
        get {
            return GetRelatedEntity<Quote>("Quote_Emails", null);
        }
        set {
            SetRelatedEntity("Quote_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referenced)]
    public IEnumerable<Email> Referencedemail_email_CorrelatedActivityId {
        get {
            return GetRelatedEntities<Email>("email_email_CorrelatedActivityId", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("email_email_CorrelatedActivityId", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referenced)]
    public IEnumerable<Email> Referencedemail_email_parentactivityid {
        get {
            return GetRelatedEntities<Email>("email_email_parentactivityid", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("email_email_parentactivityid", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("correlatedactivityid")]
    [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referencing)]
    public Email Referencingemail_email_CorrelatedActivityId {
        get {
            return GetRelatedEntity<Email>("email_email_CorrelatedActivityId", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("email_email_CorrelatedActivityId", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentactivityid")]
    [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referencing)]
    public Email Referencingemail_email_parentactivityid {
        get {
            return GetRelatedEntity<Email>("email_email_parentactivityid", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("email_email_parentactivityid", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("SalesOrder_Emails")]
    public SalesOrder SalesOrder_Emails {
        get {
            return GetRelatedEntity<SalesOrder>("SalesOrder_Emails", null);
        }
        set {
            SetRelatedEntity("SalesOrder_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("emailsender")]
    [RelationshipSchemaName("SystemUser_Email_EmailSender")]
    public SystemUser SystemUser_Email_EmailSender {
        get {
            return GetRelatedEntity<SystemUser>("SystemUser_Email_EmailSender", null);
        }
        set {
            SetRelatedEntity("SystemUser_Email_EmailSender", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_email_activities")]
    public BusinessUnit business_unit_email_activities {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_email_activities", null);
        }
        set {
            SetRelatedEntity("business_unit_email_activities", null, value);
        }
    }
    
    [AttributeLogicalName("acceptingentityid")]
    [RelationshipSchemaName("email_acceptingentity_queue")]
    public Queue email_acceptingentity_queue {
        get {
            return GetRelatedEntity<Queue>("email_acceptingentity_queue", null);
        }
        set {
            SetRelatedEntity("email_acceptingentity_queue", null, value);
        }
    }
    
    [AttributeLogicalName("acceptingentityid")]
    [RelationshipSchemaName("email_acceptingentity_systemuser")]
    public SystemUser email_acceptingentity_systemuser {
        get {
            return GetRelatedEntity<SystemUser>("email_acceptingentity_systemuser", null);
        }
        set {
            SetRelatedEntity("email_acceptingentity_systemuser", null, value);
        }
    }
    
    [RelationshipSchemaName("email_activity_mime_attachment")]
    public IEnumerable<ActivityMimeAttachment> email_activity_mime_attachment {
        get {
            return GetRelatedEntities<ActivityMimeAttachment>("email_activity_mime_attachment", null);
        }
        set {
            SetRelatedEntities("email_activity_mime_attachment", null, value);
        }
    }
    
    [RelationshipSchemaName("email_activity_parties")]
    public IEnumerable<ActivityParty> email_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("email_activity_parties", null);
        }
        set {
            SetRelatedEntities("email_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("email_connections1")]
    public IEnumerable<Connection> email_connections1 {
        get {
            return GetRelatedEntities<Connection>("email_connections1", null);
        }
        set {
            SetRelatedEntities("email_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("email_connections2")]
    public IEnumerable<Connection> email_connections2 {
        get {
            return GetRelatedEntities<Connection>("email_connections2", null);
        }
        set {
            SetRelatedEntities("email_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_email_createdby")]
    public SystemUser lk_email_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_createdby", null);
        }
        set {
            SetRelatedEntity("lk_email_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_email_createdonbehalfby")]
    public SystemUser lk_email_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_email_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_email_modifiedby")]
    public SystemUser lk_email_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_email_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
    public SystemUser lk_email_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_email_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_email_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_customerfolder_Emails")]
    public nxt_customerfolder nxt_customerfolder_Emails {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_customerfolder_Emails", null);
        }
        set {
            SetRelatedEntity("nxt_customerfolder_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_searchcontractingroleid")]
    [RelationshipSchemaName("nxt_email_SearchContractingRoleId_nxt_contrac")]
    public nxt_ContractingRole nxt_email_SearchContractingRoleId_nxt_contrac {
        get {
            return GetRelatedEntity<nxt_ContractingRole>("nxt_email_SearchContractingRoleId_nxt_contrac", null);
        }
        set {
            SetRelatedEntity("nxt_email_SearchContractingRoleId_nxt_contrac", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_program_Emails")]
    public nxt_Program nxt_program_Emails {
        get {
            return GetRelatedEntity<nxt_Program>("nxt_program_Emails", null);
        }
        set {
            SetRelatedEntity("nxt_program_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierintervention_Emails")]
    public nxt_SupplierIntervention nxt_supplierintervention_Emails {
        get {
            return GetRelatedEntity<nxt_SupplierIntervention>("nxt_supplierintervention_Emails", null);
        }
        set {
            SetRelatedEntity("nxt_supplierintervention_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierquote_Emails")]
    public nxt_SupplierQuote nxt_supplierquote_Emails {
        get {
            return GetRelatedEntity<nxt_SupplierQuote>("nxt_supplierquote_Emails", null);
        }
        set {
            SetRelatedEntity("nxt_supplierquote_Emails", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_email")]
    public Team team_email {
        get {
            return GetRelatedEntity<Team>("team_email", null);
        }
        set {
            SetRelatedEntity("team_email", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_email")]
    public SystemUser user_email {
        get {
            return GetRelatedEntity<SystemUser>("user_email", null);
        }
        set {
            SetRelatedEntity("user_email", null, value);
        }
    }
    
    public static Email Retrieve(IOrganizationService service, Guid id, params Expression<Func<Email,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum EmailState {
    
    [EnumMember()]
    [OptionSetMetadata("Ouvert", Index=0, Lcid=1036)]
    Ouvert = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé", Index=1, Lcid=1036)]
    Terminé = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé", Index=2, Lcid=1036)]
    Annulé = 2,
}

[DataContract()]
public enum Email_CorrelationMethod {
    
    [EnumMember()]
    [OptionSetMetadata("Aucune", Index=0, Lcid=1036)]
    Aucune = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Ignorée", Index=1, Lcid=1036)]
    Ignorée = 1,
    
    [EnumMember()]
    [OptionSetMetadata("XHeader", Index=2, Lcid=1036)]
    XHeader = 2,
    
    [EnumMember()]
    [OptionSetMetadata("InReplyTo", Index=3, Lcid=1036)]
    InReplyTo = 3,
    
    [EnumMember()]
    [OptionSetMetadata("TrackingToken", Index=4, Lcid=1036)]
    TrackingToken = 4,
    
    [EnumMember()]
    [OptionSetMetadata("ConversationIndex", Index=5, Lcid=1036)]
    ConversationIndex = 5,
    
    [EnumMember()]
    [OptionSetMetadata("SmartMatching", Index=6, Lcid=1036)]
    SmartMatching = 6,
    
    [EnumMember()]
    [OptionSetMetadata("CustomCorrelation", Index=7, Lcid=1036)]
    CustomCorrelation = 7,
}

[DataContract()]
public enum Email_EmailReminderStatus {
    
    [EnumMember()]
    [OptionSetMetadata("NotSet", Index=0, Lcid=1036)]
    NotSet = 0,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderSet", Index=1, Lcid=1036)]
    ReminderSet = 1,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderExpired", Index=2, Lcid=1036)]
    ReminderExpired = 2,
    
    [EnumMember()]
    [OptionSetMetadata("ReminderInvalid", Index=3, Lcid=1036)]
    ReminderInvalid = 3,
}

[DataContract()]
public enum Email_EmailReminderType {
    
    [EnumMember()]
    [OptionSetMetadata("Si je ne reçois pas de réponse d\'ici", Index=0, Lcid=1036)]
    Sijenereçoispasderéponsedici = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Si le courrier électronique n\'est pas ouvert d\'ici", Index=1, Lcid=1036)]
    Silecourrierélectroniquenestpasouvertdici = 1,
    
    [EnumMember()]
    [OptionSetMetadata("M\'envoyer quand même un rappel à l\'adresse", Index=2, Lcid=1036)]
    Menvoyerquandmêmeunrappelàladresse = 2,
}

[DataContract()]
public enum Email_Notifications {
    
    [EnumMember()]
    [OptionSetMetadata("Aucun(e)", Index=0, Lcid=1036)]
    Aucune = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Le message a été enregistré comme enregistrement de courrier électronique Microso" +
        "ft Dynamics 365, mais sans la totalité des pièces jointes originales. Impossible" +
        " d’enregistrer une pièce jointe bloquée ou dont le type de fichier n’est pas val" +
        "ide.", Index=1, Lcid=1036)]
    LemessageaétéenregistrécommeenregistrementdecourrierélectroniqueMicrosoftDynamics365maissanslatotalitédespiècesjointesoriginalesImpossibledenregistrerunepiècejointebloquéeoudontletypedefichiernestpasvalide = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Corps tronqué.", Index=2, Lcid=1036)]
    Corpstronqué = 2,
}

[DataContract()]
public enum Email_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Faible", Index=0, Lcid=1036)]
    Faible = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normale", Index=1, Lcid=1036)]
    Normale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Haute", Index=2, Lcid=1036)]
    Haute = 2,
}

[DataContract()]
public enum Email_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Brouillon", Index=0, Lcid=1036, Color="#3b79b7")]
    Brouillon = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé", Index=1, Lcid=1036, Description="", Color="#358717")]
    Terminé = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Envoyé", Index=2, Lcid=1036, Description="", Color="#358717")]
    Envoyé = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Reçu", Index=3, Lcid=1036, Color="#358717")]
    Reçu = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé(e)", Index=4, Lcid=1036, Color="#666666")]
    Annulée = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Envoi en attente", Index=5, Lcid=1036, Color="#bf991f")]
    Envoienattente = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Envoi en cours", Index=6, Lcid=1036, Color="#bf991f")]
    Envoiencours = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Échec", Index=7, Lcid=1036, Color="#ea0600")]
    Échec = 8,
}
