//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Incident de requête de service associé à un contrat.</para>
/// <para>Display Name: Demande</para>
/// </summary>
[EntityLogicalName("incident")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Incident : ExtendedEntity<IncidentState, Incident_StatusCode> {
    
    public const string EntityLogicalName = "incident";
    
    public const int EntityTypeCode = 112;
    
    public Incident() : 
            base(EntityLogicalName) {
    }
    
    public Incident(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("title");
        }
    }
    
    [AttributeLogicalName("incidentid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la demande.</para>
    /// <para>Display Name: Demande</para>
    /// </summary>
    [AttributeLogicalName("incidentid")]
    [DisplayName("Demande")]
    public Guid? IncidentId {
        get {
            return GetAttributeValue<Guid?>("incidentid");
        }
        set {
            SetId("incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du compte auquel la demande est associée.</para>
    /// <para>Display Name: Compte</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Compte")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Cet attribut est utilisé pour les exemples de processus d'entreprise de service.</para>
    /// <para>Display Name: Activités terminées</para>
    /// </summary>
    [AttributeLogicalName("activitiescomplete")]
    [DisplayName("Activités terminées")]
    public bool? ActivitiesComplete {
        get {
            return GetAttributeValue<bool?>("activitiescomplete");
        }
        set {
            SetAttributeValue("activitiescomplete", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre d'unités de services réellement nécessaires pour résoudre la demande.</para>
    /// <para>Display Name: Unités de service réelles</para>
    /// </summary>
    [AttributeLogicalName("actualserviceunits")]
    [DisplayName("Unités de service réelles")]
    [Range(0, 1000000000)]
    public int? ActualServiceUnits {
        get {
            return GetAttributeValue<int?>("actualserviceunits");
        }
        set {
            SetAttributeValue("actualserviceunits", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre d'unités de services facturées au client pour la demande.</para>
    /// <para>Display Name: Unités de service facturées</para>
    /// </summary>
    [AttributeLogicalName("billedserviceunits")]
    [DisplayName("Unités de service facturées")]
    [Range(0, 1000000000)]
    public int? BilledServiceUnits {
        get {
            return GetAttributeValue<int?>("billedserviceunits");
        }
        set {
            SetAttributeValue("billedserviceunits", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si le profil est bloqué ou non.</para>
    /// <para>Display Name: Profil bloqué</para>
    /// </summary>
    [AttributeLogicalName("blockedprofile")]
    [DisplayName("Profil bloqué")]
    public bool? BlockedProfile {
        get {
            return GetAttributeValue<bool?>("blockedprofile");
        }
        set {
            SetAttributeValue("blockedprofile", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez l'origine du contact à propos de la demande, par exemple courrier électronique, téléphone ou web, en vue d'une utilisation dans la génération de rapports et d'analyses.</para>
    /// <para>Display Name: Canal</para>
    /// </summary>
    [AttributeLogicalName("caseorigincode")]
    [DisplayName("Canal")]
    public incident_caseorigincode? CaseOriginCode {
        get {
            return GetOptionSetValue<incident_caseorigincode>("caseorigincode");
        }
        set {
            SetOptionSetValue("caseorigincode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type de demande pour identifier la demande à utiliser dans la génération de rapports et d'analyses de demande.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("casetypecode")]
    [DisplayName("Type")]
    public Incident_CaseTypeCode? CaseTypeCode {
        get {
            return GetOptionSetValue<Incident_CaseTypeCode>("casetypecode");
        }
        set {
            SetOptionSetValue("casetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Cet attribut est utilisé pour les exemples de processus d'entreprise de service.</para>
    /// <para>Display Name: Vérifier le courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("checkemail")]
    [DisplayName("Vérifier le courrier électronique")]
    public bool? CheckEmail {
        get {
            return GetAttributeValue<bool?>("checkemail");
        }
        set {
            SetAttributeValue("checkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du contact associé à la demande.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Choisissez la ligne de contrat sous laquelle la demande doit être enregistré pour assurer la facturation correcte du client.</para>
    /// <para>Display Name: Ligne de contrat</para>
    /// </summary>
    [AttributeLogicalName("contractdetailid")]
    [DisplayName("Ligne de contrat")]
    public EntityReference ContractDetailId {
        get {
            return GetAttributeValue<EntityReference>("contractdetailid");
        }
        set {
            SetAttributeValue("contractdetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de service sous lequel la demande doit être enregistré pour vous assurer que le client peut bénéficier de services de support.</para>
    /// <para>Display Name: ZZ_Contrat</para>
    /// </summary>
    [AttributeLogicalName("contractid")]
    [DisplayName("ZZ_Contrat")]
    public EntityReference ContractId {
        get {
            return GetAttributeValue<EntityReference>("contractid");
        }
        set {
            SetAttributeValue("contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le niveau de service pour la demande pour assurer une gestion correcte de la demande.</para>
    /// <para>Display Name: Niveau de service</para>
    /// </summary>
    [AttributeLogicalName("contractservicelevelcode")]
    [DisplayName("Niveau de service")]
    public Incident_ContractServiceLevelCode? ContractServiceLevelCode {
        get {
            return GetOptionSetValue<Incident_ContractServiceLevelCode>("contractservicelevelcode");
        }
        set {
            SetOptionSetValue("contractservicelevelcode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé(e) par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé(e) par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
        set {
            SetAttributeValue("createdby", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Créé par (partie externe)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
        set {
            SetAttributeValue("createdbyexternalparty", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
        set {
            SetAttributeValue("createdon", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé(e) par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé(e) par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
        set {
            SetAttributeValue("createdonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si un conseiller du service clientèle a contacté ou non le client.</para>
    /// <para>Display Name: Client contacté</para>
    /// </summary>
    [AttributeLogicalName("customercontacted")]
    [DisplayName("Client contacté")]
    public bool? CustomerContacted {
        get {
            return GetAttributeValue<bool?>("customercontacted");
        }
        set {
            SetAttributeValue("customercontacted", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le compte client ou le contact pour fournir un lien rapide vers les détails supplémentaires du client, comme les informations de compte, les activités et les opportunités.</para>
    /// <para>Display Name: Demandeur</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Demandeur")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le niveau de satisfaction du client concernant la gestion et la résolution de la demande.</para>
    /// <para>Display Name: Satisfaction</para>
    /// </summary>
    [AttributeLogicalName("customersatisfactioncode")]
    [DisplayName("Satisfaction")]
    public Incident_CustomerSatisfactionCode? CustomerSatisfactionCode {
        get {
            return GetOptionSetValue<Incident_CustomerSatisfactionCode>("customersatisfactioncode");
        }
        set {
            SetOptionSetValue("customersatisfactioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si les conditions du droit associé doivent être réduites ou non.</para>
    /// <para>Display Name: Réduire les conditions d'octroi du droit</para>
    /// </summary>
    [AttributeLogicalName("decremententitlementterm")]
    [DisplayName("Réduire les conditions d\'octroi du droit")]
    public bool? DecrementEntitlementTerm {
        get {
            return GetAttributeValue<bool?>("decremententitlementterm");
        }
        set {
            SetAttributeValue("decremententitlementterm", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire la demande et aider l'équipe du service clientèle à trouver une solution.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Adresse de messagerie principale pour l'entité.</para>
    /// <para>Display Name: Adresse de messagerie</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Adresse de messagerie")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le droit applicable à la demande.</para>
    /// <para>Display Name: Droit</para>
    /// </summary>
    [AttributeLogicalName("entitlementid")]
    [DisplayName("Droit")]
    public EntityReference EntitlementId {
        get {
            return GetAttributeValue<EntityReference>("entitlementid");
        }
        set {
            SetAttributeValue("entitlementid", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Indique la date et l'heure de réaffectation de la demande.</para>
    /// <para>Display Name: Réaffecté(e) le</para>
    /// </summary>
    [AttributeLogicalName("escalatedon")]
    [DisplayName("Réaffecté(e) le")]
    public DateTime? EscalatedOn {
        get {
            return GetAttributeValue<DateTime?>("escalatedon");
        }
        set {
            SetAttributeValue("escalatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs monétaires de l'enregistrement en devise locale dans la devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
        set {
            SetAttributeValue("exchangerate", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une demande existante pour le client renseigné. Utilisation interne uniquement.</para>
    /// <para>Display Name: Demande existante</para>
    /// </summary>
    [AttributeLogicalName("existingcase")]
    [DisplayName("Demande existante")]
    public EntityReference ExistingCase {
        get {
            return GetAttributeValue<EntityReference>("existingcase");
        }
        set {
            SetAttributeValue("existingcase", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Première réponse par indicateur de performance clé</para>
    /// </summary>
    [AttributeLogicalName("firstresponsebykpiid")]
    [DisplayName("Première réponse par indicateur de performance clé")]
    public EntityReference FirstResponseByKPIId {
        get {
            return GetAttributeValue<EntityReference>("firstresponsebykpiid");
        }
        set {
            SetAttributeValue("firstresponsebykpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique le statut du temps de réponse initial de la demande suivant les conditions du contrat SLA.</para>
    /// <para>Display Name: Première réponse - Statut du contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("firstresponseslastatus")]
    [DisplayName("Première réponse - Statut du contrat SLA")]
    public Incident_FirstResponseSLAStatus? FirstResponseSLAStatus {
        get {
            return GetOptionSetValue<Incident_FirstResponseSLAStatus>("firstresponseslastatus");
        }
        set {
            SetOptionSetValue("firstresponseslastatus", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la première réponse a été envoyée.</para>
    /// <para>Display Name: Première réponse envoyée</para>
    /// </summary>
    [AttributeLogicalName("firstresponsesent")]
    [DisplayName("Première réponse envoyée")]
    public bool? FirstResponseSent {
        get {
            return GetAttributeValue<bool?>("firstresponsesent");
        }
        set {
            SetAttributeValue("firstresponsesent", value);
        }
    }
    
    /// <summary>
    /// <para>Cet attribut est utilisé pour les exemples de processus d'entreprise de service.</para>
    /// <para>Display Name: Tâche de suivi créée</para>
    /// </summary>
    [AttributeLogicalName("followuptaskcreated")]
    [DisplayName("Tâche de suivi créée")]
    public bool? FollowUpTaskCreated {
        get {
            return GetAttributeValue<bool?>("followuptaskcreated");
        }
        set {
            SetAttributeValue("followuptaskcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date d'ici laquelle un conseiller du service clientèle doit assurer le suivi du client sur cette demande.</para>
    /// <para>Display Name: Suivi par</para>
    /// </summary>
    [AttributeLogicalName("followupby")]
    [DisplayName("Suivi par")]
    public DateTime? FollowupBy {
        get {
            return GetAttributeValue<DateTime?>("followupby");
        }
        set {
            SetAttributeValue("followupby", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la phase actuelle du processus de service pour la demande pour aider les membres de l'équipe lorsqu'ils analysent ou transfèrent une demande.</para>
    /// <para>Display Name: Étape de la demande</para>
    /// </summary>
    [AttributeLogicalName("incidentstagecode")]
    [DisplayName("Étape de la demande")]
    public Incident_IncidentStageCode? IncidentStageCode {
        get {
            return GetOptionSetValue<Incident_IncidentStageCode>("incidentstagecode");
        }
        set {
            SetOptionSetValue("incidentstagecode", value);
        }
    }
    
    /// <summary>
    /// <para>Contient le score d'influenceur provenant de NetBreeze.</para>
    /// <para>Display Name: Score d'influence</para>
    /// </summary>
    [AttributeLogicalName("influencescore")]
    [DisplayName("Score d\'influence")]
    public double? InfluenceScore {
        get {
            return GetAttributeValue<double?>("influencescore");
        }
        set {
            SetAttributeValue("influencescore", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: En baisse</para>
    /// </summary>
    [AttributeLogicalName("isdecrementing")]
    [DisplayName("En baisse")]
    public bool? IsDecrementing {
        get {
            return GetAttributeValue<bool?>("isdecrementing");
        }
        set {
            SetAttributeValue("isdecrementing", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la demande a été réaffectée.</para>
    /// <para>Display Name: Est réaffecté(e)</para>
    /// </summary>
    [AttributeLogicalName("isescalated")]
    [DisplayName("Est réaffecté(e)")]
    public bool? IsEscalated {
        get {
            return GetAttributeValue<bool?>("isescalated");
        }
        set {
            SetAttributeValue("isescalated", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'article qui contient des informations supplémentaires ou une résolution de la demande, en vue de servir de référence au cours de la recherche ou de suivi du client.</para>
    /// <para>Display Name: Article de la Base de connaissances</para>
    /// </summary>
    [AttributeLogicalName("kbarticleid")]
    [DisplayName("Article de la Base de connaissances")]
    public EntityReference KbArticleId {
        get {
            return GetAttributeValue<EntityReference>("kbarticleid");
        }
        set {
            SetAttributeValue("kbarticleid", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la demande principale avec lequelle la demande actuelle va être fusionné(e).</para>
    /// <para>Display Name: Demande principale</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("Demande principale")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
        set {
            SetAttributeValue("masterid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la demande a été fusionné(e) avec une autre demande.</para>
    /// <para>Display Name: Utilisation interne uniquement</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Utilisation interne uniquement")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Indique si la publication est émise sous forme de message public ou privé.</para>
    /// <para>Display Name: Reçu en tant que</para>
    /// </summary>
    [AttributeLogicalName("messagetypecode")]
    [DisplayName("Reçu en tant que")]
    public socialactivity_postmessagetype? MessageTypeCode {
        get {
            return GetOptionSetValue<socialactivity_postmessagetype>("messagetypecode");
        }
        set {
            SetOptionSetValue("messagetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié(e) par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié(e) par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
        set {
            SetAttributeValue("modifiedby", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modifié par (partie externe)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
        set {
            SetAttributeValue("modifiedbyexternalparty", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifiée le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifiée le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
        set {
            SetAttributeValue("modifiedon", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Modifié(e) par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié(e) par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
        set {
            SetAttributeValue("modifiedonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Nombre de demandes enfants associé(e)s à la demande.</para>
    /// <para>Display Name: Demandes enfants</para>
    /// </summary>
    [AttributeLogicalName("numberofchildincidents")]
    [DisplayName("Demandes enfants")]
    [Range(0, 2147483647)]
    public int? NumberOfChildIncidents {
        get {
            return GetAttributeValue<int?>("numberofchildincidents");
        }
        set {
            SetAttributeValue("numberofchildincidents", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée de suspension de la demande, en minutes.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Attribuée à</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Attribuée à")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une demande parent pour la demande.</para>
    /// <para>Display Name: Demande parent</para>
    /// </summary>
    [AttributeLogicalName("parentcaseid")]
    [DisplayName("Demande parent")]
    public EntityReference ParentCaseId {
        get {
            return GetAttributeValue<EntityReference>("parentcaseid");
        }
        set {
            SetAttributeValue("parentcaseid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un contact principal pour cette demande.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("primarycontactid")]
    [DisplayName("Contact")]
    public EntityReference PrimaryContactId {
        get {
            return GetAttributeValue<EntityReference>("primarycontactid");
        }
        set {
            SetAttributeValue("primarycontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un sujet ou un nom descriptif, comme la requête, la demande ou le nom de la société, pour identifier la demande dans les vues Microsoft Dynamics 365.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Nom")]
    [MaxLength(820)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la priorité afin que les clients préférés ou les problèmes critiques soient traités rapidement.</para>
    /// <para>Display Name: Priorité</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priorité")]
    public Incident_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<Incident_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'ID du processus associé à l'entité.</para>
    /// <para>Display Name: ID de processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("ID de processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le produit associé à la demande pour identifier la garantie, le service ou tout autre problème lié au produit et être en mesure d'indiquer le nombre de demandes pour chaque produit.</para>
    /// <para>Display Name: Produit</para>
    /// </summary>
    [AttributeLogicalName("productid")]
    [DisplayName("Produit")]
    public EntityReference ProductId {
        get {
            return GetAttributeValue<EntityReference>("productid");
        }
        set {
            SetAttributeValue("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de série du produit associé à cette demande, pour pouvoir indiquer le nombre de demandes par produit.</para>
    /// <para>Display Name: Numéro de série</para>
    /// </summary>
    [AttributeLogicalName("productserialnumber")]
    [DisplayName("Numéro de série")]
    [MaxLength(100)]
    public string ProductSerialNumber {
        get {
            return GetAttributeValue<string>("productserialnumber");
        }
        set {
            SetAttributeValue("productserialnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date maximale à laquelle la demande doit être résolue.</para>
    /// <para>Display Name: Résoudre d'ici</para>
    /// </summary>
    [AttributeLogicalName("resolveby")]
    [DisplayName("Résoudre d\'ici")]
    public DateTime? ResolveBy {
        get {
            return GetAttributeValue<DateTime?>("resolveby");
        }
        set {
            SetAttributeValue("resolveby", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Résoudre par indicateur de performance clé</para>
    /// </summary>
    [AttributeLogicalName("resolvebykpiid")]
    [DisplayName("Résoudre par indicateur de performance clé")]
    public EntityReference ResolveByKPIId {
        get {
            return GetAttributeValue<EntityReference>("resolvebykpiid");
        }
        set {
            SetAttributeValue("resolvebykpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique le statut du délai de résolution de la demande suivant les conditions du contrat SLA.</para>
    /// <para>Display Name: Résoudre par statut de contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("resolvebyslastatus")]
    [DisplayName("Résoudre par statut de contrat SLA")]
    public Incident_ResolveBySLAStatus? ResolveBySLAStatus {
        get {
            return GetOptionSetValue<Incident_ResolveBySLAStatus>("resolvebyslastatus");
        }
        set {
            SetOptionSetValue("resolvebyslastatus", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Première réponse d'ici</para>
    /// </summary>
    [AttributeLogicalName("responseby")]
    [DisplayName("Première réponse d\'ici")]
    public DateTime? ResponseBy {
        get {
            return GetAttributeValue<DateTime?>("responseby");
        }
        set {
            SetAttributeValue("responseby", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez un autre contact client pouvant également vous aider à résoudre la demande.</para>
    /// <para>Display Name: Contact responsable</para>
    /// </summary>
    [AttributeLogicalName("responsiblecontactid")]
    [DisplayName("Contact responsable")]
    public EntityReference ResponsibleContactId {
        get {
            return GetAttributeValue<EntityReference>("responsiblecontactid");
        }
        set {
            SetAttributeValue("responsiblecontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la demande a été acheminé(e) ou non vers la file d'attente.</para>
    /// <para>Display Name: Acheminer la demande</para>
    /// </summary>
    [AttributeLogicalName("routecase")]
    [DisplayName("Acheminer la demande")]
    public bool? RouteCase {
        get {
            return GetAttributeValue<bool?>("routecase");
        }
        set {
            SetAttributeValue("routecase", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement de demande.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cette demande. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Valeur faisant suite à l'évaluation des mots habituellement associés à un sentiment négatif, neutre ou positif insérés dans une publication sociale. Il est également possible d'entrer les informations sur les sentiments en tant que valeurs numériques.</para>
    /// <para>Display Name: Valeur de sentiment</para>
    /// </summary>
    [AttributeLogicalName("sentimentvalue")]
    [DisplayName("Valeur de sentiment")]
    public double? SentimentValue {
        get {
            return GetAttributeValue<double?>("sentimentvalue");
        }
        set {
            SetAttributeValue("sentimentvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la phase de la demande dans le processus de résolution de la demande.</para>
    /// <para>Display Name: Phase de service</para>
    /// </summary>
    [AttributeLogicalName("servicestage")]
    [DisplayName("Phase de service")]
    public servicestage? ServiceStage {
        get {
            return GetOptionSetValue<servicestage>("servicestage");
        }
        set {
            SetOptionSetValue("servicestage", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la gravité de cette demande pour indiquer son impact sur l'activité du client.</para>
    /// <para>Display Name: Gravité</para>
    /// </summary>
    [AttributeLogicalName("severitycode")]
    [DisplayName("Gravité")]
    public Incident_SeverityCode? SeverityCode {
        get {
            return GetOptionSetValue<Incident_SeverityCode>("severitycode");
        }
        set {
            SetOptionSetValue("severitycode", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du profil social auquel la demande est associé.</para>
    /// <para>Display Name: Profil social</para>
    /// </summary>
    [AttributeLogicalName("socialprofileid")]
    [DisplayName("Profil social")]
    public EntityReference SocialProfileId {
        get {
            return GetAttributeValue<EntityReference>("socialprofileid");
        }
        set {
            SetAttributeValue("socialprofileid", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'ID de la phase dans laquelle se trouve l'entité.</para>
    /// <para>Display Name: (Déconseillé) ID de phase</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) ID de phase")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la demande est active, résolu(e) ou annulé(e). Les demandes résolu(e)s et annulé(e)s sont en lecture seule et ne peuvent pas être modifié(e)s avant d'être réactivé(e)s.</para>
    /// <para>Display Name: Statut </para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut ")]
    public IncidentState? StateCode {
        get {
            return GetOptionSetValue<IncidentState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de la demande</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Statut")]
    public Incident_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Incident_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le sujet de la demande, comme une demande de catalogue ou une plainte concernant un produit, pour que les responsables du service clientèle puissent identifier les demandes fréquentes ou les sujets problématiques. Les administrateurs peuvent configurer des sujets sous Gestion d'entreprise dans la zone Paramètres.</para>
    /// <para>Display Name: ZZ_Sujet</para>
    /// </summary>
    [AttributeLogicalName("subjectid")]
    [DisplayName("ZZ_Sujet")]
    public EntityReference SubjectId {
        get {
            return GetAttributeValue<EntityReference>("subjectid");
        }
        set {
            SetAttributeValue("subjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le numéro de demande pour servir de référence client et permettre les recherches. Vous ne pouvez pas le modifier.</para>
    /// <para>Display Name: N° demande</para>
    /// </summary>
    [AttributeLogicalName("ticketnumber")]
    [DisplayName("N° demande")]
    [MaxLength(100)]
    public string TicketNumber {
        get {
            return GetAttributeValue<string>("ticketnumber");
        }
        set {
            SetAttributeValue("ticketnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un sujet ou un nom descriptif, comme la requête, la demande ou le nom de la société, pour identifier la demande dans les vues Microsoft Dynamics 365.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("title")]
    [DisplayName("Nom")]
    [MaxLength(820)]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale de l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Liste séparée par des virgules dans laquelle figurent des valeurs de chaîne représentant les identificateurs uniques des phases dans une instance de flux des processus d'entreprise dans l'ordre de leur apparition.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée pendant laquelle la demande a été active pour les demandes actives et résolues.</para>
    /// <para>Display Name: Âge de la demande</para>
    /// </summary>
    [AttributeLogicalName("caseage")]
    [DisplayName("Âge de la demande")]
    [MaxLength(4000)]
    public string caseage {
        get {
            return GetAttributeValue<string>("caseage");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l’heure d’annulation de la demande.</para>
    /// <para>Display Name: Date de désactivation</para>
    /// </summary>
    [AttributeLogicalName("deactivatedon")]
    [DisplayName("Date de désactivation")]
    public DateTime? deactivatedon {
        get {
            return GetAttributeValue<DateTime?>("deactivatedon");
        }
        set {
            SetAttributeValue("deactivatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l’activité la plus récente associée à la demande et l’action effectuée sur cette activité.</para>
    /// <para>Display Name: Dernière interaction</para>
    /// </summary>
    [AttributeLogicalName("lastinteraction")]
    [DisplayName("Dernière interaction")]
    [MaxLength(200)]
    public string lastinteraction {
        get {
            return GetAttributeValue<string>("lastinteraction");
        }
    }
    
    /// <summary>
    /// <para>URL d’invitation à une enquête pour les commentaires des clients.</para>
    /// <para>Display Name: Invitation à une enquête</para>
    /// </summary>
    [AttributeLogicalName("msdyn_casesurveyinviteurl")]
    [DisplayName("Invitation à une enquête")]
    [MaxLength(500)]
    public string msdyn_CaseSurveyInviteUrl {
        get {
            return GetAttributeValue<string>("msdyn_casesurveyinviteurl");
        }
        set {
            SetAttributeValue("msdyn_casesurveyinviteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Interaction avec Copilot</para>
    /// </summary>
    [AttributeLogicalName("msdyn_copilotengaged")]
    [DisplayName("Interaction avec Copilot")]
    public bool? msdyn_copilotengaged {
        get {
            return GetAttributeValue<bool?>("msdyn_copilotengaged");
        }
        set {
            SetAttributeValue("msdyn_copilotengaged", value);
        }
    }
    
    /// <summary>
    /// <para>Alerte iot ayant initié cette demande</para>
    /// <para>Display Name: Alerte IoT</para>
    /// </summary>
    [AttributeLogicalName("msdyn_iotalert")]
    [DisplayName("Alerte IoT")]
    public EntityReference msdyn_iotalert {
        get {
            return GetAttributeValue<EntityReference>("msdyn_iotalert");
        }
        set {
            SetAttributeValue("msdyn_iotalert", value);
        }
    }
    
    /// <summary>
    /// <para>ID de pièces jointes à l’entité avant la création de l’enregistrement de cas</para>
    /// <para>Display Name: Pré-créer l’ID de pièces jointes à l’entité</para>
    /// </summary>
    [AttributeLogicalName("msdyn_precreateattachmentsid")]
    [DisplayName("Pré-créer l’ID de pièces jointes à l’entité")]
    [MaxLength(400)]
    public string msdyn_precreateattachmentsid {
        get {
            return GetAttributeValue<string>("msdyn_precreateattachmentsid");
        }
        set {
            SetAttributeValue("msdyn_precreateattachmentsid", value);
        }
    }
    
    /// <summary>
    /// <para>ID de notes avant la création de l’enregistrement de cas</para>
    /// <para>Display Name: Pré-créer l’ID de notes</para>
    /// </summary>
    [AttributeLogicalName("msdyn_precreatenotesid")]
    [DisplayName("Pré-créer l’ID de notes")]
    [MaxLength(100)]
    public string msdyn_precreatenotesid {
        get {
            return GetAttributeValue<string>("msdyn_precreatenotesid");
        }
        set {
            SetAttributeValue("msdyn_precreatenotesid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Affiche le KPI SLA non résolu associé à la demande avec l’heure d’expiration la plus proche.</para>
    /// <para>Display Name: SLA suivant</para>
    /// </summary>
    [AttributeLogicalName("nextsla")]
    [DisplayName("SLA suivant")]
    [MaxLength(4000)]
    public string nextsla {
        get {
            return GetAttributeValue<string>("nextsla");
        }
        set {
            SetAttributeValue("nextsla", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Agence</para>
    /// </summary>
    [AttributeLogicalName("nxt_agencyid")]
    [DisplayName("Agence")]
    public EntityReference nxt_AgencyId {
        get {
            return GetAttributeValue<EntityReference>("nxt_agencyid");
        }
        set {
            SetAttributeValue("nxt_agencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Marque</para>
    /// </summary>
    [AttributeLogicalName("nxt_brandcode")]
    [DisplayName("Marque")]
    public nxt_brand? nxt_BrandCode {
        get {
            return GetOptionSetValue<nxt_brand>("nxt_brandcode");
        }
        set {
            SetOptionSetValue("nxt_brandcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_businesscode")]
    [DisplayName("Métier")]
    public nxt_business? nxt_BusinessCode {
        get {
            return GetOptionSetValue<nxt_business>("nxt_businesscode");
        }
        set {
            SetOptionSetValue("nxt_businesscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Compte acquéreur</para>
    /// </summary>
    [AttributeLogicalName("nxt_buyeraccountid")]
    [DisplayName("Compte acquéreur")]
    public EntityReference nxt_BuyerAccountId {
        get {
            return GetAttributeValue<EntityReference>("nxt_buyeraccountid");
        }
        set {
            SetAttributeValue("nxt_buyeraccountid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Choix</para>
    /// </summary>
    [AttributeLogicalName("nxt_choicecode")]
    [DisplayName("Choix")]
    public nxt_customertmachoice? nxt_ChoiceCode {
        get {
            return GetOptionSetValue<nxt_customertmachoice>("nxt_choicecode");
        }
        set {
            SetOptionSetValue("nxt_choicecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de clôture</para>
    /// </summary>
    [AttributeLogicalName("nxt_closedon")]
    [DisplayName("Date de clôture")]
    public DateTime? nxt_ClosedOn {
        get {
            return GetAttributeValue<DateTime?>("nxt_closedon");
        }
        set {
            SetAttributeValue("nxt_closedon", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Tranche commerciale</para>
    /// </summary>
    [AttributeLogicalName("nxt_commercialphaseid")]
    [DisplayName("Tranche commerciale")]
    public EntityReference nxt_CommercialPhaseId {
        get {
            return GetAttributeValue<EntityReference>("nxt_commercialphaseid");
        }
        set {
            SetAttributeValue("nxt_commercialphaseid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Parties communes</para>
    /// </summary>
    [AttributeLogicalName("nxt_commonparts")]
    [DisplayName("Parties communes")]
    [MaxLength(100)]
    public string nxt_CommonParts {
        get {
            return GetAttributeValue<string>("nxt_commonparts");
        }
        set {
            SetAttributeValue("nxt_commonparts", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Application concernée</para>
    /// </summary>
    [AttributeLogicalName("nxt_concernedapplicationcode")]
    [DisplayName("Application concernée")]
    public nxt_concernedapplication? nxt_ConcernedApplicationCode {
        get {
            return GetOptionSetValue<nxt_concernedapplication>("nxt_concernedapplicationcode");
        }
        set {
            SetOptionSetValue("nxt_concernedapplicationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modification contractuelle</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractamendmentcode")]
    [DisplayName("Modification contractuelle")]
    public nxt_contractamendment? nxt_ContractAmendmentCode {
        get {
            return GetOptionSetValue<nxt_contractamendment>("nxt_contractamendmentcode");
        }
        set {
            SetOptionSetValue("nxt_contractamendmentcode", value);
        }
    }
    
    /// <summary>
    /// <para>Champ saisie de l'utilisateur sur l'app modification contractuelle</para>
    /// <para>Display Name: Saisies Modification Contractuelle</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractamendmentinput")]
    [DisplayName("Saisies Modification Contractuelle")]
    public string nxt_ContractAmendmentInput {
        get {
            return GetAttributeValue<string>("nxt_contractamendmentinput");
        }
        set {
            SetAttributeValue("nxt_contractamendmentinput", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Contrat</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractid")]
    [DisplayName("Contrat")]
    public EntityReference nxt_ContractId {
        get {
            return GetAttributeValue<EntityReference>("nxt_contractid");
        }
        set {
            SetAttributeValue("nxt_contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle contractant</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractingroleid")]
    [DisplayName("Rôle contractant")]
    public EntityReference nxt_ContractingRoleId {
        get {
            return GetAttributeValue<EntityReference>("nxt_contractingroleid");
        }
        set {
            SetAttributeValue("nxt_contractingroleid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Réponse client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customeranswercode")]
    [DisplayName("Réponse client")]
    public Incident_nxt_CustomerAnswerCode? nxt_CustomerAnswerCode {
        get {
            return GetOptionSetValue<Incident_nxt_CustomerAnswerCode>("nxt_customeranswercode");
        }
        set {
            SetOptionSetValue("nxt_customeranswercode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle sur le contrat</para>
    /// </summary>
    [AttributeLogicalName("nxt_customercontractingrolecode")]
    [DisplayName("Rôle sur le contrat")]
    public nxt_contractingrole? nxt_CustomerContractingRoleCode {
        get {
            return GetOptionSetValue<nxt_contractingrole>("nxt_customercontractingrolecode");
        }
        set {
            SetOptionSetValue("nxt_customercontractingrolecode", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de Dossier Client associé à Demande.</para>
    /// <para>Display Name: Dossier Client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerfolderid")]
    [DisplayName("Dossier Client")]
    public EntityReference nxt_CustomerFolderId {
        get {
            return GetAttributeValue<EntityReference>("nxt_customerfolderid");
        }
        set {
            SetAttributeValue("nxt_customerfolderid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type de contact</para>
    /// </summary>
    [AttributeLogicalName("nxt_customertypecode")]
    [DisplayName("Type de contact")]
    public Incident_nxt_CustomerTypeCode? nxt_CustomerTypeCode {
        get {
            return GetOptionSetValue<Incident_nxt_CustomerTypeCode>("nxt_customertypecode");
        }
        set {
            SetOptionSetValue("nxt_customertypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: DFC1</para>
    /// </summary>
    [AttributeLogicalName("nxt_dfc1")]
    [DisplayName("DFC1")]
    public DateTime? nxt_Dfc1 {
        get {
            return GetAttributeValue<DateTime?>("nxt_dfc1");
        }
        set {
            SetAttributeValue("nxt_dfc1", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: DFC2</para>
    /// </summary>
    [AttributeLogicalName("nxt_dfc2")]
    [DisplayName("DFC2")]
    public DateTime? nxt_Dfc2 {
        get {
            return GetAttributeValue<DateTime?>("nxt_dfc2");
        }
        set {
            SetAttributeValue("nxt_dfc2", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Raison insatisfaction</para>
    /// </summary>
    [AttributeLogicalName("nxt_dissatisfactionreasoncode")]
    [DisplayName("Raison insatisfaction")]
    public Incident_nxt_DissatisfactionReasonCode? nxt_DissatisfactionReasonCode {
        get {
            return GetOptionSetValue<Incident_nxt_DissatisfactionReasonCode>("nxt_dissatisfactionreasoncode");
        }
        set {
            SetOptionSetValue("nxt_dissatisfactionreasoncode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Lien outil métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_externalurl")]
    [DisplayName("Lien outil métier")]
    [MaxLength(4000)]
    public string nxt_ExternalURL {
        get {
            return GetAttributeValue<string>("nxt_externalurl");
        }
        set {
            SetAttributeValue("nxt_externalurl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Ensemble immobilier</para>
    /// </summary>
    [AttributeLogicalName("nxt_housingcomplexid")]
    [DisplayName("Ensemble immobilier")]
    public EntityReference nxt_HousingComplexId {
        get {
            return GetAttributeValue<EntityReference>("nxt_housingcomplexid");
        }
        set {
            SetAttributeValue("nxt_housingcomplexid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modification effectuée</para>
    /// </summary>
    [AttributeLogicalName("nxt_isamendmentdone")]
    [DisplayName("Modification effectuée")]
    public bool? nxt_IsAmendmentDone {
        get {
            return GetAttributeValue<bool?>("nxt_isamendmentdone");
        }
        set {
            SetAttributeValue("nxt_isamendmentdone", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Décharge PMR</para>
    /// </summary>
    [AttributeLogicalName("nxt_isprmdischarge")]
    [DisplayName("Décharge PMR")]
    public bool? nxt_IsPRMDischarge {
        get {
            return GetAttributeValue<bool?>("nxt_isprmdischarge");
        }
        set {
            SetAttributeValue("nxt_isprmdischarge", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: AR Prise en charge envoyé</para>
    /// </summary>
    [AttributeLogicalName("nxt_isreceiptconfirmationsent")]
    [DisplayName("AR Prise en charge envoyé")]
    public bool? nxt_IsReceiptConfirmationSent {
        get {
            return GetAttributeValue<bool?>("nxt_isreceiptconfirmationsent");
        }
        set {
            SetAttributeValue("nxt_isreceiptconfirmationsent", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Numéro de lot</para>
    /// </summary>
    [AttributeLogicalName("nxt_lot")]
    [DisplayName("Numéro de lot")]
    [MaxLength(100)]
    public string nxt_Lot {
        get {
            return GetAttributeValue<string>("nxt_lot");
        }
        set {
            SetAttributeValue("nxt_lot", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Lot</para>
    /// </summary>
    [AttributeLogicalName("nxt_lotid")]
    [DisplayName("Lot")]
    public EntityReference nxt_LotId {
        get {
            return GetAttributeValue<EntityReference>("nxt_lotid");
        }
        set {
            SetAttributeValue("nxt_lotid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Fusionnée dans la demande</para>
    /// </summary>
    [AttributeLogicalName("nxt_masterid")]
    [DisplayName("Fusionnée dans la demande")]
    public EntityReference nxt_MasterId {
        get {
            return GetAttributeValue<EntityReference>("nxt_masterid");
        }
        set {
            SetAttributeValue("nxt_masterid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date information notaire</para>
    /// </summary>
    [AttributeLogicalName("nxt_notaryinformationdate")]
    [DisplayName("Date information notaire")]
    public DateTime? nxt_NotaryInformationDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_notaryinformationdate");
        }
        set {
            SetAttributeValue("nxt_notaryinformationdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Ancien propriétaire</para>
    /// </summary>
    [AttributeLogicalName("nxt_oldownerid")]
    [DisplayName("Ancien propriétaire")]
    public EntityReference nxt_OldOwnerId {
        get {
            return GetAttributeValue<EntityReference>("nxt_oldownerid");
        }
        set {
            SetAttributeValue("nxt_oldownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sous-thème (autre)</para>
    /// </summary>
    [AttributeLogicalName("nxt_othersubtheme")]
    [DisplayName("Sous-thème (autre)")]
    [MaxLength(100)]
    public string nxt_OtherSubTheme {
        get {
            return GetAttributeValue<string>("nxt_othersubtheme");
        }
        set {
            SetAttributeValue("nxt_othersubtheme", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de prise en charge</para>
    /// </summary>
    [AttributeLogicalName("nxt_processingstartdate")]
    [DisplayName("Date de prise en charge")]
    public DateTime? nxt_ProcessingStartDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_processingstartdate");
        }
        set {
            SetAttributeValue("nxt_processingstartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Programme</para>
    /// </summary>
    [AttributeLogicalName("nxt_programid")]
    [DisplayName("Programme")]
    public EntityReference nxt_ProgramId {
        get {
            return GetAttributeValue<EntityReference>("nxt_programid");
        }
        set {
            SetAttributeValue("nxt_programid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: N° demande de devis</para>
    /// </summary>
    [AttributeLogicalName("nxt_quoterequestnumber")]
    [DisplayName("N° demande de devis")]
    [MaxLength(100)]
    public string nxt_QuoteRequestNumber {
        get {
            return GetAttributeValue<string>("nxt_quoterequestnumber");
        }
        set {
            SetAttributeValue("nxt_quoterequestnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant total du devis</para>
    /// </summary>
    [AttributeLogicalName("nxt_quotetotalprice")]
    [DisplayName("Montant total du devis")]
    public decimal? nxt_QuoteTotalPrice {
        get {
            return GetMoneyValue("nxt_quotetotalprice");
        }
        set {
            SetMoneyValue("nxt_quotetotalprice", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Contrat de gestion locative</para>
    /// </summary>
    [AttributeLogicalName("nxt_rentalmanagementcontractid")]
    [DisplayName("Contrat de gestion locative")]
    public EntityReference nxt_RentalManagementContractId {
        get {
            return GetAttributeValue<EntityReference>("nxt_rentalmanagementcontractid");
        }
        set {
            SetAttributeValue("nxt_rentalmanagementcontractid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de réouverture</para>
    /// </summary>
    [AttributeLogicalName("nxt_reopenedon")]
    [DisplayName("Date de réouverture")]
    public DateTime? nxt_ReopenedOn {
        get {
            return GetAttributeValue<DateTime?>("nxt_reopenedon");
        }
        set {
            SetAttributeValue("nxt_reopenedon", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Temps de résolution (en jours)</para>
    /// </summary>
    [AttributeLogicalName("nxt_resolutiontimeindays")]
    [DisplayName("Temps de résolution (en jours)")]
    [Range(-2147483648, 2147483647)]
    public int? nxt_ResolutionTimeInDays {
        get {
            return GetAttributeValue<int?>("nxt_resolutiontimeindays");
        }
        set {
            SetAttributeValue("nxt_resolutiontimeindays", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Recherche client</para>
    /// </summary>
    [AttributeLogicalName("nxt_searchcontractingroleid")]
    [DisplayName("Recherche client")]
    public EntityReference nxt_SearchContractingRoleId {
        get {
            return GetAttributeValue<EntityReference>("nxt_searchcontractingroleid");
        }
        set {
            SetAttributeValue("nxt_searchcontractingroleid", value);
        }
    }
    
    /// <summary>
    /// <para>Anciennement Site</para>
    /// <para>Display Name: Filiale</para>
    /// </summary>
    [AttributeLogicalName("nxt_siteid")]
    [DisplayName("Filiale")]
    public EntityReference nxt_SiteId {
        get {
            return GetAttributeValue<EntityReference>("nxt_siteid");
        }
        set {
            SetAttributeValue("nxt_siteid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de fin du délai SRU</para>
    /// </summary>
    [AttributeLogicalName("nxt_srudeadlineenddate")]
    [DisplayName("Date de fin du délai SRU")]
    public DateTime? nxt_SruDeadLineEndDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_srudeadlineenddate");
        }
        set {
            SetAttributeValue("nxt_srudeadlineenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de début délai SRU</para>
    /// </summary>
    [AttributeLogicalName("nxt_srudeadlinestartdate")]
    [DisplayName("Date de début délai SRU")]
    public DateTime? nxt_SruDeadLineStartDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_srudeadlinestartdate");
        }
        set {
            SetAttributeValue("nxt_srudeadlinestartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date envoi SRU</para>
    /// </summary>
    [AttributeLogicalName("nxt_srusenddate")]
    [DisplayName("Date envoi SRU")]
    public DateTime? nxt_SruSendDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_srusenddate");
        }
        set {
            SetAttributeValue("nxt_srusenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sous-thème</para>
    /// </summary>
    [AttributeLogicalName("nxt_subthemeid")]
    [DisplayName("Sous-thème")]
    public EntityReference nxt_SubThemeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_subthemeid");
        }
        set {
            SetAttributeValue("nxt_subthemeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Thème</para>
    /// </summary>
    [AttributeLogicalName("nxt_themeid")]
    [DisplayName("Thème")]
    public EntityReference nxt_ThemeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_themeid");
        }
        set {
            SetAttributeValue("nxt_themeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de mise en attente client</para>
    /// </summary>
    [AttributeLogicalName("nxt_waitingforcustomerdate")]
    [DisplayName("Date de mise en attente client")]
    public DateTime? nxt_WaitingForCustomerDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_waitingforcustomerdate");
        }
        set {
            SetAttributeValue("nxt_waitingforcustomerdate", value);
        }
    }
    
    /// <summary>
    /// <para>Type de facturation TMA & choix</para>
    /// <para>Display Name: Type de facturation</para>
    /// </summary>
    [AttributeLogicalName("nxt_billingtypecode")]
    [DisplayName("Type de facturation")]
    public nxt_billingtypecode? nxt_billingtypecode {
        get {
            return GetOptionSetValue<nxt_billingtypecode>("nxt_billingtypecode");
        }
        set {
            SetOptionSetValue("nxt_billingtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant total du devis dans la devise de base.</para>
    /// <para>Display Name: Montant total du devis (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_quotetotalprice_base")]
    [DisplayName("Montant total du devis (de base)")]
    public decimal? nxt_quotetotalprice_Base {
        get {
            return GetMoneyValue("nxt_quotetotalprice_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sujet</para>
    /// </summary>
    [AttributeLogicalName("nxt_subject")]
    [DisplayName("Sujet")]
    [MaxLength(820)]
    public string nxt_subject {
        get {
            return GetAttributeValue<string>("nxt_subject");
        }
        set {
            SetAttributeValue("nxt_subject", value);
        }
    }
    
    [RelationshipSchemaName("Incident_Emails")]
    public IEnumerable<Email> Incident_Emails {
        get {
            return GetRelatedEntities<Email>("Incident_Emails", null);
        }
        set {
            SetRelatedEntities("Incident_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_Phonecalls")]
    public IEnumerable<PhoneCall> Incident_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Incident_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Incident_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("Incident_QueueItem")]
    public IEnumerable<QueueItem> Incident_QueueItem {
        get {
            return GetRelatedEntities<QueueItem>("Incident_QueueItem", null);
        }
        set {
            SetRelatedEntities("Incident_QueueItem", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_existingcase", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_existingcase {
        get {
            return GetRelatedEntities<Incident>("incident_existingcase", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_existingcase", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("incident_master_incident", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_master_incident {
        get {
            return GetRelatedEntities<Incident>("incident_master_incident", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_master_incident", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("incident_parent_incident", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencedincident_parent_incident {
        get {
            return GetRelatedEntities<Incident>("incident_parent_incident", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("incident_parent_incident", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_MasterId_incident", EntityRole.Referenced)]
    public IEnumerable<Incident> Referencednxt_incident_MasterId_incident {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_MasterId_incident", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("nxt_incident_MasterId_incident", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("existingcase")]
    [RelationshipSchemaName("incident_existingcase", EntityRole.Referencing)]
    public Incident Referencingincident_existingcase {
        get {
            return GetRelatedEntity<Incident>("incident_existingcase", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_existingcase", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("incident_master_incident", EntityRole.Referencing)]
    public Incident Referencingincident_master_incident {
        get {
            return GetRelatedEntity<Incident>("incident_master_incident", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_master_incident", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentcaseid")]
    [RelationshipSchemaName("incident_parent_incident", EntityRole.Referencing)]
    public Incident Referencingincident_parent_incident {
        get {
            return GetRelatedEntity<Incident>("incident_parent_incident", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("incident_parent_incident", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("nxt_masterid")]
    [RelationshipSchemaName("nxt_incident_MasterId_incident", EntityRole.Referencing)]
    public Incident Referencingnxt_incident_MasterId_incident {
        get {
            return GetRelatedEntity<Incident>("nxt_incident_MasterId_incident", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("nxt_incident_MasterId_incident", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("bpf_incident_nxt_demande")]
    public IEnumerable<nxt_demande> bpf_incident_nxt_demande {
        get {
            return GetRelatedEntities<nxt_demande>("bpf_incident_nxt_demande", null);
        }
        set {
            SetRelatedEntities("bpf_incident_nxt_demande", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_incidents")]
    public BusinessUnit business_unit_incidents {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_incidents", null);
        }
        set {
            SetRelatedEntity("business_unit_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("primarycontactid")]
    [RelationshipSchemaName("contact_as_primary_contact")]
    public Contact contact_as_primary_contact {
        get {
            return GetRelatedEntity<Contact>("contact_as_primary_contact", null);
        }
        set {
            SetRelatedEntity("contact_as_primary_contact", null, value);
        }
    }
    
    [AttributeLogicalName("responsiblecontactid")]
    [RelationshipSchemaName("contact_as_responsible_contact")]
    public Contact contact_as_responsible_contact {
        get {
            return GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
        }
        set {
            SetRelatedEntity("contact_as_responsible_contact", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_activity_parties")]
    public IEnumerable<ActivityParty> incident_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("incident_activity_parties", null);
        }
        set {
            SetRelatedEntities("incident_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_connections1")]
    public IEnumerable<Connection> incident_connections1 {
        get {
            return GetRelatedEntities<Connection>("incident_connections1", null);
        }
        set {
            SetRelatedEntities("incident_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_connections2")]
    public IEnumerable<Connection> incident_connections2 {
        get {
            return GetRelatedEntities<Connection>("incident_connections2", null);
        }
        set {
            SetRelatedEntities("incident_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("incident_customer_accounts")]
    public Account incident_customer_accounts {
        get {
            return GetRelatedEntity<Account>("incident_customer_accounts", null);
        }
        set {
            SetRelatedEntity("incident_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("incident_customer_contacts")]
    public Contact incident_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("incident_customer_contacts", null);
        }
        set {
            SetRelatedEntity("incident_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_nxt_Messages")]
    public IEnumerable<nxt_Message> incident_nxt_Messages {
        get {
            return GetRelatedEntities<nxt_Message>("incident_nxt_Messages", null);
        }
        set {
            SetRelatedEntities("incident_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_incidentbase_createdby")]
    public SystemUser lk_incidentbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
    public SystemUser lk_incidentbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_incidentbase_modifiedby")]
    public SystemUser lk_incidentbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
    public SystemUser lk_incidentbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_incidentbase_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_agencyid")]
    [RelationshipSchemaName("nxt_incident_AgencyId_businessunit")]
    public BusinessUnit nxt_incident_AgencyId_businessunit {
        get {
            return GetRelatedEntity<BusinessUnit>("nxt_incident_AgencyId_businessunit", null);
        }
        set {
            SetRelatedEntity("nxt_incident_AgencyId_businessunit", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_buyeraccountid")]
    [RelationshipSchemaName("nxt_incident_BuyerAccountId_account")]
    public Account nxt_incident_BuyerAccountId_account {
        get {
            return GetRelatedEntity<Account>("nxt_incident_BuyerAccountId_account", null);
        }
        set {
            SetRelatedEntity("nxt_incident_BuyerAccountId_account", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_commercialphaseid")]
    [RelationshipSchemaName("nxt_incident_CommercialPhaseId_nxt_commercial")]
    public nxt_CommercialPhase nxt_incident_CommercialPhaseId_nxt_commercial {
        get {
            return GetRelatedEntity<nxt_CommercialPhase>("nxt_incident_CommercialPhaseId_nxt_commercial", null);
        }
        set {
            SetRelatedEntity("nxt_incident_CommercialPhaseId_nxt_commercial", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_contractid")]
    [RelationshipSchemaName("nxt_incident_ContractId_nxt_contract")]
    public nxt_Contract nxt_incident_ContractId_nxt_contract {
        get {
            return GetRelatedEntity<nxt_Contract>("nxt_incident_ContractId_nxt_contract", null);
        }
        set {
            SetRelatedEntity("nxt_incident_ContractId_nxt_contract", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_contractingroleid")]
    [RelationshipSchemaName("nxt_incident_ContractingRoleId_nxt_contractin")]
    public nxt_ContractingRole nxt_incident_ContractingRoleId_nxt_contractin {
        get {
            return GetRelatedEntity<nxt_ContractingRole>("nxt_incident_ContractingRoleId_nxt_contractin", null);
        }
        set {
            SetRelatedEntity("nxt_incident_ContractingRoleId_nxt_contractin", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_housingcomplexid")]
    [RelationshipSchemaName("nxt_incident_HousingComplexId_nxt_housingcomp")]
    public nxt_HousingComplex nxt_incident_HousingComplexId_nxt_housingcomp {
        get {
            return GetRelatedEntity<nxt_HousingComplex>("nxt_incident_HousingComplexId_nxt_housingcomp", null);
        }
        set {
            SetRelatedEntity("nxt_incident_HousingComplexId_nxt_housingcomp", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_lotid")]
    [RelationshipSchemaName("nxt_incident_LotId_nxt_lot")]
    public nxt_Lot nxt_incident_LotId_nxt_lot {
        get {
            return GetRelatedEntity<nxt_Lot>("nxt_incident_LotId_nxt_lot", null);
        }
        set {
            SetRelatedEntity("nxt_incident_LotId_nxt_lot", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_oldownerid")]
    [RelationshipSchemaName("nxt_incident_OldOwnerId_systemuser")]
    public SystemUser nxt_incident_OldOwnerId_systemuser {
        get {
            return GetRelatedEntity<SystemUser>("nxt_incident_OldOwnerId_systemuser", null);
        }
        set {
            SetRelatedEntity("nxt_incident_OldOwnerId_systemuser", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_programid")]
    [RelationshipSchemaName("nxt_incident_ProgramId_nxt_program")]
    public nxt_Program nxt_incident_ProgramId_nxt_program {
        get {
            return GetRelatedEntity<nxt_Program>("nxt_incident_ProgramId_nxt_program", null);
        }
        set {
            SetRelatedEntity("nxt_incident_ProgramId_nxt_program", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_rentalmanagementcontractid")]
    [RelationshipSchemaName("nxt_incident_RentalManagementContractId_contr")]
    public nxt_Contract nxt_incident_RentalManagementContractId_contr {
        get {
            return GetRelatedEntity<nxt_Contract>("nxt_incident_RentalManagementContractId_contr", null);
        }
        set {
            SetRelatedEntity("nxt_incident_RentalManagementContractId_contr", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_searchcontractingroleid")]
    [RelationshipSchemaName("nxt_incident_SearchContractingRoleId_nxt_cont")]
    public nxt_ContractingRole nxt_incident_SearchContractingRoleId_nxt_cont {
        get {
            return GetRelatedEntity<nxt_ContractingRole>("nxt_incident_SearchContractingRoleId_nxt_cont", null);
        }
        set {
            SetRelatedEntity("nxt_incident_SearchContractingRoleId_nxt_cont", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_siteid")]
    [RelationshipSchemaName("nxt_incident_SiteId_businessunit")]
    public BusinessUnit nxt_incident_SiteId_businessunit {
        get {
            return GetRelatedEntity<BusinessUnit>("nxt_incident_SiteId_businessunit", null);
        }
        set {
            SetRelatedEntity("nxt_incident_SiteId_businessunit", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_subthemeid")]
    [RelationshipSchemaName("nxt_incident_SubThemeId_nxt_subtheme")]
    public nxt_SubTheme nxt_incident_SubThemeId_nxt_subtheme {
        get {
            return GetRelatedEntity<nxt_SubTheme>("nxt_incident_SubThemeId_nxt_subtheme", null);
        }
        set {
            SetRelatedEntity("nxt_incident_SubThemeId_nxt_subtheme", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_themeid")]
    [RelationshipSchemaName("nxt_incident_ThemeId_nxt_theme")]
    public nxt_Theme nxt_incident_ThemeId_nxt_theme {
        get {
            return GetRelatedEntity<nxt_Theme>("nxt_incident_ThemeId_nxt_theme", null);
        }
        set {
            SetRelatedEntity("nxt_incident_ThemeId_nxt_theme", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_invoice_IncidentId_incident")]
    public IEnumerable<Invoice> nxt_invoice_IncidentId_incident {
        get {
            return GetRelatedEntities<Invoice>("nxt_invoice_IncidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_invoice_IncidentId_incident", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerfolderid")]
    [RelationshipSchemaName("nxt_nxt_customerfolder_incident_CustomerFolde")]
    public nxt_customerfolder nxt_nxt_customerfolder_incident_CustomerFolde {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_nxt_customerfolder_incident_CustomerFolde", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_customerfolder_incident_CustomerFolde", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_document_IncidentId_incident")]
    public IEnumerable<nxt_Document> nxt_nxt_document_IncidentId_incident {
        get {
            return GetRelatedEntities<nxt_Document>("nxt_nxt_document_IncidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_document_IncidentId_incident", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_subscription_IncidentId_incident")]
    public IEnumerable<nxt_Subscription> nxt_nxt_subscription_IncidentId_incident {
        get {
            return GetRelatedEntities<nxt_Subscription>("nxt_nxt_subscription_IncidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_subscription_IncidentId_incident", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_supplierintervention_IncidentId_incid")]
    public IEnumerable<nxt_SupplierIntervention> nxt_nxt_supplierintervention_IncidentId_incid {
        get {
            return GetRelatedEntities<nxt_SupplierIntervention>("nxt_nxt_supplierintervention_IncidentId_incid", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_supplierintervention_IncidentId_incid", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_supplierquote_IncidentId_incident")]
    public IEnumerable<nxt_SupplierQuote> nxt_nxt_supplierquote_IncidentId_incident {
        get {
            return GetRelatedEntities<nxt_SupplierQuote>("nxt_nxt_supplierquote_IncidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_supplierquote_IncidentId_incident", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_quote_incidentId_incident")]
    public IEnumerable<Quote> nxt_quote_incidentId_incident {
        get {
            return GetRelatedEntities<Quote>("nxt_quote_incidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_quote_incidentId_incident", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_salesorder_IncidentId_incident")]
    public IEnumerable<SalesOrder> nxt_salesorder_IncidentId_incident {
        get {
            return GetRelatedEntities<SalesOrder>("nxt_salesorder_IncidentId_incident", null);
        }
        set {
            SetRelatedEntities("nxt_salesorder_IncidentId_incident", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_incidents")]
    public SystemUser system_user_incidents {
        get {
            return GetRelatedEntity<SystemUser>("system_user_incidents", null);
        }
        set {
            SetRelatedEntity("system_user_incidents", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_incidents")]
    public Team team_incidents {
        get {
            return GetRelatedEntity<Team>("team_incidents", null);
        }
        set {
            SetRelatedEntity("team_incidents", null, value);
        }
    }
    
    public static Incident Retrieve(IOrganizationService service, Guid id, params Expression<Func<Incident,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyTicketNumber'</para>
    /// </summary>
    public static Incident Retrieve_nxt_AlternateKeyTicketNumber(IOrganizationService service, string TicketNumber, params Expression<Func<Incident,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("ticketnumber", TicketNumber);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyTicketNumber'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyTicketNumber(string TicketNumber) {
        KeyAttributes.Clear();
        KeyAttributes.Add("ticketnumber", TicketNumber);
    }
}

[DataContract()]
public enum IncidentState {
    
    [EnumMember()]
    [OptionSetMetadata("Active", Index=2, Lcid=1036, Color="#D91E18")]
    Active = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Résolu(e)", Index=0, Lcid=1036, Color="#358717")]
    Résolue = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé(e)", Index=1, Lcid=1036, Color="#666666")]
    Annulée = 2,
}

[DataContract()]
public enum Incident_CaseTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Générale", Index=0, Lcid=1036, Description="", Color="#FF8C00")]
    Générale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Réclamation", Index=3, Lcid=1036, Description="", Color="#E71022")]
    Réclamation = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Devis", Index=2, Lcid=1036, Description="", Color="#0072C6")]
    Devis = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Intervention", Index=1, Lcid=1036, Description="", Color="#21de76")]
    Intervention = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Modification contractuelle", Index=4, Lcid=1036, Description="", Color="#d814db")]
    Modificationcontractuelle = 5,
    
    [EnumMember()]
    [OptionSetMetadata("TMA", Index=5, Lcid=1036, Description="", Color="#0ef0e4")]
    TMA = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Choix & Options", Index=6, Lcid=1036, Description="", Color="#4fafdb")]
    ChoixOptions = 7,
}

[DataContract()]
public enum Incident_ContractServiceLevelCode {
    
    [EnumMember()]
    [OptionSetMetadata("Or", Index=0, Lcid=1036)]
    Or = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Argent", Index=1, Lcid=1036)]
    Argent = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Bronze", Index=2, Lcid=1036)]
    Bronze = 3,
}

[DataContract()]
public enum Incident_CustomerSatisfactionCode {
    
    [EnumMember()]
    [OptionSetMetadata("Très insatisfait(e)", Index=4, Lcid=1036)]
    Trèsinsatisfaite = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Insatisfait(e)", Index=3, Lcid=1036)]
    Insatisfaite = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Neutre", Index=2, Lcid=1036)]
    Neutre = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Satisfait(e)", Index=1, Lcid=1036)]
    Satisfaite = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Très satisfait(e)", Index=0, Lcid=1036)]
    Trèssatisfaite = 5,
}

[DataContract()]
public enum Incident_FirstResponseSLAStatus {
    
    [EnumMember()]
    [OptionSetMetadata("En cours", Index=0, Lcid=1036)]
    Encours = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Conformité précaire", Index=1, Lcid=1036)]
    Conformitéprécaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé(e)", Index=2, Lcid=1036)]
    Terminée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Non conforme", Index=3, Lcid=1036)]
    Nonconforme = 4,
}

[DataContract()]
public enum Incident_IncidentStageCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Incident_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Élevée", Index=2, Lcid=1036, Description="", Color="")]
    Élevée = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Normale", Index=1, Lcid=1036, Description="", Color="")]
    Normale = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Urgente", Index=0, Lcid=1036, Color="#0000ff")]
    Urgente = 3,
}

[DataContract()]
public enum Incident_ResolveBySLAStatus {
    
    [EnumMember()]
    [OptionSetMetadata("En cours", Index=0, Lcid=1036, Description="")]
    Encours = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Conformité précaire", Index=1, Lcid=1036, Description="")]
    Conformitéprécaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé(e)", Index=2, Lcid=1036, Description="")]
    Terminée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Non conforme", Index=3, Lcid=1036, Description="")]
    Nonconforme = 4,
}

[DataContract()]
public enum Incident_SeverityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Incident_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Nouveau", Index=0, Lcid=1036, Description="", Color="#3B79B7")]
    Nouveau = 1,
    
    [EnumMember()]
    [OptionSetMetadata("En attente client", Index=3, Lcid=1036, Description="", Color="#ffd900")]
    Enattenteclient = 2,
    
    [EnumMember()]
    [OptionSetMetadata("En attente interne", Index=4, Lcid=1036, Description="", Color="#e80004")]
    Enattenteinterne = 3,
    
    [EnumMember()]
    [OptionSetMetadata("En cours", Index=2, Lcid=1036, Description="", Color="#007A7C")]
    Encours = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Clôturée", Index=1, Lcid=1036, Description="", Color="#949494")]
    Clôturée = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Annulée (Hors CRM)", Index=6, Lcid=1036, Description="", Color="#666666")]
    AnnuléeHorsCRM = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Archivée", Index=5, Lcid=1036, Description="", Color="#000000")]
    Archivée = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Fusionnée", Index=7, Lcid=1036, Description="", Color="#806c00")]
    Fusionnée = 2000,
    
    [EnumMember()]
    [OptionSetMetadata("Annulée (SPAM)", Index=8, Lcid=1036, Description="")]
    AnnuléeSPAM = 2001,
}

[DataContract()]
public enum Incident_nxt_CustomerAnswerCode {
    
    [EnumMember()]
    [OptionSetMetadata("Accepté totalement", Index=0, Lcid=1036, Description="")]
    Acceptétotalement = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Refusé", Index=1, Lcid=1036, Description="")]
    Refusé = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Accepté partiellement", Index=2, Lcid=1036, Description="")]
    Acceptépartiellement = 3,
}

[DataContract()]
public enum Incident_nxt_CustomerTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Client", Index=0, Lcid=1036, Description="")]
    Client = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Intervenant", Index=1, Lcid=1036, Description="")]
    Intervenant = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Client Grand Compte", Index=2, Lcid=1036, Description="")]
    ClientGrandCompte = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Contact", Index=3, Lcid=1036, Description="")]
    Contact = 4,
}

[DataContract()]
public enum Incident_nxt_DissatisfactionReasonCode {
    
    [EnumMember()]
    [OptionSetMetadata("Posture collaborateur", Index=0, Lcid=1036, Description="")]
    Posturecollaborateur = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Qualité du service", Index=1, Lcid=1036, Description="")]
    Qualitéduservice = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Contestation à la réponse apportée", Index=2, Lcid=1036, Description="")]
    Contestationàlaréponseapportée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Non applicable", Index=3, Lcid=1036, Description="")]
    Nonapplicable = 4,
}
