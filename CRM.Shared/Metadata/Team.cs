//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Groupe d’utilisateurs système qui collabore de façon régulière. Les équipes peuvent être utilisées pour simplifier le partage des enregistrements et fournir aux membres de l’équipe un accès commun aux données de l’organisation lorsque ceux-ci appartiennent à des divisions différentes.</para>
/// <para>Display Name: Équipe</para>
/// </summary>
[EntityLogicalName("team")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Team : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "team";
    
    public const int EntityTypeCode = 9;
    
    public Team() : 
            base(EntityLogicalName) {
    }
    
    public Team(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("teamid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("teamid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe.</para>
    /// <para>Display Name: Équipe</para>
    /// </summary>
    [AttributeLogicalName("teamid")]
    [DisplayName("Équipe")]
    public Guid? TeamId {
        get {
            return GetAttributeValue<Guid?>("teamid");
        }
        set {
            SetId("teamid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur principal responsable de l’équipe.</para>
    /// <para>Display Name: Administrateur</para>
    /// </summary>
    [AttributeLogicalName("administratorid")]
    [DisplayName("Administrateur")]
    public EntityReference AdministratorId {
        get {
            return GetAttributeValue<EntityReference>("administratorid");
        }
        set {
            SetAttributeValue("administratorid", value);
        }
    }
    
    /// <summary>
    /// <para>ID d’objet pour un groupe.</para>
    /// <para>Display Name: ID d’objet pour un groupe</para>
    /// </summary>
    [AttributeLogicalName("azureactivedirectoryobjectid")]
    [DisplayName("ID d’objet pour un groupe")]
    public Guid? AzureActiveDirectoryObjectId {
        get {
            return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
        }
        set {
            SetAttributeValue("azureactivedirectoryobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division à laquelle l'équipe est associée.</para>
    /// <para>Display Name: Division</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    [DisplayName("Division")]
    public EntityReference BusinessUnitId {
        get {
            return GetAttributeValue<EntityReference>("businessunitid");
        }
        set {
            SetAttributeValue("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a créé l'équipe.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la création de l'équipe.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a créé l’équipe.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>The delegated authorization context for the team.</para>
    /// <para>Display Name: Delegated authorization</para>
    /// </summary>
    [AttributeLogicalName("delegatedauthorizationid")]
    [DisplayName("Delegated authorization")]
    public EntityReference DelegatedAuthorizationId {
        get {
            return GetAttributeValue<EntityReference>("delegatedauthorizationid");
        }
        set {
            SetAttributeValue("delegatedauthorizationid", value);
        }
    }
    
    /// <summary>
    /// <para>Description de l'équipe.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Adresse de messagerie de l'équipe.</para>
    /// <para>Display Name: Courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Courrier électronique")]
    [MaxLength(100)]
    public string EMailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Taux de change de la devise associée à l’équipe par rapport à la devise de base.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l’équipe est une équipe de division par défaut.</para>
    /// <para>Display Name: Est la valeur par défaut</para>
    /// </summary>
    [AttributeLogicalName("isdefault")]
    [DisplayName("Est la valeur par défaut")]
    public bool? IsDefault {
        get {
            return GetAttributeValue<bool?>("isdefault");
        }
    }
    
    [AttributeLogicalName("issastokenset")]
    public bool? IsSasTokenSet {
        get {
            return GetAttributeValue<bool?>("issastokenset");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type d’appartenance</para>
    /// </summary>
    [AttributeLogicalName("membershiptype")]
    [DisplayName("Type d’appartenance")]
    public Team_MembershipType? MembershipType {
        get {
            return GetOptionSetValue<Team_MembershipType>("membershiptype");
        }
        set {
            SetOptionSetValue("membershiptype", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a modifié l'équipe pour la dernière fois.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la dernière modification de l'équipe.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a modifié l’équipe pour la dernière fois.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Nom de l'équipe.</para>
    /// <para>Display Name: Nom de l’équipe</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom de l’équipe")]
    [MaxLength(160)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'organisation associée à l'équipe.</para>
    /// <para>Display Name: Organisation </para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organisation ")]
    public Guid? OrganizationId {
        get {
            return GetAttributeValue<Guid?>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de l'équipe.</para>
    /// <para>Display Name: Nom de l’équipe</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom de l’équipe")]
    [MaxLength(160)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la file d’attente par défaut de l’équipe.</para>
    /// <para>Display Name: File d’attente par défaut</para>
    /// </summary>
    [AttributeLogicalName("queueid")]
    [DisplayName("File d’attente par défaut")]
    public EntityReference QueueId {
        get {
            return GetAttributeValue<EntityReference>("queueid");
        }
        set {
            SetAttributeValue("queueid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'enregistrement concerné par l'équipe.</para>
    /// <para>Display Name: ID objet Concernant</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("ID objet Concernant")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Réservé exclusivement à un usage interne.</para>
    /// <para>Display Name: Qualificateur du lien de partage</para>
    /// </summary>
    [AttributeLogicalName("sharelinkqualifier")]
    [DisplayName("Qualificateur du lien de partage")]
    [MaxLength(1250)]
    public string ShareLinkQualifier {
        get {
            return GetAttributeValue<string>("sharelinkqualifier");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si l'équipe va être gérée par le système.</para>
    /// <para>Display Name: Géré par le système</para>
    /// </summary>
    [AttributeLogicalName("systemmanaged")]
    [DisplayName("Géré par le système")]
    public bool? SystemManaged {
        get {
            return GetAttributeValue<bool?>("systemmanaged");
        }
    }
    
    /// <summary>
    /// <para>Affiche le modèle d'équipe qui est associé à l'équipe.</para>
    /// <para>Display Name: Identificateur du modèle d'équipe</para>
    /// </summary>
    [AttributeLogicalName("teamtemplateid")]
    [DisplayName("Identificateur du modèle d\'équipe")]
    public EntityReference TeamTemplateId {
        get {
            return GetAttributeValue<EntityReference>("teamtemplateid");
        }
        set {
            SetAttributeValue("teamtemplateid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d’équipe.</para>
    /// <para>Display Name: Type d’équipe</para>
    /// </summary>
    [AttributeLogicalName("teamtype")]
    [DisplayName("Type d’équipe")]
    public Team_TeamType? TeamType {
        get {
            return GetOptionSetValue<Team_TeamType>("teamtype");
        }
        set {
            SetOptionSetValue("teamtype", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la devise associée à l’équipe.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version de l’équipe.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Prononciation du nom complet de l’équipe, traduit phonétiquement en hiragana ou en katakana.</para>
    /// <para>Display Name: Nom Yomi</para>
    /// </summary>
    [AttributeLogicalName("yominame")]
    [DisplayName("Nom Yomi")]
    [MaxLength(160)]
    public string YomiName {
        get {
            return GetAttributeValue<string>("yominame");
        }
        set {
            SetAttributeValue("yominame", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Bureau</para>
    /// </summary>
    [AttributeLogicalName("nxt_agencycode")]
    [DisplayName("Code Bureau")]
    [MaxLength(100)]
    public string nxt_AgencyCode {
        get {
            return GetAttributeValue<string>("nxt_agencycode");
        }
        set {
            SetAttributeValue("nxt_agencycode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_teambusinesscode")]
    [DisplayName("Métier")]
    public nxt_teambusiness? nxt_TeamBusinessCode {
        get {
            return GetOptionSetValue<nxt_teambusiness>("nxt_teambusinesscode");
        }
        set {
            SetOptionSetValue("nxt_teambusinesscode", value);
        }
    }
    
    [AttributeLogicalName("businessunitid")]
    [RelationshipSchemaName("business_unit_teams")]
    public BusinessUnit business_unit_teams {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_teams", null);
        }
        set {
            SetRelatedEntity("business_unit_teams", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_team_createdonbehalfby")]
    public SystemUser lk_team_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_team_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
    public SystemUser lk_team_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_team_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("administratorid")]
    [RelationshipSchemaName("lk_teambase_administratorid")]
    public SystemUser lk_teambase_administratorid {
        get {
            return GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
        }
        set {
            SetRelatedEntity("lk_teambase_administratorid", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_teambase_createdby")]
    public SystemUser lk_teambase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_teambase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_teambase_modifiedby")]
    public SystemUser lk_teambase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_teambase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_message_team_owningteam")]
    public IEnumerable<nxt_Message> nxt_message_team_owningteam {
        get {
            return GetRelatedEntities<nxt_Message>("nxt_message_team_owningteam", null);
        }
        set {
            SetRelatedEntities("nxt_message_team_owningteam", null, value);
        }
    }
    
    [AttributeLogicalName("queueid")]
    [RelationshipSchemaName("queue_team")]
    public Queue queue_team {
        get {
            return GetRelatedEntity<Queue>("queue_team", null);
        }
        set {
            SetRelatedEntity("queue_team", null, value);
        }
    }
    
    [RelationshipSchemaName("team_accounts")]
    public IEnumerable<Account> team_accounts {
        get {
            return GetRelatedEntities<Account>("team_accounts", null);
        }
        set {
            SetRelatedEntities("team_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("team_connections1")]
    public IEnumerable<Connection> team_connections1 {
        get {
            return GetRelatedEntities<Connection>("team_connections1", null);
        }
        set {
            SetRelatedEntities("team_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("team_connections2")]
    public IEnumerable<Connection> team_connections2 {
        get {
            return GetRelatedEntities<Connection>("team_connections2", null);
        }
        set {
            SetRelatedEntities("team_connections2", null, value);
        }
    }
    
    [RelationshipSchemaName("team_contacts")]
    public IEnumerable<Contact> team_contacts {
        get {
            return GetRelatedEntities<Contact>("team_contacts", null);
        }
        set {
            SetRelatedEntities("team_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("team_email")]
    public IEnumerable<Email> team_email {
        get {
            return GetRelatedEntities<Email>("team_email", null);
        }
        set {
            SetRelatedEntities("team_email", null, value);
        }
    }
    
    [RelationshipSchemaName("team_environmentvariabledefinition")]
    public IEnumerable<EnvironmentVariableDefinition> team_environmentvariabledefinition {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("team_environmentvariabledefinition", null);
        }
        set {
            SetRelatedEntities("team_environmentvariabledefinition", null, value);
        }
    }
    
    [RelationshipSchemaName("team_environmentvariablevalue")]
    public IEnumerable<EnvironmentVariableValue> team_environmentvariablevalue {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("team_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntities("team_environmentvariablevalue", null, value);
        }
    }
    
    [RelationshipSchemaName("team_incidents")]
    public IEnumerable<Incident> team_incidents {
        get {
            return GetRelatedEntities<Incident>("team_incidents", null);
        }
        set {
            SetRelatedEntities("team_incidents", null, value);
        }
    }
    
    [RelationshipSchemaName("team_invoicedetail")]
    public IEnumerable<InvoiceDetail> team_invoicedetail {
        get {
            return GetRelatedEntities<InvoiceDetail>("team_invoicedetail", null);
        }
        set {
            SetRelatedEntities("team_invoicedetail", null, value);
        }
    }
    
    [RelationshipSchemaName("team_invoices")]
    public IEnumerable<Invoice> team_invoices {
        get {
            return GetRelatedEntities<Invoice>("team_invoices", null);
        }
        set {
            SetRelatedEntities("team_invoices", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_applicationsmapping")]
    public IEnumerable<nxt_ApplicationsMapping> team_nxt_applicationsmapping {
        get {
            return GetRelatedEntities<nxt_ApplicationsMapping>("team_nxt_applicationsmapping", null);
        }
        set {
            SetRelatedEntities("team_nxt_applicationsmapping", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_commercialphase")]
    public IEnumerable<nxt_CommercialPhase> team_nxt_commercialphase {
        get {
            return GetRelatedEntities<nxt_CommercialPhase>("team_nxt_commercialphase", null);
        }
        set {
            SetRelatedEntities("team_nxt_commercialphase", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_contract")]
    public IEnumerable<nxt_Contract> team_nxt_contract {
        get {
            return GetRelatedEntities<nxt_Contract>("team_nxt_contract", null);
        }
        set {
            SetRelatedEntities("team_nxt_contract", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_contractingrole")]
    public IEnumerable<nxt_ContractingRole> team_nxt_contractingrole {
        get {
            return GetRelatedEntities<nxt_ContractingRole>("team_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntities("team_nxt_contractingrole", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_contributor")]
    public IEnumerable<nxt_Contributor> team_nxt_contributor {
        get {
            return GetRelatedEntities<nxt_Contributor>("team_nxt_contributor", null);
        }
        set {
            SetRelatedEntities("team_nxt_contributor", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_customerfolder")]
    public IEnumerable<nxt_customerfolder> team_nxt_customerfolder {
        get {
            return GetRelatedEntities<nxt_customerfolder>("team_nxt_customerfolder", null);
        }
        set {
            SetRelatedEntities("team_nxt_customerfolder", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_customlog")]
    public IEnumerable<nxt_CustomLog> team_nxt_customlog {
        get {
            return GetRelatedEntities<nxt_CustomLog>("team_nxt_customlog", null);
        }
        set {
            SetRelatedEntities("team_nxt_customlog", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_document")]
    public IEnumerable<nxt_Document> team_nxt_document {
        get {
            return GetRelatedEntities<nxt_Document>("team_nxt_document", null);
        }
        set {
            SetRelatedEntities("team_nxt_document", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_environmentparameter")]
    public IEnumerable<nxt_EnvironmentParameter> team_nxt_environmentparameter {
        get {
            return GetRelatedEntities<nxt_EnvironmentParameter>("team_nxt_environmentparameter", null);
        }
        set {
            SetRelatedEntities("team_nxt_environmentparameter", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_housingcomplex")]
    public IEnumerable<nxt_HousingComplex> team_nxt_housingcomplex {
        get {
            return GetRelatedEntities<nxt_HousingComplex>("team_nxt_housingcomplex", null);
        }
        set {
            SetRelatedEntities("team_nxt_housingcomplex", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_loan")]
    public IEnumerable<nxt_Loan> team_nxt_loan {
        get {
            return GetRelatedEntities<nxt_Loan>("team_nxt_loan", null);
        }
        set {
            SetRelatedEntities("team_nxt_loan", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_lot")]
    public IEnumerable<nxt_Lot> team_nxt_lot {
        get {
            return GetRelatedEntities<nxt_Lot>("team_nxt_lot", null);
        }
        set {
            SetRelatedEntities("team_nxt_lot", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_managementactor")]
    public IEnumerable<nxt_ManagementActor> team_nxt_managementactor {
        get {
            return GetRelatedEntities<nxt_ManagementActor>("team_nxt_managementactor", null);
        }
        set {
            SetRelatedEntities("team_nxt_managementactor", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_personaldata")]
    public IEnumerable<nxt_PersonalData> team_nxt_personaldata {
        get {
            return GetRelatedEntities<nxt_PersonalData>("team_nxt_personaldata", null);
        }
        set {
            SetRelatedEntities("team_nxt_personaldata", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_program")]
    public IEnumerable<nxt_Program> team_nxt_program {
        get {
            return GetRelatedEntities<nxt_Program>("team_nxt_program", null);
        }
        set {
            SetRelatedEntities("team_nxt_program", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_routingrule")]
    public IEnumerable<nxt_RoutingRule> team_nxt_routingrule {
        get {
            return GetRelatedEntities<nxt_RoutingRule>("team_nxt_routingrule", null);
        }
        set {
            SetRelatedEntities("team_nxt_routingrule", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_slacustomerfolder")]
    public IEnumerable<nxt_SLACustomerFolder> team_nxt_slacustomerfolder {
        get {
            return GetRelatedEntities<nxt_SLACustomerFolder>("team_nxt_slacustomerfolder", null);
        }
        set {
            SetRelatedEntities("team_nxt_slacustomerfolder", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_subscription")]
    public IEnumerable<nxt_Subscription> team_nxt_subscription {
        get {
            return GetRelatedEntities<nxt_Subscription>("team_nxt_subscription", null);
        }
        set {
            SetRelatedEntities("team_nxt_subscription", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_subtheme")]
    public IEnumerable<nxt_SubTheme> team_nxt_subtheme {
        get {
            return GetRelatedEntities<nxt_SubTheme>("team_nxt_subtheme", null);
        }
        set {
            SetRelatedEntities("team_nxt_subtheme", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_supplierintervention")]
    public IEnumerable<nxt_SupplierIntervention> team_nxt_supplierintervention {
        get {
            return GetRelatedEntities<nxt_SupplierIntervention>("team_nxt_supplierintervention", null);
        }
        set {
            SetRelatedEntities("team_nxt_supplierintervention", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_supplierquote")]
    public IEnumerable<nxt_SupplierQuote> team_nxt_supplierquote {
        get {
            return GetRelatedEntities<nxt_SupplierQuote>("team_nxt_supplierquote", null);
        }
        set {
            SetRelatedEntities("team_nxt_supplierquote", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_theme")]
    public IEnumerable<nxt_Theme> team_nxt_theme {
        get {
            return GetRelatedEntities<nxt_Theme>("team_nxt_theme", null);
        }
        set {
            SetRelatedEntities("team_nxt_theme", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_tradediscountcategory")]
    public IEnumerable<nxt_TradeDiscountCategory> team_nxt_tradediscountcategory {
        get {
            return GetRelatedEntities<nxt_TradeDiscountCategory>("team_nxt_tradediscountcategory", null);
        }
        set {
            SetRelatedEntities("team_nxt_tradediscountcategory", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_tradediscounttype")]
    public IEnumerable<nxt_TradeDiscountType> team_nxt_tradediscounttype {
        get {
            return GetRelatedEntities<nxt_TradeDiscountType>("team_nxt_tradediscounttype", null);
        }
        set {
            SetRelatedEntities("team_nxt_tradediscounttype", null, value);
        }
    }
    
    [RelationshipSchemaName("team_nxt_vat")]
    public IEnumerable<nxt_Vat> team_nxt_vat {
        get {
            return GetRelatedEntities<nxt_Vat>("team_nxt_vat", null);
        }
        set {
            SetRelatedEntities("team_nxt_vat", null, value);
        }
    }
    
    [RelationshipSchemaName("team_orders")]
    public IEnumerable<SalesOrder> team_orders {
        get {
            return GetRelatedEntities<SalesOrder>("team_orders", null);
        }
        set {
            SetRelatedEntities("team_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("team_phonecall")]
    public IEnumerable<PhoneCall> team_phonecall {
        get {
            return GetRelatedEntities<PhoneCall>("team_phonecall", null);
        }
        set {
            SetRelatedEntities("team_phonecall", null, value);
        }
    }
    
    [RelationshipSchemaName("team_queueitembase_workerid")]
    public IEnumerable<QueueItem> team_queueitembase_workerid {
        get {
            return GetRelatedEntities<QueueItem>("team_queueitembase_workerid", null);
        }
        set {
            SetRelatedEntities("team_queueitembase_workerid", null, value);
        }
    }
    
    [RelationshipSchemaName("team_quotedetail")]
    public IEnumerable<QuoteDetail> team_quotedetail {
        get {
            return GetRelatedEntities<QuoteDetail>("team_quotedetail", null);
        }
        set {
            SetRelatedEntities("team_quotedetail", null, value);
        }
    }
    
    [RelationshipSchemaName("team_quotes")]
    public IEnumerable<Quote> team_quotes {
        get {
            return GetRelatedEntities<Quote>("team_quotes", null);
        }
        set {
            SetRelatedEntities("team_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("team_salesorderdetail")]
    public IEnumerable<SalesOrderDetail> team_salesorderdetail {
        get {
            return GetRelatedEntities<SalesOrderDetail>("team_salesorderdetail", null);
        }
        set {
            SetRelatedEntities("team_salesorderdetail", null, value);
        }
    }
    
    [RelationshipSchemaName("teammembership_association")]
    public IEnumerable<SystemUser> teammembership_association {
        get {
            return GetRelatedEntities<SystemUser>("teammembership_association", null);
        }
        set {
            SetRelatedEntities("teammembership_association", null, value);
        }
    }
    
    public static Team Retrieve(IOrganizationService service, Guid id, params Expression<Func<Team,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'ObjectId with MembershipType'</para>
    /// </summary>
    public static Team Retrieve_aadobjectid_membershiptype(IOrganizationService service, Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType, params Expression<Func<Team,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        keys.Add("membershiptype", MembershipType);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'ObjectId with MembershipType'</para>
    /// </summary>
    public void AltKey_aadobjectid_membershiptype(Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType) {
        KeyAttributes.Clear();
        KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        KeyAttributes.Add("membershiptype", MembershipType);
    }
}

[DataContract()]
public enum Team_MembershipType {
    
    [EnumMember()]
    [OptionSetMetadata("Membres et invités", Index=0, Lcid=1036)]
    Membresetinvités = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Membres", Index=1, Lcid=1036)]
    Membres = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Propriétaires", Index=2, Lcid=1036)]
    Propriétaires = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Invités", Index=3, Lcid=1036)]
    Invités = 3,
}

[DataContract()]
public enum Team_TeamType {
    
    [EnumMember()]
    [OptionSetMetadata("Propriétaire", Index=0, Lcid=1036)]
    Propriétaire = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Accès", Index=1, Lcid=1036)]
    Accès = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Groupe de sécurité", Index=2, Lcid=1036)]
    Groupedesécurité = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Groupe Office", Index=3, Lcid=1036)]
    GroupeOffice = 3,
}
