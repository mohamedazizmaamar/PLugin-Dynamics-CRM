//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Règle de routage</para>
/// </summary>
[EntityLogicalName("nxt_routingrule")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_RoutingRule : ExtendedEntity<nxt_RoutingRuleState, nxt_RoutingRule_statuscode> {
    
    public const string EntityLogicalName = "nxt_routingrule";
    
    public const int EntityTypeCode = 10666;
    
    public nxt_RoutingRule() : 
            base(EntityLogicalName) {
    }
    
    public nxt_RoutingRule(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_name");
        }
    }
    
    [AttributeLogicalName("nxt_routingruleid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_routingruleid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Règle de Routage</para>
    /// </summary>
    [AttributeLogicalName("nxt_routingruleid")]
    [DisplayName("Règle de Routage")]
    public Guid? nxt_RoutingRuleId {
        get {
            return GetAttributeValue<Guid?>("nxt_routingruleid");
        }
        set {
            SetId("nxt_routingruleid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_businesscode")]
    [DisplayName("Métier")]
    public nxt_business? nxt_BusinessCode {
        get {
            return GetOptionSetValue<nxt_business>("nxt_businesscode");
        }
        set {
            SetOptionSetValue("nxt_businesscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Equipe transverse</para>
    /// </summary>
    [AttributeLogicalName("nxt_istransverseteam")]
    [DisplayName("Equipe transverse")]
    public bool? nxt_IsTransverseTeam {
        get {
            return GetAttributeValue<bool?>("nxt_istransverseteam");
        }
        set {
            SetAttributeValue("nxt_istransverseteam", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string nxt_Name {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle P1</para>
    /// </summary>
    [AttributeLogicalName("nxt_rolep1code")]
    [DisplayName("Rôle P1")]
    public nxt_managementactorrole? nxt_RoleP1Code {
        get {
            return GetOptionSetValue<nxt_managementactorrole>("nxt_rolep1code");
        }
        set {
            SetOptionSetValue("nxt_rolep1code", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle P2</para>
    /// </summary>
    [AttributeLogicalName("nxt_rolep2code")]
    [DisplayName("Rôle P2")]
    public nxt_managementactorrole? nxt_RoleP2Code {
        get {
            return GetOptionSetValue<nxt_managementactorrole>("nxt_rolep2code");
        }
        set {
            SetOptionSetValue("nxt_rolep2code", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle P3</para>
    /// </summary>
    [AttributeLogicalName("nxt_rolep3code")]
    [DisplayName("Rôle P3")]
    public nxt_managementactorrole? nxt_RoleP3Code {
        get {
            return GetOptionSetValue<nxt_managementactorrole>("nxt_rolep3code");
        }
        set {
            SetOptionSetValue("nxt_rolep3code", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sous-thème</para>
    /// </summary>
    [AttributeLogicalName("nxt_subthemeid")]
    [DisplayName("Sous-thème")]
    public EntityReference nxt_SubThemeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_subthemeid");
        }
        set {
            SetAttributeValue("nxt_subthemeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Métier de l'équipe</para>
    /// </summary>
    [AttributeLogicalName("nxt_teambusinesscode")]
    [DisplayName("Métier de l\'équipe")]
    public nxt_teambusiness? nxt_TeamBusinessCode {
        get {
            return GetOptionSetValue<nxt_teambusiness>("nxt_teambusinesscode");
        }
        set {
            SetOptionSetValue("nxt_teambusinesscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Thème</para>
    /// </summary>
    [AttributeLogicalName("nxt_themeid")]
    [DisplayName("Thème")]
    public EntityReference nxt_ThemeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_themeid");
        }
        set {
            SetAttributeValue("nxt_themeid", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Règle de Routage</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_RoutingRuleState? statecode {
        get {
            return GetOptionSetValue<nxt_RoutingRuleState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Règle de Routage</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public nxt_RoutingRule_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_RoutingRule_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_nxt_routingrule")]
    public BusinessUnit business_unit_nxt_routingrule {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_nxt_routingrule", null);
        }
        set {
            SetRelatedEntity("business_unit_nxt_routingrule", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_routingrule_createdby")]
    public SystemUser lk_nxt_routingrule_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_routingrule_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_routingrule_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_routingrule_createdonbehalfby")]
    public SystemUser lk_nxt_routingrule_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_routingrule_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_routingrule_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_routingrule_modifiedby")]
    public SystemUser lk_nxt_routingrule_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_routingrule_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_routingrule_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_routingrule_modifiedonbehalfby")]
    public SystemUser lk_nxt_routingrule_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_routingrule_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_routingrule_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_subthemeid")]
    [RelationshipSchemaName("nxt_nxt_routingrule_SubThemeId_nxt_subtheme")]
    public nxt_SubTheme nxt_nxt_routingrule_SubThemeId_nxt_subtheme {
        get {
            return GetRelatedEntity<nxt_SubTheme>("nxt_nxt_routingrule_SubThemeId_nxt_subtheme", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_routingrule_SubThemeId_nxt_subtheme", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_themeid")]
    [RelationshipSchemaName("nxt_nxt_routingrule_ThemeId_nxt_theme")]
    public nxt_Theme nxt_nxt_routingrule_ThemeId_nxt_theme {
        get {
            return GetRelatedEntity<nxt_Theme>("nxt_nxt_routingrule_ThemeId_nxt_theme", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_routingrule_ThemeId_nxt_theme", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_nxt_routingrule")]
    public Team team_nxt_routingrule {
        get {
            return GetRelatedEntity<Team>("team_nxt_routingrule", null);
        }
        set {
            SetRelatedEntity("team_nxt_routingrule", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_nxt_routingrule")]
    public SystemUser user_nxt_routingrule {
        get {
            return GetRelatedEntity<SystemUser>("user_nxt_routingrule", null);
        }
        set {
            SetRelatedEntity("user_nxt_routingrule", null, value);
        }
    }
    
    public static nxt_RoutingRule Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_RoutingRule,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyBusinessThemeSubTheme'</para>
    /// </summary>
    public static nxt_RoutingRule Retrieve_nxt_AlternateKeyBusinessThemeSubTheme(IOrganizationService service, nxt_business nxt_BusinessCode, EntityReference nxt_ThemeId, EntityReference nxt_SubThemeId, params Expression<Func<nxt_RoutingRule,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_businesscode", nxt_BusinessCode);
        keys.Add("nxt_themeid", nxt_ThemeId);
        keys.Add("nxt_subthemeid", nxt_SubThemeId);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyBusinessThemeSubTheme'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyBusinessThemeSubTheme(nxt_business nxt_BusinessCode, EntityReference nxt_ThemeId, EntityReference nxt_SubThemeId) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_businesscode", nxt_BusinessCode);
        KeyAttributes.Add("nxt_themeid", nxt_ThemeId);
        KeyAttributes.Add("nxt_subthemeid", nxt_SubThemeId);
    }
}

[DataContract()]
public enum nxt_RoutingRuleState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_RoutingRule_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}
