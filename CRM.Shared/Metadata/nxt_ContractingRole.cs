//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Rôle contractant</para>
/// </summary>
[EntityLogicalName("nxt_contractingrole")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_ContractingRole : ExtendedEntity<nxt_ContractingRoleState, nxt_ContractingRole_statuscode> {
    
    public const string EntityLogicalName = "nxt_contractingrole";
    
    public const int EntityTypeCode = 10486;
    
    public nxt_ContractingRole() : 
            base(EntityLogicalName) {
    }
    
    public nxt_ContractingRole(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_contractingrolenumber");
        }
    }
    
    [AttributeLogicalName("nxt_contractingroleid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_contractingroleid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Rôle Contractant</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractingroleid")]
    [DisplayName("Rôle Contractant")]
    public Guid? nxt_ContractingRoleId {
        get {
            return GetAttributeValue<Guid?>("nxt_contractingroleid");
        }
        set {
            SetId("nxt_contractingroleid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
        set {
            SetAttributeValue("createdby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
        set {
            SetAttributeValue("createdon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
        set {
            SetAttributeValue("createdonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
        set {
            SetAttributeValue("modifiedby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
        set {
            SetAttributeValue("modifiedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
        set {
            SetAttributeValue("modifiedonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence du client </para>
    /// </summary>
    [AttributeLogicalName("nxt_contractingrolenumber")]
    [DisplayName("Référence du client ")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_contractingrolenumber");
        }
        set {
            SetAttributeValue("nxt_contractingrolenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence d'activation</para>
    /// </summary>
    [AttributeLogicalName("nxt_activationreference")]
    [DisplayName("Référence d\'activation")]
    [MaxLength(100)]
    public string nxt_ActivationReference {
        get {
            return GetAttributeValue<string>("nxt_activationreference");
        }
        set {
            SetAttributeValue("nxt_activationreference", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de début</para>
    /// </summary>
    [AttributeLogicalName("nxt_begindate")]
    [DisplayName("Date de début")]
    public DateTime? nxt_BeginDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_begindate");
        }
        set {
            SetAttributeValue("nxt_begindate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Contrat</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractid")]
    [DisplayName("Contrat")]
    public EntityReference nxt_ContractId {
        get {
            return GetAttributeValue<EntityReference>("nxt_contractid");
        }
        set {
            SetAttributeValue("nxt_contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence du client </para>
    /// </summary>
    [AttributeLogicalName("nxt_contractingrolenumber")]
    [DisplayName("Référence du client ")]
    [MaxLength(100)]
    public string nxt_ContractingRoleNumber {
        get {
            return GetAttributeValue<string>("nxt_contractingrolenumber");
        }
        set {
            SetAttributeValue("nxt_contractingrolenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerid")]
    [DisplayName("Nom")]
    public EntityReference nxt_CustomerId {
        get {
            return GetAttributeValue<EntityReference>("nxt_customerid");
        }
        set {
            SetAttributeValue("nxt_customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de fin</para>
    /// </summary>
    [AttributeLogicalName("nxt_enddate")]
    [DisplayName("Date de fin")]
    public DateTime? nxt_EndDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_enddate");
        }
        set {
            SetAttributeValue("nxt_enddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: EPC actif</para>
    /// </summary>
    [AttributeLogicalName("nxt_isepcactive")]
    [DisplayName("EPC actif")]
    public bool? nxt_IsEpcActive {
        get {
            return GetAttributeValue<bool?>("nxt_isepcactive");
        }
        set {
            SetAttributeValue("nxt_isepcactive", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Habite l'immeuble</para>
    /// </summary>
    [AttributeLogicalName("nxt_islivinginthebuilding")]
    [DisplayName("Habite l\'immeuble")]
    public bool? nxt_IsLivingInTheBuilding {
        get {
            return GetAttributeValue<bool?>("nxt_islivinginthebuilding");
        }
        set {
            SetAttributeValue("nxt_islivinginthebuilding", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Rôle</para>
    /// </summary>
    [AttributeLogicalName("nxt_rolecode")]
    [DisplayName("Rôle")]
    public nxt_contractingrole? nxt_RoleCode {
        get {
            return GetOptionSetValue<nxt_contractingrole>("nxt_rolecode");
        }
        set {
            SetOptionSetValue("nxt_rolecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Lien outil métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_sigeourl")]
    [DisplayName("Lien outil métier")]
    [MaxLength(200)]
    public string nxt_SigeoURL {
        get {
            return GetAttributeValue<string>("nxt_sigeourl");
        }
        set {
            SetAttributeValue("nxt_sigeourl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Id Client technical</para>
    /// </summary>
    [AttributeLogicalName("nxt_technicalcustomerid")]
    [DisplayName("Id Client technical")]
    [MaxLength(100)]
    public string nxt_TechnicalCustomerId {
        get {
            return GetAttributeValue<string>("nxt_technicalcustomerid");
        }
        set {
            SetAttributeValue("nxt_technicalcustomerid", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Rôle Contractant</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_ContractingRoleState? statecode {
        get {
            return GetOptionSetValue<nxt_ContractingRoleState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Rôle Contractant</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public nxt_ContractingRole_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_ContractingRole_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_nxt_contractingrole")]
    public BusinessUnit business_unit_nxt_contractingrole {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntity("business_unit_nxt_contractingrole", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_contractingrole_createdby")]
    public SystemUser lk_nxt_contractingrole_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contractingrole_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contractingrole_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_contractingrole_createdonbehalfby")]
    public SystemUser lk_nxt_contractingrole_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contractingrole_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contractingrole_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_contractingrole_modifiedby")]
    public SystemUser lk_nxt_contractingrole_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contractingrole_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contractingrole_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_contractingrole_modifiedonbehalfby")]
    public SystemUser lk_nxt_contractingrole_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contractingrole_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contractingrole_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerid")]
    [RelationshipSchemaName("nxt_account_nxt_contractingrole")]
    public Account nxt_account_nxt_contractingrole {
        get {
            return GetRelatedEntity<Account>("nxt_account_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntity("nxt_account_nxt_contractingrole", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerid")]
    [RelationshipSchemaName("nxt_contact_nxt_contractingrole")]
    public Contact nxt_contact_nxt_contractingrole {
        get {
            return GetRelatedEntity<Contact>("nxt_contact_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntity("nxt_contact_nxt_contractingrole", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_email_SearchContractingRoleId_nxt_contrac")]
    public IEnumerable<Email> nxt_email_SearchContractingRoleId_nxt_contrac {
        get {
            return GetRelatedEntities<Email>("nxt_email_SearchContractingRoleId_nxt_contrac", null);
        }
        set {
            SetRelatedEntities("nxt_email_SearchContractingRoleId_nxt_contrac", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_ContractingRoleId_nxt_contractin")]
    public IEnumerable<Incident> nxt_incident_ContractingRoleId_nxt_contractin {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_ContractingRoleId_nxt_contractin", null);
        }
        set {
            SetRelatedEntities("nxt_incident_ContractingRoleId_nxt_contractin", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_SearchContractingRoleId_nxt_cont")]
    public IEnumerable<Incident> nxt_incident_SearchContractingRoleId_nxt_cont {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_SearchContractingRoleId_nxt_cont", null);
        }
        set {
            SetRelatedEntities("nxt_incident_SearchContractingRoleId_nxt_cont", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_contractid")]
    [RelationshipSchemaName("nxt_nxt_contractingrole_ContractId_nxt_contra")]
    public nxt_Contract nxt_nxt_contractingrole_ContractId_nxt_contra {
        get {
            return GetRelatedEntity<nxt_Contract>("nxt_nxt_contractingrole_ContractId_nxt_contra", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_contractingrole_ContractId_nxt_contra", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_nxt_contractingrole")]
    public Team team_nxt_contractingrole {
        get {
            return GetRelatedEntity<Team>("team_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntity("team_nxt_contractingrole", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_nxt_contractingrole")]
    public SystemUser user_nxt_contractingrole {
        get {
            return GetRelatedEntity<SystemUser>("user_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntity("user_nxt_contractingrole", null, value);
        }
    }
    
    public static nxt_ContractingRole Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_ContractingRole,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyContratIdClientRole'</para>
    /// </summary>
    public static nxt_ContractingRole Retrieve_nxt_AlternateKeyContratIdClientRole(IOrganizationService service, string nxt_TechnicalCustomerId, nxt_contractingrole nxt_RoleCode, EntityReference nxt_ContractId, params Expression<Func<nxt_ContractingRole,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_technicalcustomerid", nxt_TechnicalCustomerId);
        keys.Add("nxt_rolecode", nxt_RoleCode);
        keys.Add("nxt_contractid", nxt_ContractId);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyContratIdClientRole'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyContratIdClientRole(string nxt_TechnicalCustomerId, nxt_contractingrole nxt_RoleCode, EntityReference nxt_ContractId) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_technicalcustomerid", nxt_TechnicalCustomerId);
        KeyAttributes.Add("nxt_rolecode", nxt_RoleCode);
        KeyAttributes.Add("nxt_contractid", nxt_ContractId);
    }
}

[DataContract()]
public enum nxt_ContractingRoleState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_ContractingRole_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}
