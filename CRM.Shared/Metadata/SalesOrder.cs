//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Devis ayant été accepté.</para>
/// <para>Display Name: Commande</para>
/// </summary>
[EntityLogicalName("salesorder")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SalesOrder : ExtendedEntity<SalesOrderState, SalesOrder_StatusCode> {
    
    public const string EntityLogicalName = "salesorder";
    
    public const int EntityTypeCode = 1088;
    
    public SalesOrder() : 
            base(EntityLogicalName) {
    }
    
    public SalesOrder(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("salesorderid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("salesorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la commande.</para>
    /// <para>Display Name: Commande</para>
    /// </summary>
    [AttributeLogicalName("salesorderid")]
    [DisplayName("Commande")]
    public Guid? SalesOrderId {
        get {
            return GetAttributeValue<Guid?>("salesorderid");
        }
        set {
            SetId("salesorderid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le compte parent associé à l'enregistrement. Ces informations permettent d'établir un lien entre la commande client et le compte sélectionné dans le champ Client pour la production de rapports et d'analyses.</para>
    /// <para>Display Name: Compte</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Compte")]
    public EntityReference AccountId {
        get {
            return GetAttributeValue<EntityReference>("accountid");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse de facturation.</para>
    /// <para>Display Name: ID d'adresse de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_addressid")]
    [DisplayName("ID d\'adresse de facturation")]
    public Guid? BillTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("billto_addressid");
        }
        set {
            SetAttributeValue("billto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse de facturation du client.</para>
    /// <para>Display Name: Ville</para>
    /// </summary>
    [AttributeLogicalName("billto_city")]
    [DisplayName("Ville")]
    [MaxLength(80)]
    public string BillTo_City {
        get {
            return GetAttributeValue<string>("billto_city");
        }
        set {
            SetAttributeValue("billto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse de facturation complète.</para>
    /// <para>Display Name: Adresse de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_composite")]
    [DisplayName("Adresse de facturation")]
    public string BillTo_Composite {
        get {
            return GetAttributeValue<string>("billto_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal de l'adresse de facturation du client.</para>
    /// <para>Display Name: Nom du contact de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_contactname")]
    [DisplayName("Nom du contact de facturation")]
    [MaxLength(150)]
    public string BillTo_ContactName {
        get {
            return GetAttributeValue<string>("billto_contactname");
        }
        set {
            SetAttributeValue("billto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse de facturation du client.</para>
    /// <para>Display Name: Pays</para>
    /// </summary>
    [AttributeLogicalName("billto_country")]
    [DisplayName("Pays")]
    [MaxLength(80)]
    public string BillTo_Country {
        get {
            return GetAttributeValue<string>("billto_country");
        }
        set {
            SetAttributeValue("billto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie de l'adresse de facturation du client.</para>
    /// <para>Display Name: Télécopie de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_fax")]
    [DisplayName("Télécopie de facturation")]
    [MaxLength(50)]
    public string BillTo_Fax {
        get {
            return GetAttributeValue<string>("billto_fax");
        }
        set {
            SetAttributeValue("billto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse de facturation du client.</para>
    /// <para>Display Name: Rue</para>
    /// </summary>
    [AttributeLogicalName("billto_line1")]
    [DisplayName("Rue")]
    [MaxLength(500)]
    public string BillTo_Line1 {
        get {
            return GetAttributeValue<string>("billto_line1");
        }
        set {
            SetAttributeValue("billto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse de facturation du client.</para>
    /// <para>Display Name: Complément d'adresse</para>
    /// </summary>
    [AttributeLogicalName("billto_line2")]
    [DisplayName("Complément d\'adresse")]
    [MaxLength(250)]
    public string BillTo_Line2 {
        get {
            return GetAttributeValue<string>("billto_line2");
        }
        set {
            SetAttributeValue("billto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la troisième ligne de l'adresse de facturation.</para>
    /// <para>Display Name: ZZ_Rue</para>
    /// </summary>
    [AttributeLogicalName("billto_line3")]
    [DisplayName("ZZ_Rue")]
    [MaxLength(250)]
    public string BillTo_Line3 {
        get {
            return GetAttributeValue<string>("billto_line3");
        }
        set {
            SetAttributeValue("billto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom pour l'adresse de facturation du client, tel que « Siège » ou « Bureau local », pour identifier l'adresse.</para>
    /// <para>Display Name: Complément de nom</para>
    /// </summary>
    [AttributeLogicalName("billto_name")]
    [DisplayName("Complément de nom")]
    [MaxLength(200)]
    public string BillTo_Name {
        get {
            return GetAttributeValue<string>("billto_name");
        }
        set {
            SetAttributeValue("billto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse de facturation.</para>
    /// <para>Display Name: Code postal</para>
    /// </summary>
    [AttributeLogicalName("billto_postalcode")]
    [DisplayName("Code postal")]
    [MaxLength(20)]
    public string BillTo_PostalCode {
        get {
            return GetAttributeValue<string>("billto_postalcode");
        }
        set {
            SetAttributeValue("billto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse de facturation.</para>
    /// <para>Display Name: Département/province de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_stateorprovince")]
    [DisplayName("Département/province de facturation")]
    [MaxLength(50)]
    public string BillTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("billto_stateorprovince");
        }
        set {
            SetAttributeValue("billto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone de l'adresse de facturation du client.</para>
    /// <para>Display Name: Téléphone de facturation</para>
    /// </summary>
    [AttributeLogicalName("billto_telephone")]
    [DisplayName("Téléphone de facturation")]
    [MaxLength(50)]
    public string BillTo_Telephone {
        get {
            return GetAttributeValue<string>("billto_telephone");
        }
        set {
            SetAttributeValue("billto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la campagne d'origine de la commande.</para>
    /// <para>Display Name: Campagne source</para>
    /// </summary>
    [AttributeLogicalName("campaignid")]
    [DisplayName("Campagne source")]
    public EntityReference CampaignId {
        get {
            return GetAttributeValue<EntityReference>("campaignid");
        }
        set {
            SetAttributeValue("campaignid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le contact parent associé à l'enregistrement. Ces informations permettent d'établir un lien entre le contrat et le contact sélectionné dans le champ Client pour la production de rapports et d'analyses.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [AttributeLogicalName("contactid")]
    [DisplayName("Contact")]
    public EntityReference ContactId {
        get {
            return GetAttributeValue<EntityReference>("contactid");
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé(e) par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé(e) par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement .</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé(e) par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé(e) par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le compte client ou le contact pour fournir un lien rapide vers les détails supplémentaires du client, comme les informations de compte, les activités et les opportunités.</para>
    /// <para>Display Name: Client</para>
    /// </summary>
    [AttributeLogicalName("customerid")]
    [DisplayName("Client")]
    public EntityReference CustomerId {
        get {
            return GetAttributeValue<EntityReference>("customerid");
        }
        set {
            SetAttributeValue("customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date à laquelle tout ou partie de la commande a été livré au client.</para>
    /// <para>Display Name: Date d'exécution</para>
    /// </summary>
    [AttributeLogicalName("datefulfilled")]
    [DisplayName("Date d\'exécution")]
    public DateTime? DateFulfilled {
        get {
            return GetAttributeValue<DateTime?>("datefulfilled");
        }
        set {
            SetAttributeValue("datefulfilled", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire la commande, comme les produits ou les services proposés ou des informations sur les préférences de produits du client.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant de la remise pour la commande si le client peut bénéficier de remises spéciales.</para>
    /// <para>Display Name: Montant de la remise sur commande</para>
    /// </summary>
    [AttributeLogicalName("discountamount")]
    [DisplayName("Montant de la remise sur commande")]
    public decimal? DiscountAmount {
        get {
            return GetMoneyValue("discountamount");
        }
        set {
            SetMoneyValue("discountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant de la remise sur commande dans la devise de base.</para>
    /// <para>Display Name: Montant de la remise sur commande (de base)</para>
    /// </summary>
    [AttributeLogicalName("discountamount_base")]
    [DisplayName("Montant de la remise sur commande (de base)")]
    public decimal? DiscountAmount_Base {
        get {
            return GetMoneyValue("discountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Tapez le taux de remise qui doit être appliqué au champ Montant détaillé pour inclure des remises supplémentaires pour le client sur la commande.</para>
    /// <para>Display Name: Remise sur commande (%)</para>
    /// </summary>
    [AttributeLogicalName("discountpercentage")]
    [DisplayName("Remise sur commande (%)")]
    public decimal? DiscountPercentage {
        get {
            return GetAttributeValue<decimal?>("discountpercentage");
        }
        set {
            SetAttributeValue("discountpercentage", value);
        }
    }
    
    /// <summary>
    /// <para>Adresse de messagerie principale pour l'entité.</para>
    /// <para>Display Name: Adresse de messagerie</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Adresse de messagerie")]
    [MaxLength(100)]
    public string EmailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs monétaires de l'enregistrement en devise locale dans la devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Tapez les frais de port ou de livraison des produits de la commande pour les intégrer au calcul du champ Montant total.</para>
    /// <para>Display Name: Frais de port</para>
    /// </summary>
    [AttributeLogicalName("freightamount")]
    [DisplayName("Frais de port")]
    public decimal? FreightAmount {
        get {
            return GetMoneyValue("freightamount");
        }
        set {
            SetMoneyValue("freightamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Frais de port dans la devise de base.</para>
    /// <para>Display Name: Frais de port (de base)</para>
    /// </summary>
    [AttributeLogicalName("freightamount_base")]
    [DisplayName("Frais de port (de base)")]
    public decimal? FreightAmount_Base {
        get {
            return GetMoneyValue("freightamount_base");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour vous assurer du traitement correct des frais de livraison.</para>
    /// <para>Display Name: Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("freighttermscode")]
    [DisplayName("Conditions de transport")]
    public SalesOrder_FreightTermsCode? FreightTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_FreightTermsCode>("freighttermscode");
        }
        set {
            SetOptionSetValue("freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si les prix spécifiés sur la facture sont verrouillés pour empêcher d'autres mises à jour.</para>
    /// <para>Display Name: Tarifs bloqués</para>
    /// </summary>
    [AttributeLogicalName("ispricelocked")]
    [DisplayName("Tarifs bloqués")]
    public bool? IsPriceLocked {
        get {
            return GetAttributeValue<bool?>("ispricelocked");
        }
        set {
            SetAttributeValue("ispricelocked", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date et l'heure du dernier envoi de la commande pour traitement à la comptabilité ou à un progiciel de gestion intégré (ERP, Enterprise Resource Planning).</para>
    /// <para>Display Name: Dernier envoi à l'arrière-guichet</para>
    /// </summary>
    [AttributeLogicalName("lastbackofficesubmit")]
    [DisplayName("Dernier envoi à l\'arrière-guichet")]
    public DateTime? LastBackofficeSubmit {
        get {
            return GetAttributeValue<DateTime?>("lastbackofficesubmit");
        }
        set {
            SetAttributeValue("lastbackofficesubmit", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié(e) par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié(e) par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de la commande.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Modifié(e) par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié(e) par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour la commande.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(300)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée de suspension de la commande, en minutes.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'opportunité associée pour que les données de la commande et de l'opportunité soient associées pour la production de rapports et d'analyses.</para>
    /// <para>Display Name: Opportunité</para>
    /// </summary>
    [AttributeLogicalName("opportunityid")]
    [DisplayName("Opportunité")]
    public EntityReference OpportunityId {
        get {
            return GetAttributeValue<EntityReference>("opportunityid");
        }
        set {
            SetAttributeValue("opportunityid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Méthode de création</para>
    /// </summary>
    [AttributeLogicalName("ordercreationmethod")]
    [DisplayName("Méthode de création")]
    public salesordercreationmethod? OrderCreationMethod {
        get {
            return GetOptionSetValue<salesordercreationmethod>("ordercreationmethod");
        }
        set {
            SetOptionSetValue("ordercreationmethod", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le numéro de commande pour servir de référence client et permettre les recherches. Le numéro ne peut pas être modifié.</para>
    /// <para>Display Name: Référence de commande</para>
    /// </summary>
    [AttributeLogicalName("ordernumber")]
    [DisplayName("Référence de commande")]
    [MaxLength(100)]
    public string OrderNumber {
        get {
            return GetAttributeValue<string>("ordernumber");
        }
        set {
            SetAttributeValue("ordernumber", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de paiement pour indiquer quand le client doit payer le montant total.</para>
    /// <para>Display Name: Conditions de paiement</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Conditions de paiement")]
    public SalesOrder_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez les tarifs par défaut associés à cet enregistrement pour vous assurer que les produits associés à la campagne sont proposés aux prix corrects.</para>
    /// <para>Display Name: Tarifs</para>
    /// </summary>
    [AttributeLogicalName("pricelevelid")]
    [DisplayName("Tarifs")]
    public EntityReference PriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("pricelevelid");
        }
        set {
            SetAttributeValue("pricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d'erreur de tarification, comme un produit manquant ou non valide ou une quantité manquante.</para>
    /// <para>Display Name: Erreur de tarification </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Erreur de tarification ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour la commande.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(300)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la priorité afin que les clients préférés ou les problèmes critiques soient traités rapidement.</para>
    /// <para>Display Name: Priorité</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priorité")]
    public SalesOrder_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<SalesOrder_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'ID du processus associé à l'entité.</para>
    /// <para>Display Name: ID de processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("ID de processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le devis associé pour que les données de la commande et du devis soient associées pour la production de rapports et d'analyses.</para>
    /// <para>Display Name: Devis</para>
    /// </summary>
    [AttributeLogicalName("quoteid")]
    [DisplayName("Devis")]
    public EntityReference QuoteId {
        get {
            return GetAttributeValue<EntityReference>("quoteid");
        }
        set {
            SetAttributeValue("quoteid", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date de livraison demandée par le client pour tous les produits de la commande.</para>
    /// <para>Display Name: Date de livraison demandée</para>
    /// </summary>
    [AttributeLogicalName("requestdeliveryby")]
    [DisplayName("Date de livraison demandée")]
    public DateTime? RequestDeliveryBy {
        get {
            return GetAttributeValue<DateTime?>("requestdeliveryby");
        }
        set {
            SetAttributeValue("requestdeliveryby", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement de commande client.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cette commande client. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse de livraison.</para>
    /// <para>Display Name: ID d'adresse d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_addressid")]
    [DisplayName("ID d\'adresse d\'expédition")]
    public Guid? ShipTo_AddressId {
        get {
            return GetAttributeValue<Guid?>("shipto_addressid");
        }
        set {
            SetAttributeValue("shipto_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse de livraison du client.</para>
    /// <para>Display Name: Ville d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_city")]
    [DisplayName("Ville d\'expédition")]
    [MaxLength(80)]
    public string ShipTo_City {
        get {
            return GetAttributeValue<string>("shipto_city");
        }
        set {
            SetAttributeValue("shipto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse d'envoi complète.</para>
    /// <para>Display Name: Adresse d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_composite")]
    [DisplayName("Adresse d\'expédition")]
    public string ShipTo_Composite {
        get {
            return GetAttributeValue<string>("shipto_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal à l'adresse de livraison du client.</para>
    /// <para>Display Name: Nom du contact d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_contactname")]
    [DisplayName("Nom du contact d\'expédition")]
    [MaxLength(150)]
    public string ShipTo_ContactName {
        get {
            return GetAttributeValue<string>("shipto_contactname");
        }
        set {
            SetAttributeValue("shipto_contactname", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse de livraison du client.</para>
    /// <para>Display Name: Pays/région d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_country")]
    [DisplayName("Pays/région d\'expédition")]
    [MaxLength(80)]
    public string ShipTo_Country {
        get {
            return GetAttributeValue<string>("shipto_country");
        }
        set {
            SetAttributeValue("shipto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie à l'adresse de livraison du client.</para>
    /// <para>Display Name: Télécopie d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_fax")]
    [DisplayName("Télécopie d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_Fax {
        get {
            return GetAttributeValue<string>("shipto_fax");
        }
        set {
            SetAttributeValue("shipto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Conditions de transport d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_freighttermscode")]
    [DisplayName("Conditions de transport d\'expédition")]
    public SalesOrder_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
        get {
            return GetOptionSetValue<SalesOrder_ShipTo_FreightTermsCode>("shipto_freighttermscode");
        }
        set {
            SetOptionSetValue("shipto_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse de livraison du client.</para>
    /// <para>Display Name: Rue 1 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line1")]
    [DisplayName("Rue 1 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line1 {
        get {
            return GetAttributeValue<string>("shipto_line1");
        }
        set {
            SetAttributeValue("shipto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse de livraison du client.</para>
    /// <para>Display Name: Rue 2 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line2")]
    [DisplayName("Rue 2 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line2 {
        get {
            return GetAttributeValue<string>("shipto_line2");
        }
        set {
            SetAttributeValue("shipto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la troisième ligne de l'adresse de livraison.</para>
    /// <para>Display Name: Rue 3 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line3")]
    [DisplayName("Rue 3 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line3 {
        get {
            return GetAttributeValue<string>("shipto_line3");
        }
        set {
            SetAttributeValue("shipto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom pour l'adresse de livraison du client, tel que « Siège » ou « Bureau local », pour identifier l'adresse.</para>
    /// <para>Display Name: Nom d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_name")]
    [DisplayName("Nom d\'expédition")]
    [MaxLength(200)]
    public string ShipTo_Name {
        get {
            return GetAttributeValue<string>("shipto_name");
        }
        set {
            SetAttributeValue("shipto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse de livraison.</para>
    /// <para>Display Name: Code postal d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_postalcode")]
    [DisplayName("Code postal d\'expédition")]
    [MaxLength(20)]
    public string ShipTo_PostalCode {
        get {
            return GetAttributeValue<string>("shipto_postalcode");
        }
        set {
            SetAttributeValue("shipto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse de livraison.</para>
    /// <para>Display Name: Département/province d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_stateorprovince")]
    [DisplayName("Département/province d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("shipto_stateorprovince");
        }
        set {
            SetAttributeValue("shipto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone à l'adresse de livraison du client.</para>
    /// <para>Display Name: Téléphone d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_telephone")]
    [DisplayName("Téléphone d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_Telephone {
        get {
            return GetAttributeValue<string>("shipto_telephone");
        }
        set {
            SetAttributeValue("shipto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Mode de livraison")]
    public SalesOrder_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<SalesOrder_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Ignorer le calcul du prix (utilisation interne)</para>
    /// <para>Display Name: Ignorer le calcul du prix</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Ignorer le calcul du prix")]
    public qooi_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'ID de la phase dans laquelle se trouve l'entité.</para>
    /// <para>Display Name: (Déconseillé) ID de phase</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) ID de phase")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si la commande est active, soumise, traitée, annulée ou facturée. Seules les commandes actives peuvent être modifiées.</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public SalesOrderState? StateCode {
        get {
            return GetOptionSetValue<SalesOrderState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le statut de la commande.</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public SalesOrder_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<SalesOrder_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date à laquelle la commande a été soumise au centre de traitement ou de livraison.</para>
    /// <para>Display Name: Date d'envoi</para>
    /// </summary>
    [AttributeLogicalName("submitdate")]
    [DisplayName("Date d\'envoi")]
    public DateTime? SubmitDate {
        get {
            return GetAttributeValue<DateTime?>("submitdate");
        }
        set {
            SetAttributeValue("submitdate", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code du statut soumis dans le système de traitement ou de livraison.</para>
    /// <para>Display Name: Statut Envoyé</para>
    /// </summary>
    [AttributeLogicalName("submitstatus")]
    [DisplayName("Statut Envoyé")]
    [Range(0, 1000000000)]
    public int? SubmitStatus {
        get {
            return GetAttributeValue<int?>("submitstatus");
        }
        set {
            SetAttributeValue("submitstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez des informations ou des notes supplémentaires sur la commande pour le centre de traitement ou de livraison.</para>
    /// <para>Display Name: Description du statut Envoyé</para>
    /// </summary>
    [AttributeLogicalName("submitstatusdescription")]
    [DisplayName("Description du statut Envoyé")]
    public string SubmitStatusDescription {
        get {
            return GetAttributeValue<string>("submitstatusdescription");
        }
        set {
            SetAttributeValue("submitstatusdescription", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le montant total dû, égal à la somme des produits, des remises, des frais de port et des taxes de la commande.</para>
    /// <para>Display Name: ZZ_Montant total</para>
    /// </summary>
    [AttributeLogicalName("totalamount")]
    [DisplayName("ZZ_Montant total")]
    public decimal? TotalAmount {
        get {
            return GetMoneyValue("totalamount");
        }
        set {
            SetMoneyValue("totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le montant total de produits de la commande, déduction faite des remises. Cette valeur est ajoutée au montant des frais de port et des taxes dans le calcul du montant total dû pour la commande.</para>
    /// <para>Display Name: Total hors frais de port</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight")]
    [DisplayName("Total hors frais de port")]
    public decimal? TotalAmountLessFreight {
        get {
            return GetMoneyValue("totalamountlessfreight");
        }
        set {
            SetMoneyValue("totalamountlessfreight", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total hors frais de port dans la devise de base.</para>
    /// <para>Display Name: Total hors frais de port (de base)</para>
    /// </summary>
    [AttributeLogicalName("totalamountlessfreight_base")]
    [DisplayName("Total hors frais de port (de base)")]
    public decimal? TotalAmountLessFreight_Base {
        get {
            return GetMoneyValue("totalamountlessfreight_base");
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant total dans la devise de base.</para>
    /// <para>Display Name: Montant total (de base)</para>
    /// </summary>
    [AttributeLogicalName("totalamount_base")]
    [DisplayName("Montant total (de base)")]
    public decimal? TotalAmount_Base {
        get {
            return GetMoneyValue("totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche le montant total de la remise, basé sur le prix et le taux de remise entrés sur la commande.</para>
    /// <para>Display Name: Total de la remise</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount")]
    [DisplayName("Total de la remise")]
    public decimal? TotalDiscountAmount {
        get {
            return GetMoneyValue("totaldiscountamount");
        }
        set {
            SetMoneyValue("totaldiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total de la remise dans la devise de base.</para>
    /// <para>Display Name: Total de la remise (de base)</para>
    /// </summary>
    [AttributeLogicalName("totaldiscountamount_base")]
    [DisplayName("Total de la remise (de base)")]
    public decimal? TotalDiscountAmount_Base {
        get {
            return GetMoneyValue("totaldiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche la somme de tous les produits existants et hors catalogue inclus sur la commande, basée sur les tarifs et les quantités.</para>
    /// <para>Display Name: Montant détaillé TTC</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount")]
    [DisplayName("Montant détaillé TTC")]
    public decimal? TotalLineItemAmount {
        get {
            return GetMoneyValue("totallineitemamount");
        }
        set {
            SetMoneyValue("totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total détaillé dans la devise de base.</para>
    /// <para>Display Name: Montant détaillé HT (de base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemamount_base")]
    [DisplayName("Montant détaillé HT (de base)")]
    public decimal? TotalLineItemAmount_Base {
        get {
            return GetMoneyValue("totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche la somme des montants de remise manuelle indiqués sur tous les produits inclus sur la commande. Cette valeur ressort dans le champ Total détaillé sur la commande et est ajoutée au montant ou au taux de remise spécifié sur la commande.</para>
    /// <para>Display Name: Remise totale sur les lignes</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount")]
    [DisplayName("Remise totale sur les lignes")]
    public decimal? TotalLineItemDiscountAmount {
        get {
            return GetMoneyValue("totallineitemdiscountamount");
        }
        set {
            SetMoneyValue("totallineitemdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Remise totale sur les lignes dans la devise de base.</para>
    /// <para>Display Name: Remise totale sur les lignes (de base)</para>
    /// </summary>
    [AttributeLogicalName("totallineitemdiscountamount_base")]
    [DisplayName("Remise totale sur les lignes (de base)")]
    public decimal? TotalLineItemDiscountAmount_Base {
        get {
            return GetMoneyValue("totallineitemdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche la somme des montants des taxes indiqués sur tous les produits inclus sur la commande, incluse dans le calcul du Montant total dû pour la commande.</para>
    /// <para>Display Name: ZZ_Total TVA</para>
    /// </summary>
    [AttributeLogicalName("totaltax")]
    [DisplayName("ZZ_Total TVA")]
    public decimal? TotalTax {
        get {
            return GetMoneyValue("totaltax");
        }
        set {
            SetMoneyValue("totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total des taxes dans la devise de base.</para>
    /// <para>Display Name: Total des taxes (de base)</para>
    /// </summary>
    [AttributeLogicalName("totaltax_base")]
    [DisplayName("Total des taxes (de base)")]
    public decimal? TotalTax_Base {
        get {
            return GetMoneyValue("totaltax_base");
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale de l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Liste séparée par des virgules dans laquelle figurent des valeurs de chaîne représentant les identificateurs uniques des phases dans une instance de flux des processus d'entreprise dans l'ordre de leur apparition.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si les produits inclus sur la commande doivent être livrés à l'adresse spécifiée ou conservés jusqu'à ce que le client donne des instructions d'enlèvement ou de livraison.</para>
    /// <para>Display Name: Expédier vers</para>
    /// </summary>
    [AttributeLogicalName("willcall")]
    [DisplayName("Expédier vers")]
    public bool? WillCall {
        get {
            return GetAttributeValue<bool?>("willcall");
        }
        set {
            SetAttributeValue("willcall", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Tranche commerciale</para>
    /// </summary>
    [AttributeLogicalName("nxt_commercialphaseid")]
    [DisplayName("Tranche commerciale")]
    public EntityReference nxt_CommercialPhaseId {
        get {
            return GetAttributeValue<EntityReference>("nxt_commercialphaseid");
        }
        set {
            SetAttributeValue("nxt_commercialphaseid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Acompte à verser</para>
    /// </summary>
    [AttributeLogicalName("nxt_deposit")]
    [DisplayName("Acompte à verser")]
    public decimal? nxt_Deposit {
        get {
            return GetMoneyValue("nxt_deposit");
        }
        set {
            SetMoneyValue("nxt_deposit", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Réception de l'acompte</para>
    /// </summary>
    [AttributeLogicalName("nxt_depositreceiptdate")]
    [DisplayName("Réception de l\'acompte")]
    public DateTime? nxt_DepositReceiptDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_depositreceiptdate");
        }
        set {
            SetAttributeValue("nxt_depositreceiptdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Demande ID</para>
    /// </summary>
    [AttributeLogicalName("nxt_incidentid")]
    [DisplayName("Demande ID")]
    public EntityReference nxt_IncidentId {
        get {
            return GetAttributeValue<EntityReference>("nxt_incidentid");
        }
        set {
            SetAttributeValue("nxt_incidentid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Conditions de paiement</para>
    /// </summary>
    [AttributeLogicalName("nxt_paymenttermscode")]
    [DisplayName("Conditions de paiement")]
    public nxt_paymentterms? nxt_PaymentTermsCode {
        get {
            return GetOptionSetValue<nxt_paymentterms>("nxt_paymenttermscode");
        }
        set {
            SetOptionSetValue("nxt_paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Programme</para>
    /// </summary>
    [AttributeLogicalName("nxt_programid")]
    [DisplayName("Programme")]
    public EntityReference nxt_ProgramId {
        get {
            return GetAttributeValue<EntityReference>("nxt_programid");
        }
        set {
            SetAttributeValue("nxt_programid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant détaillé TTC</para>
    /// </summary>
    [AttributeLogicalName("nxt_totallineitemamount")]
    [DisplayName("Montant détaillé TTC")]
    public decimal? nxt_TotalLineItemAmount {
        get {
            return GetMoneyValue("nxt_totallineitemamount");
        }
        set {
            SetMoneyValue("nxt_totallineitemamount", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Taux TVA</para>
    /// </summary>
    [AttributeLogicalName("nxt_vatcodeid")]
    [DisplayName("Taux TVA")]
    public EntityReference nxt_VatCodeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_vatcodeid");
        }
        set {
            SetAttributeValue("nxt_vatcodeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant HT</para>
    /// </summary>
    [AttributeLogicalName("nxt_amountexcludingtax")]
    [DisplayName("Montant HT")]
    public decimal? nxt_amountexcludingtax {
        get {
            return GetMoneyValue("nxt_amountexcludingtax");
        }
        set {
            SetMoneyValue("nxt_amountexcludingtax", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant HT dans la devise de base.</para>
    /// <para>Display Name: Montant HT (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_amountexcludingtax_base")]
    [DisplayName("Montant HT (de base)")]
    public decimal? nxt_amountexcludingtax_Base {
        get {
            return GetMoneyValue("nxt_amountexcludingtax_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type de facturation</para>
    /// </summary>
    [AttributeLogicalName("nxt_billingtypecode")]
    [DisplayName("Type de facturation")]
    public nxt_billingtypecode? nxt_billingtypecode {
        get {
            return GetOptionSetValue<nxt_billingtypecode>("nxt_billingtypecode");
        }
        set {
            SetOptionSetValue("nxt_billingtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Dossier Client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerfolderid")]
    [DisplayName("Dossier Client")]
    public EntityReference nxt_customerfolderid {
        get {
            return GetAttributeValue<EntityReference>("nxt_customerfolderid");
        }
        set {
            SetAttributeValue("nxt_customerfolderid", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Acompte à verser dans la devise de base.</para>
    /// <para>Display Name: Acompte à verser (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_deposit_base")]
    [DisplayName("Acompte à verser (de base)")]
    public decimal? nxt_deposit_Base {
        get {
            return GetMoneyValue("nxt_deposit_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant total</para>
    /// </summary>
    [AttributeLogicalName("nxt_totalamount")]
    [DisplayName("Montant total")]
    public decimal? nxt_totalamount {
        get {
            return GetMoneyValue("nxt_totalamount");
        }
        set {
            SetMoneyValue("nxt_totalamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant total dans la devise de base.</para>
    /// <para>Display Name: Montant total (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_totalamount_base")]
    [DisplayName("Montant total (de base)")]
    public decimal? nxt_totalamount_Base {
        get {
            return GetMoneyValue("nxt_totalamount_base");
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant détaillé TTC dans la devise de base.</para>
    /// <para>Display Name: Montant détaillé TTC (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_totallineitemamount_base")]
    [DisplayName("Montant détaillé TTC (de base)")]
    public decimal? nxt_totallineitemamount_Base {
        get {
            return GetMoneyValue("nxt_totallineitemamount_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Total TVA</para>
    /// </summary>
    [AttributeLogicalName("nxt_totaltax")]
    [DisplayName("Total TVA")]
    public decimal? nxt_totaltax {
        get {
            return GetMoneyValue("nxt_totaltax");
        }
        set {
            SetMoneyValue("nxt_totaltax", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total TVA dans la devise de base.</para>
    /// <para>Display Name: Total TVA (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_totaltax_base")]
    [DisplayName("Total TVA (de base)")]
    public decimal? nxt_totaltax_Base {
        get {
            return GetMoneyValue("nxt_totaltax_base");
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Emails")]
    public IEnumerable<Email> SalesOrder_Emails {
        get {
            return GetRelatedEntities<Email>("SalesOrder_Emails", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("SalesOrder_Phonecalls")]
    public IEnumerable<PhoneCall> SalesOrder_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("SalesOrder_Phonecalls", null);
        }
        set {
            SetRelatedEntities("SalesOrder_Phonecalls", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_orders")]
    public BusinessUnit business_unit_orders {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_orders", null);
        }
        set {
            SetRelatedEntity("business_unit_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("contactorders_association")]
    public IEnumerable<Contact> contactorders_association {
        get {
            return GetRelatedEntities<Contact>("contactorders_association", null);
        }
        set {
            SetRelatedEntities("contactorders_association", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_salesorder_createdonbehalfby")]
    public SystemUser lk_salesorder_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorder_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesorder_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_salesorder_modifiedonbehalfby")]
    public SystemUser lk_salesorder_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorder_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_salesorder_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_salesorderbase_createdby")]
    public SystemUser lk_salesorderbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorderbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_salesorderbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_salesorderbase_modifiedby")]
    public SystemUser lk_salesorderbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_salesorderbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_salesorderbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_programid")]
    [RelationshipSchemaName("nxt_SalesOrder_nxt_ProgramId_nxt_Program")]
    public nxt_Program nxt_SalesOrder_nxt_ProgramId_nxt_Program {
        get {
            return GetRelatedEntity<nxt_Program>("nxt_SalesOrder_nxt_ProgramId_nxt_Program", null);
        }
        set {
            SetRelatedEntity("nxt_SalesOrder_nxt_ProgramId_nxt_Program", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerfolderid")]
    [RelationshipSchemaName("nxt_nxt_customerfolder_salesorder_customerfolderid")]
    public nxt_customerfolder nxt_nxt_customerfolder_salesorder_customerfolderid {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_nxt_customerfolder_salesorder_customerfolderid", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_customerfolder_salesorder_customerfolderid", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_vatcodeid")]
    [RelationshipSchemaName("nxt_nxt_vat_salesorder_VatCodeId")]
    public nxt_Vat nxt_nxt_vat_salesorder_VatCodeId {
        get {
            return GetRelatedEntity<nxt_Vat>("nxt_nxt_vat_salesorder_VatCodeId", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_vat_salesorder_VatCodeId", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_commercialphaseid")]
    [RelationshipSchemaName("nxt_salesorder_CommercialPhaseId_nxt_commerci")]
    public nxt_CommercialPhase nxt_salesorder_CommercialPhaseId_nxt_commerci {
        get {
            return GetRelatedEntity<nxt_CommercialPhase>("nxt_salesorder_CommercialPhaseId_nxt_commerci", null);
        }
        set {
            SetRelatedEntity("nxt_salesorder_CommercialPhaseId_nxt_commerci", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_incidentid")]
    [RelationshipSchemaName("nxt_salesorder_IncidentId_incident")]
    public Incident nxt_salesorder_IncidentId_incident {
        get {
            return GetRelatedEntity<Incident>("nxt_salesorder_IncidentId_incident", null);
        }
        set {
            SetRelatedEntity("nxt_salesorder_IncidentId_incident", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("order_customer_accounts")]
    public Account order_customer_accounts {
        get {
            return GetRelatedEntity<Account>("order_customer_accounts", null);
        }
        set {
            SetRelatedEntity("order_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("customerid")]
    [RelationshipSchemaName("order_customer_contacts")]
    public Contact order_customer_contacts {
        get {
            return GetRelatedEntity<Contact>("order_customer_contacts", null);
        }
        set {
            SetRelatedEntity("order_customer_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("order_details")]
    public IEnumerable<SalesOrderDetail> order_details {
        get {
            return GetRelatedEntities<SalesOrderDetail>("order_details", null);
        }
        set {
            SetRelatedEntities("order_details", null, value);
        }
    }
    
    [RelationshipSchemaName("order_invoices")]
    public IEnumerable<Invoice> order_invoices {
        get {
            return GetRelatedEntities<Invoice>("order_invoices", null);
        }
        set {
            SetRelatedEntities("order_invoices", null, value);
        }
    }
    
    [AttributeLogicalName("quoteid")]
    [RelationshipSchemaName("quote_orders")]
    public Quote quote_orders {
        get {
            return GetRelatedEntity<Quote>("quote_orders", null);
        }
        set {
            SetRelatedEntity("quote_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_activity_parties")]
    public IEnumerable<ActivityParty> salesorder_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("salesorder_activity_parties", null);
        }
        set {
            SetRelatedEntities("salesorder_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_connections1")]
    public IEnumerable<Connection> salesorder_connections1 {
        get {
            return GetRelatedEntities<Connection>("salesorder_connections1", null);
        }
        set {
            SetRelatedEntities("salesorder_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_connections2")]
    public IEnumerable<Connection> salesorder_connections2 {
        get {
            return GetRelatedEntities<Connection>("salesorder_connections2", null);
        }
        set {
            SetRelatedEntities("salesorder_connections2", null, value);
        }
    }
    
    [RelationshipSchemaName("salesorder_nxt_Messages")]
    public IEnumerable<nxt_Message> salesorder_nxt_Messages {
        get {
            return GetRelatedEntities<nxt_Message>("salesorder_nxt_Messages", null);
        }
        set {
            SetRelatedEntities("salesorder_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("system_user_orders")]
    public SystemUser system_user_orders {
        get {
            return GetRelatedEntity<SystemUser>("system_user_orders", null);
        }
        set {
            SetRelatedEntity("system_user_orders", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_orders")]
    public Team team_orders {
        get {
            return GetRelatedEntity<Team>("team_orders", null);
        }
        set {
            SetRelatedEntity("team_orders", null, value);
        }
    }
    
    public static SalesOrder Retrieve(IOrganizationService service, Guid id, params Expression<Func<SalesOrder,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum SalesOrderState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Envoyée", Index=1, Lcid=1036)]
    Envoyée = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé(e)", Index=2, Lcid=1036)]
    Annulée = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Exécuté(e)", Index=3, Lcid=1036)]
    Exécutée = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facturé", Index=4, Lcid=1036)]
    Facturé = 4,
}

[DataContract()]
public enum SalesOrder_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FAB", Index=0, Lcid=1036)]
    FAB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Sans supplément", Index=1, Lcid=1036)]
    Sanssupplément = 2,
}

[DataContract()]
public enum SalesOrder_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30J", Index=0, Lcid=1036, Description="")]
    Net30J = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60J", Index=1, Lcid=1036)]
    Net60J = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Au comptant", Index=2, Lcid=1036)]
    Aucomptant = 10,
    
    [EnumMember()]
    [OptionSetMetadata("À réception de facture", Index=3, Lcid=1036)]
    Àréceptiondefacture = 15,
    
    [EnumMember()]
    [OptionSetMetadata("30J FDM", Index=4, Lcid=1036)]
    _30JFDM = 16,
    
    [EnumMember()]
    [OptionSetMetadata("60J FDM", Index=5, Lcid=1036)]
    _60JFDM = 17,
}

[DataContract()]
public enum SalesOrder_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum SalesOrder_ShipTo_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum SalesOrder_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Courrier postal", Index=0, Lcid=1036)]
    Courrierpostal = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Collecte", Index=1, Lcid=1036)]
    Collecte = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Autre", Index=2, Lcid=1036)]
    Autre = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Transporteur", Index=3, Lcid=1036)]
    Transporteur = 17,
}

[DataContract()]
public enum SalesOrder_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Nouveau", Index=2, Lcid=1036)]
    Nouveau = 1,
    
    [EnumMember()]
    [OptionSetMetadata("En attente", Index=3, Lcid=1036)]
    Enattente = 2,
    
    [EnumMember()]
    [OptionSetMetadata("En cours", Index=0, Lcid=1036)]
    Encours = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Impayé", Index=1, Lcid=1036)]
    Impayé = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé", Index=4, Lcid=1036)]
    Terminé = 100001,
    
    [EnumMember()]
    [OptionSetMetadata("Partiel", Index=5, Lcid=1036)]
    Partiel = 100002,
    
    [EnumMember()]
    [OptionSetMetadata("Facturé", Index=6, Lcid=1036)]
    Facturé = 100003,
}
