//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Message Record</para>
/// </summary>
[EntityLogicalName("nxt_customlog")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_CustomLog : ExtendedEntity<nxt_CustomLogState, nxt_CustomLog_statuscode> {
    
    public const string EntityLogicalName = "nxt_customlog";
    
    public const int EntityTypeCode = 10689;
    
    public nxt_CustomLog() : 
            base(EntityLogicalName) {
    }
    
    public nxt_CustomLog(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_name");
        }
    }
    
    [AttributeLogicalName("nxt_customlogid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_customlogid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Message Record</para>
    /// </summary>
    [AttributeLogicalName("nxt_customlogid")]
    [DisplayName("Message Record")]
    public Guid? nxt_CustomLogId {
        get {
            return GetAttributeValue<Guid?>("nxt_customlogid");
        }
        set {
            SetId("nxt_customlogid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Nom")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: AppIdName</para>
    /// </summary>
    [AttributeLogicalName("nxt_appidname")]
    [DisplayName("AppIdName")]
    [MaxLength(100)]
    public string nxt_AppIdName {
        get {
            return GetAttributeValue<string>("nxt_appidname");
        }
        set {
            SetAttributeValue("nxt_appidname", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: AppSecretName</para>
    /// </summary>
    [AttributeLogicalName("nxt_appsecretname")]
    [DisplayName("AppSecretName")]
    [MaxLength(100)]
    public string nxt_AppSecretName {
        get {
            return GetAttributeValue<string>("nxt_appsecretname");
        }
        set {
            SetAttributeValue("nxt_appsecretname", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type d'authentification</para>
    /// </summary>
    [AttributeLogicalName("nxt_authenticationtype")]
    [DisplayName("Type d\'authentification")]
    public nxt_authenticationtype? nxt_AuthenticationType {
        get {
            return GetOptionSetValue<nxt_authenticationtype>("nxt_authenticationtype");
        }
        set {
            SetOptionSetValue("nxt_authenticationtype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Correlation Id</para>
    /// </summary>
    [AttributeLogicalName("nxt_correlationid")]
    [DisplayName("Correlation Id")]
    [MaxLength(100)]
    public string nxt_CorrelationId {
        get {
            return GetAttributeValue<string>("nxt_correlationid");
        }
        set {
            SetAttributeValue("nxt_correlationid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code erreur</para>
    /// </summary>
    [AttributeLogicalName("nxt_errorcode")]
    [DisplayName("Code erreur")]
    [MaxLength(100)]
    public string nxt_ErrorCode {
        get {
            return GetAttributeValue<string>("nxt_errorcode");
        }
        set {
            SetAttributeValue("nxt_errorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Entêtes HTTP</para>
    /// </summary>
    [AttributeLogicalName("nxt_httpheaders")]
    [DisplayName("Entêtes HTTP")]
    public string nxt_HttpHeaders {
        get {
            return GetAttributeValue<string>("nxt_httpheaders");
        }
        set {
            SetAttributeValue("nxt_httpheaders", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nom de l'interface</para>
    /// </summary>
    [AttributeLogicalName("nxt_interfacename")]
    [DisplayName("Nom de l\'interface")]
    [MaxLength(200)]
    public string nxt_InterfaceName {
        get {
            return GetAttributeValue<string>("nxt_interfacename");
        }
        set {
            SetAttributeValue("nxt_interfacename", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Requête asynchrone</para>
    /// </summary>
    [AttributeLogicalName("nxt_isasyncrequest")]
    [DisplayName("Requête asynchrone")]
    public bool? nxt_IsAsyncRequest {
        get {
            return GetAttributeValue<bool?>("nxt_isasyncrequest");
        }
        set {
            SetAttributeValue("nxt_isasyncrequest", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Nom")]
    [MaxLength(100)]
    public string nxt_Name {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sens du flux</para>
    /// </summary>
    [AttributeLogicalName("nxt_requestdirectioncode")]
    [DisplayName("Sens du flux")]
    public nxt_requestdirection? nxt_RequestDirectionCode {
        get {
            return GetOptionSetValue<nxt_requestdirection>("nxt_requestdirectioncode");
        }
        set {
            SetOptionSetValue("nxt_requestdirectioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Méthode de requête</para>
    /// </summary>
    [AttributeLogicalName("nxt_requestmethod")]
    [DisplayName("Méthode de requête")]
    [MaxLength(100)]
    public string nxt_RequestMethod {
        get {
            return GetAttributeValue<string>("nxt_requestmethod");
        }
        set {
            SetAttributeValue("nxt_requestmethod", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Application concernée</para>
    /// </summary>
    [AttributeLogicalName("nxt_thirdpartyapplicationname")]
    [DisplayName("Application concernée")]
    [MaxLength(100)]
    public string nxt_ThirdPartyApplicationName {
        get {
            return GetAttributeValue<string>("nxt_thirdpartyapplicationname");
        }
        set {
            SetAttributeValue("nxt_thirdpartyapplicationname", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Point de terminaison</para>
    /// </summary>
    [AttributeLogicalName("nxt_endpoint")]
    [DisplayName("Point de terminaison")]
    [MaxLength(4000)]
    public string nxt_endpoint {
        get {
            return GetAttributeValue<string>("nxt_endpoint");
        }
        set {
            SetAttributeValue("nxt_endpoint", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Message d'erreur</para>
    /// </summary>
    [AttributeLogicalName("nxt_errormessage")]
    [DisplayName("Message d\'erreur")]
    public string nxt_errormessage {
        get {
            return GetAttributeValue<string>("nxt_errormessage");
        }
        set {
            SetAttributeValue("nxt_errormessage", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Message (JSON)</para>
    /// </summary>
    [AttributeLogicalName("nxt_message")]
    [DisplayName("Message (JSON)")]
    public string nxt_message {
        get {
            return GetAttributeValue<string>("nxt_message");
        }
        set {
            SetAttributeValue("nxt_message", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Message Record</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_CustomLogState? statecode {
        get {
            return GetOptionSetValue<nxt_CustomLogState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Message Record</para>
    /// <para>Display Name: Statut de la requête</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Statut de la requête")]
    public nxt_CustomLog_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_CustomLog_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_nxt_customlog")]
    public BusinessUnit business_unit_nxt_customlog {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_nxt_customlog", null);
        }
        set {
            SetRelatedEntity("business_unit_nxt_customlog", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_customlog_createdby")]
    public SystemUser lk_nxt_customlog_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_customlog_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_customlog_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_customlog_createdonbehalfby")]
    public SystemUser lk_nxt_customlog_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_customlog_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_customlog_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_customlog_modifiedby")]
    public SystemUser lk_nxt_customlog_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_customlog_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_customlog_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_customlog_modifiedonbehalfby")]
    public SystemUser lk_nxt_customlog_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_customlog_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_customlog_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_nxt_customlog")]
    public Team team_nxt_customlog {
        get {
            return GetRelatedEntity<Team>("team_nxt_customlog", null);
        }
        set {
            SetRelatedEntity("team_nxt_customlog", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_nxt_customlog")]
    public SystemUser user_nxt_customlog {
        get {
            return GetRelatedEntity<SystemUser>("user_nxt_customlog", null);
        }
        set {
            SetRelatedEntity("user_nxt_customlog", null, value);
        }
    }
    
    public static nxt_CustomLog Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_CustomLog,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum nxt_CustomLogState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_CustomLog_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Not Processed", Index=0, Lcid=1036, Description="")]
    NotProcessed = 0,
    
    [EnumMember()]
    [OptionSetMetadata("OK", Index=1, Lcid=1036, Description="")]
    OK = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Retried", Index=3, Lcid=1036, Description="")]
    Retried = 2,
    
    [EnumMember()]
    [OptionSetMetadata("KO", Index=4, Lcid=1036, Description="")]
    KO = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=2, Lcid=1036, Description="")]
    Inactif = 4,
}
