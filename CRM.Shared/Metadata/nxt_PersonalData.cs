//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Données Personnelles</para>
/// </summary>
[EntityLogicalName("nxt_personaldata")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_PersonalData : ExtendedEntity<nxt_PersonalDataState, nxt_PersonalData_statuscode> {
    
    public const string EntityLogicalName = "nxt_personaldata";
    
    public const int EntityTypeCode = 11231;
    
    public nxt_PersonalData() : 
            base(EntityLogicalName) {
    }
    
    public nxt_PersonalData(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_name");
        }
    }
    
    [AttributeLogicalName("nxt_personaldataid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_personaldataid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Données Personnelles</para>
    /// </summary>
    [AttributeLogicalName("nxt_personaldataid")]
    [DisplayName("Données Personnelles")]
    public Guid? nxt_PersonalDataId {
        get {
            return GetAttributeValue<Guid?>("nxt_personaldataid");
        }
        set {
            SetId("nxt_personaldataid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Taux de change pour la devise associée à l'entité, par rapport à la devise de base.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Nom de l'entité personnalisée.</para>
    /// <para>Display Name: DP</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("DP")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la devise associée à l'entité.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Revenus annuels</para>
    /// </summary>
    [AttributeLogicalName("nxt_annualincome")]
    [DisplayName("Revenus annuels")]
    public decimal? nxt_AnnualIncome {
        get {
            return GetMoneyValue("nxt_annualincome");
        }
        set {
            SetMoneyValue("nxt_annualincome", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de naissance</para>
    /// </summary>
    [AttributeLogicalName("nxt_birthdate")]
    [DisplayName("Date de naissance")]
    public DateTime? nxt_BirthDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_birthdate");
        }
        set {
            SetAttributeValue("nxt_birthdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Adresse Acquéreur 1</para>
    /// </summary>
    [AttributeLogicalName("nxt_buyeraddress1")]
    [DisplayName("Adresse Acquéreur 1")]
    [MaxLength(4000)]
    public string nxt_BuyerAddress1 {
        get {
            return GetAttributeValue<string>("nxt_buyeraddress1");
        }
        set {
            SetAttributeValue("nxt_buyeraddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Employeur</para>
    /// </summary>
    [AttributeLogicalName("nxt_companyname")]
    [DisplayName("Employeur")]
    [MaxLength(100)]
    public string nxt_CompanyName {
        get {
            return GetAttributeValue<string>("nxt_companyname");
        }
        set {
            SetAttributeValue("nxt_companyname", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de Dossier Client associé à Données Personnelles.</para>
    /// <para>Display Name: Dossier Client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerfolderid")]
    [DisplayName("Dossier Client")]
    public EntityReference nxt_CustomerFolderId {
        get {
            return GetAttributeValue<EntityReference>("nxt_customerfolderid");
        }
        set {
            SetAttributeValue("nxt_customerfolderid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerid")]
    [DisplayName("Client")]
    public EntityReference nxt_CustomerId {
        get {
            return GetAttributeValue<EntityReference>("nxt_customerid");
        }
        set {
            SetAttributeValue("nxt_customerid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence du client</para>
    /// </summary>
    [AttributeLogicalName("nxt_customerreference")]
    [DisplayName("Référence du client")]
    [MaxLength(100)]
    public string nxt_CustomerReference {
        get {
            return GetAttributeValue<string>("nxt_customerreference");
        }
        set {
            SetAttributeValue("nxt_customerreference", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nombre personnes à charge</para>
    /// </summary>
    [AttributeLogicalName("nxt_dependentsnumber")]
    [DisplayName("Nombre personnes à charge")]
    [Range(0, 100)]
    public int? nxt_DependentsNumber {
        get {
            return GetAttributeValue<int?>("nxt_dependentsnumber");
        }
        set {
            SetAttributeValue("nxt_dependentsnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Situation familiale</para>
    /// </summary>
    [AttributeLogicalName("nxt_familysituationcode")]
    [DisplayName("Situation familiale")]
    public nxt_familysituationcode? nxt_FamilySituationCode {
        get {
            return GetOptionSetValue<nxt_familysituationcode>("nxt_familysituationcode");
        }
        set {
            SetOptionSetValue("nxt_familysituationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Décédé(e)</para>
    /// </summary>
    [AttributeLogicalName("nxt_isdead")]
    [DisplayName("Décédé(e)")]
    public bool? nxt_IsDead {
        get {
            return GetAttributeValue<bool?>("nxt_isdead");
        }
        set {
            SetAttributeValue("nxt_isdead", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Profession</para>
    /// </summary>
    [AttributeLogicalName("nxt_job")]
    [DisplayName("Profession")]
    [MaxLength(100)]
    public string nxt_Job {
        get {
            return GetAttributeValue<string>("nxt_job");
        }
        set {
            SetAttributeValue("nxt_job", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant mensuel loyer</para>
    /// </summary>
    [AttributeLogicalName("nxt_monthlyrentamount")]
    [DisplayName("Montant mensuel loyer")]
    public decimal? nxt_MonthlyRentAmount {
        get {
            return GetMoneyValue("nxt_monthlyrentamount");
        }
        set {
            SetMoneyValue("nxt_monthlyrentamount", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Revente bien immobilier</para>
    /// </summary>
    [AttributeLogicalName("nxt_realestateresaleamount")]
    [DisplayName("Revente bien immobilier")]
    public decimal? nxt_RealEstateResaleAmount {
        get {
            return GetMoneyValue("nxt_realestateresaleamount");
        }
        set {
            SetMoneyValue("nxt_realestateresaleamount", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Situation immobilière</para>
    /// </summary>
    [AttributeLogicalName("nxt_realestatesituationcode")]
    [DisplayName("Situation immobilière")]
    public nxt_realestatesituationcode? nxt_RealEstateSituationCode {
        get {
            return GetOptionSetValue<nxt_realestatesituationcode>("nxt_realestatesituationcode");
        }
        set {
            SetOptionSetValue("nxt_realestatesituationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de début délai SRU</para>
    /// </summary>
    [AttributeLogicalName("nxt_srudeadlinestartdate")]
    [DisplayName("Date de début délai SRU")]
    public DateTime? nxt_SruDeadlineStartDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_srudeadlinestartdate");
        }
        set {
            SetAttributeValue("nxt_srudeadlinestartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Statut SRU</para>
    /// </summary>
    [AttributeLogicalName("nxt_srustatuscode")]
    [DisplayName("Statut SRU")]
    public nxt_srustatus? nxt_SruStatusCode {
        get {
            return GetOptionSetValue<nxt_srustatus>("nxt_srustatuscode");
        }
        set {
            SetOptionSetValue("nxt_srustatuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TrackingNumber</para>
    /// </summary>
    [AttributeLogicalName("nxt_trackingnumber")]
    [DisplayName("TrackingNumber")]
    [MaxLength(100)]
    public string nxt_TrackingNumber {
        get {
            return GetAttributeValue<string>("nxt_trackingnumber");
        }
        set {
            SetAttributeValue("nxt_trackingnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Revenus annuels dans la devise de base.</para>
    /// <para>Display Name: Revenus annuels (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_annualincome_base")]
    [DisplayName("Revenus annuels (de base)")]
    public decimal? nxt_annualincome_Base {
        get {
            return GetMoneyValue("nxt_annualincome_base");
        }
        set {
            SetMoneyValue("nxt_annualincome_base", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant mensuel loyer dans la devise de base.</para>
    /// <para>Display Name: Montant mensuel loyer (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_monthlyrentamount_base")]
    [DisplayName("Montant mensuel loyer (de base)")]
    public decimal? nxt_monthlyrentamount_Base {
        get {
            return GetMoneyValue("nxt_monthlyrentamount_base");
        }
        set {
            SetMoneyValue("nxt_monthlyrentamount_base", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de l'entité personnalisée.</para>
    /// <para>Display Name: DP</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("DP")]
    [MaxLength(100)]
    public string nxt_name {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Revente bien immobilier dans la devise de base.</para>
    /// <para>Display Name: Revente bien immobilier (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_realestateresaleamount_base")]
    [DisplayName("Revente bien immobilier (de base)")]
    public decimal? nxt_realestateresaleamount_Base {
        get {
            return GetMoneyValue("nxt_realestateresaleamount_base");
        }
        set {
            SetMoneyValue("nxt_realestateresaleamount_base", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'ID du processus associé à l'entité.</para>
    /// <para>Display Name: ID de processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("ID de processus")]
    public Guid? processid {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Données Personnelles</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_PersonalDataState? statecode {
        get {
            return GetOptionSetValue<nxt_PersonalDataState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Données Personnelles</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public nxt_PersonalData_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_PersonalData_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_nxt_personaldata")]
    public BusinessUnit business_unit_nxt_personaldata {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_nxt_personaldata", null);
        }
        set {
            SetRelatedEntity("business_unit_nxt_personaldata", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_personaldata_createdby")]
    public SystemUser lk_nxt_personaldata_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_personaldata_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_personaldata_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_personaldata_createdonbehalfby")]
    public SystemUser lk_nxt_personaldata_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_personaldata_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_personaldata_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_personaldata_modifiedby")]
    public SystemUser lk_nxt_personaldata_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_personaldata_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_personaldata_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_personaldata_modifiedonbehalfby")]
    public SystemUser lk_nxt_personaldata_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_personaldata_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_personaldata_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerid")]
    [RelationshipSchemaName("nxt_account_nxt_personaldata_CustomerId")]
    public Account nxt_account_nxt_personaldata_CustomerId {
        get {
            return GetRelatedEntity<Account>("nxt_account_nxt_personaldata_CustomerId", null);
        }
        set {
            SetRelatedEntity("nxt_account_nxt_personaldata_CustomerId", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerid")]
    [RelationshipSchemaName("nxt_contact_nxt_personaldata_CustomerId")]
    public Contact nxt_contact_nxt_personaldata_CustomerId {
        get {
            return GetRelatedEntity<Contact>("nxt_contact_nxt_personaldata_CustomerId", null);
        }
        set {
            SetRelatedEntity("nxt_contact_nxt_personaldata_CustomerId", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_customerfolderid")]
    [RelationshipSchemaName("nxt_nxt_customerfolder_nxt_personaldata")]
    public nxt_customerfolder nxt_nxt_customerfolder_nxt_personaldata {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_nxt_customerfolder_nxt_personaldata", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_customerfolder_nxt_personaldata", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_personaldata_connections1")]
    public IEnumerable<Connection> nxt_personaldata_connections1 {
        get {
            return GetRelatedEntities<Connection>("nxt_personaldata_connections1", null);
        }
        set {
            SetRelatedEntities("nxt_personaldata_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_personaldata_connections2")]
    public IEnumerable<Connection> nxt_personaldata_connections2 {
        get {
            return GetRelatedEntities<Connection>("nxt_personaldata_connections2", null);
        }
        set {
            SetRelatedEntities("nxt_personaldata_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_nxt_personaldata")]
    public Team team_nxt_personaldata {
        get {
            return GetRelatedEntity<Team>("team_nxt_personaldata", null);
        }
        set {
            SetRelatedEntity("team_nxt_personaldata", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_nxt_personaldata")]
    public SystemUser user_nxt_personaldata {
        get {
            return GetRelatedEntity<SystemUser>("user_nxt_personaldata", null);
        }
        set {
            SetRelatedEntity("user_nxt_personaldata", null, value);
        }
    }
    
    public static nxt_PersonalData Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_PersonalData,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'Alternate Key CustomerRef CustomerFolder'</para>
    /// </summary>
    public static nxt_PersonalData Retrieve_nxt_AlternateKeyCustomerRefCustomerFolder(IOrganizationService service, EntityReference nxt_CustomerFolderId, string nxt_CustomerReference, params Expression<Func<nxt_PersonalData,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_customerfolderid", nxt_CustomerFolderId);
        keys.Add("nxt_customerreference", nxt_CustomerReference);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'Alternate Key CustomerRef CustomerFolder'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyCustomerRefCustomerFolder(EntityReference nxt_CustomerFolderId, string nxt_CustomerReference) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_customerfolderid", nxt_CustomerFolderId);
        KeyAttributes.Add("nxt_customerreference", nxt_CustomerReference);
    }
}

[DataContract()]
public enum nxt_PersonalDataState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_PersonalData_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}
