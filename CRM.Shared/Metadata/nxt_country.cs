//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Pays</para>
/// </summary>
[EntityLogicalName("nxt_country")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_country : ExtendedEntity<nxt_countryState, nxt_country_statuscode> {
    
    public const string EntityLogicalName = "nxt_country";
    
    public const int EntityTypeCode = 10707;
    
    public nxt_country() : 
            base(EntityLogicalName) {
    }
    
    public nxt_country(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_name");
        }
    }
    
    [AttributeLogicalName("nxt_countryid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Pays</para>
    /// </summary>
    [AttributeLogicalName("nxt_countryid")]
    [DisplayName("Pays")]
    public Guid? nxt_countryId {
        get {
            return GetAttributeValue<Guid?>("nxt_countryid");
        }
        set {
            SetId("nxt_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'organisation</para>
    /// <para>Display Name: ID d’organisation</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("ID d’organisation")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code</para>
    /// </summary>
    [AttributeLogicalName("nxt_code")]
    [DisplayName("Code")]
    [MaxLength(100)]
    public string nxt_Code {
        get {
            return GetAttributeValue<string>("nxt_code");
        }
        set {
            SetAttributeValue("nxt_code", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Alpha 2</para>
    /// </summary>
    [AttributeLogicalName("nxt_codealpha2")]
    [DisplayName("Code Alpha 2")]
    [MaxLength(100)]
    public string nxt_CodeAlpha2 {
        get {
            return GetAttributeValue<string>("nxt_codealpha2");
        }
        set {
            SetAttributeValue("nxt_codealpha2", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Valeur par défaut</para>
    /// </summary>
    [AttributeLogicalName("nxt_isdefaultvalue")]
    [DisplayName("Valeur par défaut")]
    public bool? nxt_IsDefaultValue {
        get {
            return GetAttributeValue<bool?>("nxt_isdefaultvalue");
        }
        set {
            SetAttributeValue("nxt_isdefaultvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Name</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Name")]
    [MaxLength(100)]
    public string nxt_Name {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Pays</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public nxt_countryState? statecode {
        get {
            return GetOptionSetValue<nxt_countryState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Pays</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public nxt_country_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_country_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_country_createdby")]
    public SystemUser lk_nxt_country_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_country_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_country_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_country_createdonbehalfby")]
    public SystemUser lk_nxt_country_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_country_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_country_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_country_modifiedby")]
    public SystemUser lk_nxt_country_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_country_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_country_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_country_modifiedonbehalfby")]
    public SystemUser lk_nxt_country_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_country_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_country_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_Address1_CountryId_nxt_country")]
    public IEnumerable<Account> nxt_account_Address1_CountryId_nxt_country {
        get {
            return GetRelatedEntities<Account>("nxt_account_Address1_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_account_Address1_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_Address2_CountryId_nxt_country")]
    public IEnumerable<Account> nxt_account_Address2_CountryId_nxt_country {
        get {
            return GetRelatedEntities<Account>("nxt_account_Address2_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_account_Address2_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_Address1_CountryId_nxt_country")]
    public IEnumerable<Contact> nxt_contact_Address1_CountryId_nxt_country {
        get {
            return GetRelatedEntities<Contact>("nxt_contact_Address1_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_contact_Address1_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_Address2_CountryId_nxt_country")]
    public IEnumerable<Contact> nxt_contact_Address2_CountryId_nxt_country {
        get {
            return GetRelatedEntities<Contact>("nxt_contact_Address2_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_contact_Address2_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_contact_Address3_CountryId_nxt_country")]
    public IEnumerable<Contact> nxt_contact_Address3_CountryId_nxt_country {
        get {
            return GetRelatedEntities<Contact>("nxt_contact_Address3_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_contact_Address3_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_program_CountryId_nxt_country")]
    public IEnumerable<nxt_Program> nxt_nxt_program_CountryId_nxt_country {
        get {
            return GetRelatedEntities<nxt_Program>("nxt_nxt_program_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_program_CountryId_nxt_country", null, value);
        }
    }
    
    public static nxt_country Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_country,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyCode'</para>
    /// </summary>
    public static nxt_country Retrieve_nxt_AlternateKeyCode(IOrganizationService service, string nxt_Code, params Expression<Func<nxt_country,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_code", nxt_Code);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyCodeAlpha2'</para>
    /// </summary>
    public static nxt_country Retrieve_nxt_AlternateKeyCodeAlpha2(IOrganizationService service, string nxt_CodeAlpha2, params Expression<Func<nxt_country,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_codealpha2", nxt_CodeAlpha2);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyCode'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyCode(string nxt_Code) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_code", nxt_Code);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyCodeAlpha2'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyCodeAlpha2(string nxt_CodeAlpha2) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_codealpha2", nxt_CodeAlpha2);
    }
}

[DataContract()]
public enum nxt_countryState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_country_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}
