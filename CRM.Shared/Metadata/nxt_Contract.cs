//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Contrat</para>
/// </summary>
[EntityLogicalName("nxt_contract")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_Contract : ExtendedEntity<nxt_ContractState, nxt_Contract_statuscode> {
    
    public const string EntityLogicalName = "nxt_contract";
    
    public const int EntityTypeCode = 10680;
    
    public nxt_Contract() : 
            base(EntityLogicalName) {
    }
    
    public nxt_Contract(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("nxt_reference");
        }
    }
    
    [AttributeLogicalName("nxt_contractid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("nxt_contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique des instances d'entité</para>
    /// <para>Display Name: Contrat</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractid")]
    [DisplayName("Contrat")]
    public Guid? nxt_ContractId {
        get {
            return GetAttributeValue<Guid?>("nxt_contractid");
        }
        set {
            SetId("nxt_contractid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
        set {
            SetAttributeValue("createdby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
        set {
            SetAttributeValue("createdon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
        set {
            SetAttributeValue("createdonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
        set {
            SetAttributeValue("modifiedby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
        set {
            SetAttributeValue("modifiedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur délégué ayant modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
        set {
            SetAttributeValue("modifiedonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Agence</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Agence")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence</para>
    /// </summary>
    [AttributeLogicalName("nxt_reference")]
    [DisplayName("Référence")]
    [MaxLength(200)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("nxt_reference");
        }
        set {
            SetAttributeValue("nxt_reference", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Agence</para>
    /// </summary>
    [AttributeLogicalName("nxt_agencycode")]
    [DisplayName("Code Agence")]
    [MaxLength(100)]
    public string nxt_AgencyCode {
        get {
            return GetAttributeValue<string>("nxt_agencycode");
        }
        set {
            SetAttributeValue("nxt_agencycode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Marque</para>
    /// </summary>
    [AttributeLogicalName("nxt_brandcode")]
    [DisplayName("Marque")]
    public nxt_brand? nxt_BrandCode {
        get {
            return GetOptionSetValue<nxt_brand>("nxt_brandcode");
        }
        set {
            SetOptionSetValue("nxt_brandcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_businesscode")]
    [DisplayName("Métier")]
    public nxt_business? nxt_BusinessCode {
        get {
            return GetOptionSetValue<nxt_business>("nxt_businesscode");
        }
        set {
            SetOptionSetValue("nxt_businesscode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de fin</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractenddate")]
    [DisplayName("Date de fin")]
    public DateTime? nxt_ContractEndDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_contractenddate");
        }
        set {
            SetAttributeValue("nxt_contractenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de début</para>
    /// </summary>
    [AttributeLogicalName("nxt_contractstartdate")]
    [DisplayName("Date de début")]
    public DateTime? nxt_ContractStartDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_contractstartdate");
        }
        set {
            SetAttributeValue("nxt_contractstartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de création</para>
    /// </summary>
    [AttributeLogicalName("nxt_createdon")]
    [DisplayName("Date de création")]
    public DateTime? nxt_CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("nxt_createdon");
        }
        set {
            SetAttributeValue("nxt_createdon", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Lien outil métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_externalurl")]
    [DisplayName("Lien outil métier")]
    [MaxLength(100)]
    public string nxt_ExternalURL {
        get {
            return GetAttributeValue<string>("nxt_externalurl");
        }
        set {
            SetAttributeValue("nxt_externalurl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de fin d’exercice comptable </para>
    /// </summary>
    [AttributeLogicalName("nxt_fiscalyearenddate")]
    [DisplayName("Date de fin d’exercice comptable ")]
    public DateTime? nxt_FiscalYearEndDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_fiscalyearenddate");
        }
        set {
            SetAttributeValue("nxt_fiscalyearenddate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de début d'exercice comptable</para>
    /// </summary>
    [AttributeLogicalName("nxt_fiscalyearstartdate")]
    [DisplayName("Date de début d\'exercice comptable")]
    public DateTime? nxt_FiscalYearStartDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_fiscalyearstartdate");
        }
        set {
            SetAttributeValue("nxt_fiscalyearstartdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: N° contrat</para>
    /// </summary>
    [AttributeLogicalName("nxt_idexternal")]
    [DisplayName("N° contrat")]
    [MaxLength(100)]
    public string nxt_IdExternal {
        get {
            return GetAttributeValue<string>("nxt_idexternal");
        }
        set {
            SetAttributeValue("nxt_idexternal", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de dernière AG</para>
    /// </summary>
    [AttributeLogicalName("nxt_lastagdate")]
    [DisplayName("Date de dernière AG")]
    public DateTime? nxt_LastAgDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_lastagdate");
        }
        set {
            SetAttributeValue("nxt_lastagdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Durée du bail</para>
    /// </summary>
    [AttributeLogicalName("nxt_leaseduration")]
    [DisplayName("Durée du bail")]
    [MaxLength(100)]
    public string nxt_LeaseDuration {
        get {
            return GetAttributeValue<string>("nxt_leaseduration");
        }
        set {
            SetAttributeValue("nxt_leaseduration", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Raison de sortie</para>
    /// </summary>
    [AttributeLogicalName("nxt_leavingreason")]
    [DisplayName("Raison de sortie")]
    [MaxLength(100)]
    public string nxt_LeavingReason {
        get {
            return GetAttributeValue<string>("nxt_leavingreason");
        }
        set {
            SetAttributeValue("nxt_leavingreason", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type de lots gérés</para>
    /// </summary>
    [AttributeLogicalName("nxt_lotstype")]
    [DisplayName("Type de lots gérés")]
    [MaxLength(100)]
    public string nxt_LotsType {
        get {
            return GetAttributeValue<string>("nxt_lotstype");
        }
        set {
            SetAttributeValue("nxt_lotstype", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("nxt_name")]
    [DisplayName("Nom")]
    [MaxLength(200)]
    public string nxt_Name {
        get {
            return GetAttributeValue<string>("nxt_name");
        }
        set {
            SetAttributeValue("nxt_name", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de prochaine AG</para>
    /// </summary>
    [AttributeLogicalName("nxt_nextagdate")]
    [DisplayName("Date de prochaine AG")]
    public DateTime? nxt_NextAgDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_nextagdate");
        }
        set {
            SetAttributeValue("nxt_nextagdate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence</para>
    /// </summary>
    [AttributeLogicalName("nxt_reference")]
    [DisplayName("Référence")]
    [MaxLength(200)]
    public string nxt_Reference {
        get {
            return GetAttributeValue<string>("nxt_reference");
        }
        set {
            SetAttributeValue("nxt_reference", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Contrat de gestion locative</para>
    /// </summary>
    [AttributeLogicalName("nxt_rentalmanagementcontractid")]
    [DisplayName("Contrat de gestion locative")]
    public EntityReference nxt_RentalManagementContractId {
        get {
            return GetAttributeValue<EntityReference>("nxt_rentalmanagementcontractid");
        }
        set {
            SetAttributeValue("nxt_rentalmanagementcontractid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Date de signature</para>
    /// </summary>
    [AttributeLogicalName("nxt_signaturedate")]
    [DisplayName("Date de signature")]
    public DateTime? nxt_SignatureDate {
        get {
            return GetAttributeValue<DateTime?>("nxt_signaturedate");
        }
        set {
            SetAttributeValue("nxt_signaturedate", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Site</para>
    /// </summary>
    [AttributeLogicalName("nxt_sitecode")]
    [DisplayName("Code Site")]
    [MaxLength(100)]
    public string nxt_SiteCode {
        get {
            return GetAttributeValue<string>("nxt_sitecode");
        }
        set {
            SetAttributeValue("nxt_sitecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Site</para>
    /// </summary>
    [AttributeLogicalName("nxt_siteid")]
    [DisplayName("Site")]
    public EntityReference nxt_SiteId {
        get {
            return GetAttributeValue<EntityReference>("nxt_siteid");
        }
        set {
            SetAttributeValue("nxt_siteid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("nxt_type")]
    [DisplayName("Type")]
    [MaxLength(100)]
    public string nxt_Type {
        get {
            return GetAttributeValue<string>("nxt_type");
        }
        set {
            SetAttributeValue("nxt_type", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'élément Contrat</para>
    /// <para>Display Name: Etat</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Etat")]
    public nxt_ContractState? statecode {
        get {
            return GetOptionSetValue<nxt_ContractState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'élément Contrat</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Statut")]
    public nxt_Contract_statuscode? statuscode {
        get {
            return GetOptionSetValue<nxt_Contract_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referenced)]
    public IEnumerable<nxt_Contract> Referencednxt_nxt_contract_RentalManagementContractId_n {
        get {
            return GetRelatedEntities<nxt_Contract>("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("nxt_rentalmanagementcontractid")]
    [RelationshipSchemaName("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referencing)]
    public nxt_Contract Referencingnxt_nxt_contract_RentalManagementContractId_n {
        get {
            return GetRelatedEntity<nxt_Contract>("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("nxt_nxt_contract_RentalManagementContractId_n", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_nxt_contract")]
    public BusinessUnit business_unit_nxt_contract {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_nxt_contract", null);
        }
        set {
            SetRelatedEntity("business_unit_nxt_contract", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_nxt_contract_createdby")]
    public SystemUser lk_nxt_contract_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contract_createdby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contract_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_nxt_contract_createdonbehalfby")]
    public SystemUser lk_nxt_contract_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contract_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contract_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_nxt_contract_modifiedby")]
    public SystemUser lk_nxt_contract_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contract_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contract_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_nxt_contract_modifiedonbehalfby")]
    public SystemUser lk_nxt_contract_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_nxt_contract_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_nxt_contract_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_Contract_nxt_HousingComplex")]
    public IEnumerable<nxt_HousingComplex> nxt_Contract_nxt_HousingComplex {
        get {
            return GetRelatedEntities<nxt_HousingComplex>("nxt_Contract_nxt_HousingComplex", null);
        }
        set {
            SetRelatedEntities("nxt_Contract_nxt_HousingComplex", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_Contract_nxt_Lot")]
    public IEnumerable<nxt_Lot> nxt_Contract_nxt_Lot {
        get {
            return GetRelatedEntities<nxt_Lot>("nxt_Contract_nxt_Lot", null);
        }
        set {
            SetRelatedEntities("nxt_Contract_nxt_Lot", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_ContractId_nxt_contract")]
    public IEnumerable<Incident> nxt_incident_ContractId_nxt_contract {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_ContractId_nxt_contract", null);
        }
        set {
            SetRelatedEntities("nxt_incident_ContractId_nxt_contract", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_RentalManagementContractId_contr")]
    public IEnumerable<Incident> nxt_incident_RentalManagementContractId_contr {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_RentalManagementContractId_contr", null);
        }
        set {
            SetRelatedEntities("nxt_incident_RentalManagementContractId_contr", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_siteid")]
    [RelationshipSchemaName("nxt_nxt_contract_SiteId_businessunit")]
    public BusinessUnit nxt_nxt_contract_SiteId_businessunit {
        get {
            return GetRelatedEntity<BusinessUnit>("nxt_nxt_contract_SiteId_businessunit", null);
        }
        set {
            SetRelatedEntity("nxt_nxt_contract_SiteId_businessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_contractingrole_ContractId_nxt_contra")]
    public IEnumerable<nxt_ContractingRole> nxt_nxt_contractingrole_ContractId_nxt_contra {
        get {
            return GetRelatedEntities<nxt_ContractingRole>("nxt_nxt_contractingrole_ContractId_nxt_contra", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_contractingrole_ContractId_nxt_contra", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_managementactor_ContractId_nxt_contra")]
    public IEnumerable<nxt_ManagementActor> nxt_nxt_managementactor_ContractId_nxt_contra {
        get {
            return GetRelatedEntities<nxt_ManagementActor>("nxt_nxt_managementactor_ContractId_nxt_contra", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_managementactor_ContractId_nxt_contra", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_nxt_contract")]
    public Team team_nxt_contract {
        get {
            return GetRelatedEntity<Team>("team_nxt_contract", null);
        }
        set {
            SetRelatedEntity("team_nxt_contract", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_nxt_contract")]
    public SystemUser user_nxt_contract {
        get {
            return GetRelatedEntity<SystemUser>("user_nxt_contract", null);
        }
        set {
            SetRelatedEntity("user_nxt_contract", null, value);
        }
    }
    
    public static nxt_Contract Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_Contract,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyIdExternal'</para>
    /// </summary>
    public static nxt_Contract Retrieve_nxt_AlternateKeyIdExternal(IOrganizationService service, string nxt_IdExternal, params Expression<Func<nxt_Contract,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_idexternal", nxt_IdExternal);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyIdExternal'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyIdExternal(string nxt_IdExternal) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_idexternal", nxt_IdExternal);
    }
}

[DataContract()]
public enum nxt_ContractState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum nxt_Contract_statuscode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Désactivé (CRM)", Index=1, Lcid=1036, Description="")]
    DésactivéCRM = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=2, Lcid=1036, Description="")]
    Inactif = 3,
    
    [EnumMember()]
    [OptionSetMetadata("En création", Index=3, Lcid=1036, Description="")]
    Encréation = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Proposition", Index=4, Lcid=1036, Description="")]
    Proposition = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Proposition acceptée", Index=5, Lcid=1036, Description="")]
    Propositionacceptée = 6,
    
    [EnumMember()]
    [OptionSetMetadata("Proposition non retenue", Index=6, Lcid=1036, Description="")]
    Propositionnonretenue = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Validation temporaire", Index=7, Lcid=1036, Description="")]
    Validationtemporaire = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Proposition abandonnée", Index=8, Lcid=1036, Description="")]
    Propositionabandonnée = 9,
    
    [EnumMember()]
    [OptionSetMetadata("Proposition refusée", Index=9, Lcid=1036, Description="")]
    Propositionrefusée = 10,
    
    [EnumMember()]
    [OptionSetMetadata("Mandat refusé", Index=10, Lcid=1036, Description="")]
    Mandatrefusé = 11,
}
