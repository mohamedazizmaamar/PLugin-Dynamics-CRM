//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Entité commerciale qui représente un client ou un prospect. Société facturée dans les transactions professionnelles.</para>
/// <para>Display Name: Compte</para>
/// </summary>
[EntityLogicalName("account")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
    
    public const string EntityLogicalName = "account";
    
    public const int EntityTypeCode = 1;
    
    public Account() : 
            base(EntityLogicalName) {
    }
    
    public Account(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("accountid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du compte.</para>
    /// <para>Display Name: Compte</para>
    /// </summary>
    [AttributeLogicalName("accountid")]
    [DisplayName("Compte")]
    public Guid? AccountId {
        get {
            return GetAttributeValue<Guid?>("accountid");
        }
        set {
            SetId("accountid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une catégorie pour indiquer si le compte client est un compte standard ou un compte favori.</para>
    /// <para>Display Name: Catégorie</para>
    /// </summary>
    [AttributeLogicalName("accountcategorycode")]
    [DisplayName("Catégorie")]
    public Account_AccountCategoryCode? AccountCategoryCode {
        get {
            return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
        }
        set {
            SetOptionSetValue("accountcategorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un code de classification pour indiquer la valeur possible du compte client en fonction du retour sur investissement projeté, du niveau de coopération, de la longueur du cycle des ventes ou d'autres critères.</para>
    /// <para>Display Name: Classification</para>
    /// </summary>
    [AttributeLogicalName("accountclassificationcode")]
    [DisplayName("Classification")]
    public Account_AccountClassificationCode? AccountClassificationCode {
        get {
            return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
        }
        set {
            SetOptionSetValue("accountclassificationcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un numéro d'identification pour le compte pour le rechercher et l'identifier dans les vues système.</para>
    /// <para>Display Name: N° Compte</para>
    /// </summary>
    [AttributeLogicalName("accountnumber")]
    [DisplayName("N° Compte")]
    [MaxLength(20)]
    public string AccountNumber {
        get {
            return GetAttributeValue<string>("accountnumber");
        }
        set {
            SetAttributeValue("accountnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une évaluation pour indiquer la valeur du compte client.</para>
    /// <para>Display Name: Évaluation de compte</para>
    /// </summary>
    [AttributeLogicalName("accountratingcode")]
    [DisplayName("Évaluation de compte")]
    public Account_AccountRatingCode? AccountRatingCode {
        get {
            return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
        }
        set {
            SetOptionSetValue("accountratingcode", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Adresse 1 : ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d’adresse principale.</para>
    /// <para>Display Name: Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Type d\'adresse")]
    public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse principale.</para>
    /// <para>Display Name: Ville</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("Ville")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse principale complète.</para>
    /// <para>Display Name: Adresse 1</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    [DisplayName("Adresse 1")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse principale.</para>
    /// <para>Display Name: Pays (standard)</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Pays (standard)")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la région de l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Commune</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Adresse 1 : Commune")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Adresse 1 : Télécopie")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour l'adresse principale pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Adresse 1 : Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("address1_freighttermscode")]
    [DisplayName("Adresse 1 : Conditions de transport")]
    public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
        get {
            return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
        }
        set {
            SetOptionSetValue("address1_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la latitude de l'adresse principale à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 1 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Adresse 1 : Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse principale.</para>
    /// <para>Display Name: Rue</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Rue")]
    [MaxLength(500)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse principale.</para>
    /// <para>Display Name: Complément d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Complément d\'adresse")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Obsolète suite AVLO2-2698</para>
    /// <para>Display Name: ZZ_Rue</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("ZZ_Rue")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la longitude de l'adresse principale à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 1 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Adresse 1 : Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour l'adresse principale, comme Siège social de l'entreprise.</para>
    /// <para>Display Name: Complément de nom</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Complément de nom")]
    [MaxLength(200)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de boîte postale de l'adresse principale.</para>
    /// <para>Display Name: Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Boîte postale")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse principale.</para>
    /// <para>Display Name: Code postal</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("Code postal")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal pour l’adresse principale du compte.</para>
    /// <para>Display Name: Adresse 1 : Nom du contact principal</para>
    /// </summary>
    [AttributeLogicalName("address1_primarycontactname")]
    [DisplayName("Adresse 1 : Nom du contact principal")]
    [MaxLength(100)]
    public string Address1_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address1_primarycontactname");
        }
        set {
            SetAttributeValue("address1_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Adresse 1 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Adresse 1 : Mode de livraison")]
    public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Département/province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("Adresse 1 : Département/province")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Téléphone de l'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Téléphone de l\'adresse")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Adresse 1 : Téléphone 2")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone associé à l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Adresse 1 : Téléphone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la zone UPS de l'adresse principale pour vous assurer que les frais de livraison sont calculés correctement et que les livraisons sont effectuées rapidement si elles sont prises en charge par UPS.</para>
    /// <para>Display Name: Adresse 1 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Adresse 1 : Zone UPS")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le fuseau horaire, ou décalage UTC, pour cette adresse pour que les autres utilisateurs puissent y faire référence s'ils contactent quelqu'un à cette adresse.</para>
    /// <para>Display Name: Adresse 1 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Adresse 1 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Adresse 2 : ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le type d’adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Adresse 2 : Type d\'adresse")]
    public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Ville</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Adresse 2 : Ville")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'adresse secondaire complète.</para>
    /// <para>Display Name: Adresse 2</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    [DisplayName("Adresse 2")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Pays (standard)</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Adresse 2 : Pays (standard)")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la région de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Commune</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Adresse 2 : Commune")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Adresse 2 : Télécopie")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour l'adresse secondaire pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Adresse 2 : Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("address2_freighttermscode")]
    [DisplayName("Adresse 2 : Conditions de transport")]
    public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
        get {
            return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
        }
        set {
            SetOptionSetValue("address2_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la latitude de l'adresse secondaire à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 2 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Adresse 2 : Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse secondaire.</para>
    /// <para>Display Name: Rue</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Rue")]
    [MaxLength(500)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Complément d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Adresse 2 : Complément d\'adresse")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Obsolète suite AVLO2-2698</para>
    /// <para>Display Name: ZZ_Rue</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("ZZ_Rue")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la longitude de l'adresse secondaire à utiliser dans les cartes et les autres applications.</para>
    /// <para>Display Name: Adresse 2 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Adresse 2 : Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom descriptif pour l'adresse secondaire, comme Siège social de l'entreprise.</para>
    /// <para>Display Name: Adresse 2 : Complément de nom</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Adresse 2 : Complément de nom")]
    [MaxLength(200)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de boîte postale de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Adresse 2 : Boîte postale")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Code postal</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Adresse 2 : Code postal")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom du contact principal pour l’adresse secondaire du compte.</para>
    /// <para>Display Name: Adresse 2 : Nom du contact principal</para>
    /// </summary>
    [AttributeLogicalName("address2_primarycontactname")]
    [DisplayName("Adresse 2 : Nom du contact principal")]
    [MaxLength(100)]
    public string Address2_PrimaryContactName {
        get {
            return GetAttributeValue<string>("address2_primarycontactname");
        }
        set {
            SetAttributeValue("address2_primarycontactname", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez un mode de livraison pour les livraisons envoyées à cette adresse.</para>
    /// <para>Display Name: Adresse 2 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Adresse 2 : Mode de livraison")]
    public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Département/province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Adresse 2 : Département/province")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Adresse 2 : Téléphone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Adresse 2 : Téléphone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone associé à l'adresse secondaire.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Adresse 2 : Téléphone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la zone UPS de l'adresse secondaire pour vous assurer que les frais de livraison sont calculés correctement et que les livraisons sont effectuées rapidement si elles sont prises en charge par UPS.</para>
    /// <para>Display Name: Adresse 2 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Adresse 2 : Zone UPS")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le fuseau horaire, ou décalage UTC, pour cette adresse pour que les autres utilisateurs puissent y faire référence s'ils contactent quelqu'un à cette adresse.</para>
    /// <para>Display Name: Adresse 2 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Adresse 2 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Created By (IP Address)</para>
    /// </summary>
    [AttributeLogicalName("adx_createdbyipaddress")]
    [DisplayName("Created By (IP Address)")]
    [MaxLength(100)]
    public string Adx_CreatedByIPAddress {
        get {
            return GetAttributeValue<string>("adx_createdbyipaddress");
        }
        set {
            SetAttributeValue("adx_createdbyipaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Created By (User Name)</para>
    /// </summary>
    [AttributeLogicalName("adx_createdbyusername")]
    [DisplayName("Created By (User Name)")]
    [MaxLength(100)]
    public string Adx_CreatedByUsername {
        get {
            return GetAttributeValue<string>("adx_createdbyusername");
        }
        set {
            SetAttributeValue("adx_createdbyusername", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modified By (IP Address)</para>
    /// </summary>
    [AttributeLogicalName("adx_modifiedbyipaddress")]
    [DisplayName("Modified By (IP Address)")]
    [MaxLength(100)]
    public string Adx_ModifiedByIPAddress {
        get {
            return GetAttributeValue<string>("adx_modifiedbyipaddress");
        }
        set {
            SetAttributeValue("adx_modifiedbyipaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modified By (User Name)</para>
    /// </summary>
    [AttributeLogicalName("adx_modifiedbyusername")]
    [DisplayName("Modified By (User Name)")]
    [MaxLength(100)]
    public string Adx_ModifiedByUsername {
        get {
            return GetAttributeValue<string>("adx_modifiedbyusername");
        }
        set {
            SetAttributeValue("adx_modifiedbyusername", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 30</para>
    /// </summary>
    [AttributeLogicalName("aging30")]
    [DisplayName("Classement chronologique à 30")]
    public decimal? Aging30 {
        get {
            return GetMoneyValue("aging30");
        }
    }
    
    /// <summary>
    /// <para>Équivalent dans la devise de base du champ de classement chronologique à 30.</para>
    /// <para>Display Name: Classement chronologique à 30 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging30_base")]
    [DisplayName("Classement chronologique à 30 (devise de base)")]
    public decimal? Aging30_Base {
        get {
            return GetMoneyValue("aging30_base");
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 60</para>
    /// </summary>
    [AttributeLogicalName("aging60")]
    [DisplayName("Classement chronologique à 60")]
    public decimal? Aging60 {
        get {
            return GetMoneyValue("aging60");
        }
    }
    
    /// <summary>
    /// <para>Équivalent dans la devise de base du champ de classement chronologique à 60.</para>
    /// <para>Display Name: Classement chronologique à 60 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging60_base")]
    [DisplayName("Classement chronologique à 60 (devise de base)")]
    public decimal? Aging60_Base {
        get {
            return GetMoneyValue("aging60_base");
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement.</para>
    /// <para>Display Name: Classement chronologique à 90</para>
    /// </summary>
    [AttributeLogicalName("aging90")]
    [DisplayName("Classement chronologique à 90")]
    public decimal? Aging90 {
        get {
            return GetMoneyValue("aging90");
        }
    }
    
    /// <summary>
    /// <para>Équivalent dans la devise de base du champ de classement chronologique à 90.</para>
    /// <para>Display Name: Classement chronologique à 90 (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("aging90_base")]
    [DisplayName("Classement chronologique à 90 (devise de base)")]
    public decimal? Aging90_Base {
        get {
            return GetMoneyValue("aging90_base");
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la désignation juridique ou tout autre type d'entreprise du compte à des fins de génération de rapports ou de contrats.</para>
    /// <para>Display Name: Type d'entreprise/activité</para>
    /// </summary>
    [AttributeLogicalName("businesstypecode")]
    [DisplayName("Type d\'entreprise/activité")]
    public Account_BusinessTypeCode? BusinessTypeCode {
        get {
            return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
        }
        set {
            SetOptionSetValue("businesstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a créé l'enregistrement.</para>
    /// <para>Display Name: Créé par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("createdbyexternalparty")]
    [DisplayName("Créé par (partie externe)")]
    public EntityReference CreatedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("createdbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la création de l'enregistrement. Celles-ci sont affichées dans le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tapez la limite de crédit du compte. Cette référence est utile quand vous abordez des problèmes de facturation et de comptabilité avec le client.</para>
    /// <para>Display Name: Limite de crédit</para>
    /// </summary>
    [AttributeLogicalName("creditlimit")]
    [DisplayName("Limite de crédit")]
    public decimal? CreditLimit {
        get {
            return GetMoneyValue("creditlimit");
        }
        set {
            SetMoneyValue("creditlimit", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la limite de crédit convertie en devise de base par défaut du système pour la production de rapports.</para>
    /// <para>Display Name: Limite de crédit (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("creditlimit_base")]
    [DisplayName("Limite de crédit (devise de base)")]
    public decimal? CreditLimit_Base {
        get {
            return GetMoneyValue("creditlimit_base");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le crédit du compte a été suspendu. Cette référence est utile quand vous abordez les problèmes de facturation et de comptabilité avec le client.</para>
    /// <para>Display Name: Suspension de crédit</para>
    /// </summary>
    [AttributeLogicalName("creditonhold")]
    [DisplayName("Suspension de crédit")]
    public bool? CreditOnHold {
        get {
            return GetAttributeValue<bool?>("creditonhold");
        }
        set {
            SetAttributeValue("creditonhold", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la plage ou la catégorie de taille du compte à des fins de génération de rapports et de segmentation.</para>
    /// <para>Display Name: Taille du client</para>
    /// </summary>
    [AttributeLogicalName("customersizecode")]
    [DisplayName("Taille du client")]
    public Account_CustomerSizeCode? CustomerSizeCode {
        get {
            return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
        }
        set {
            SetOptionSetValue("customersizecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la catégorie qui décrit le mieux la relation entre le compte et votre organisation.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("customertypecode")]
    [DisplayName("Type")]
    public Account_CustomerTypeCode? CustomerTypeCode {
        get {
            return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
        }
        set {
            SetOptionSetValue("customertypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez les tarifs par défaut associés au compte pour vous assurer que les prix exacts du produit sont appliqués à ce client dans les opportunités de vente, les devis et les commandes.</para>
    /// <para>Display Name: Tarifs</para>
    /// </summary>
    [AttributeLogicalName("defaultpricelevelid")]
    [DisplayName("Tarifs")]
    public EntityReference DefaultPriceLevelId {
        get {
            return GetAttributeValue<EntityReference>("defaultpricelevelid");
        }
        set {
            SetAttributeValue("defaultpricelevelid", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire le compte, par exemple un extrait du site Web de la société.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise les envois en nombre via les campagnes. Si Ne pas autoriser est sélectionné, le compte peut être ajouté aux listes marketing, mais est exclu du courrier électronique.</para>
    /// <para>Display Name: Ne pas autoriser l’envoi de messages en nombre</para>
    /// </summary>
    [AttributeLogicalName("donotbulkemail")]
    [DisplayName("Ne pas autoriser l’envoi de messages en nombre")]
    public bool? DoNotBulkEMail {
        get {
            return GetAttributeValue<bool?>("donotbulkemail");
        }
        set {
            SetAttributeValue("donotbulkemail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise le courrier postal en nombre via les campagnes marketing ou les campagnes rapides. Si Ne pas autoriser est sélectionné, le compte peut être ajouté aux listes marketing, mais est exclu du courrier postal.</para>
    /// <para>Display Name: Ne pas autoriser l'envoi de messages en nombre</para>
    /// </summary>
    [AttributeLogicalName("donotbulkpostalmail")]
    [DisplayName("Ne pas autoriser l\'envoi de messages en nombre")]
    public bool? DoNotBulkPostalMail {
        get {
            return GetAttributeValue<bool?>("donotbulkpostalmail");
        }
        set {
            SetAttributeValue("donotbulkpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise le courrier direct envoyé depuis Microsoft Dynamics 365.</para>
    /// <para>Display Name: Ne pas autoriser le courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("donotemail")]
    [DisplayName("Ne pas autoriser le courrier électronique")]
    public bool? DoNotEMail {
        get {
            return GetAttributeValue<bool?>("donotemail");
        }
        set {
            SetAttributeValue("donotemail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise les télécopies. Si Ne pas autoriser est sélectionné, le compte peut être exclu des activités de télécopie distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser la télécopie</para>
    /// </summary>
    [AttributeLogicalName("donotfax")]
    [DisplayName("Ne pas autoriser la télécopie")]
    public bool? DoNotFax {
        get {
            return GetAttributeValue<bool?>("donotfax");
        }
        set {
            SetAttributeValue("donotfax", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise les appels téléphoniques. Si Ne pas autoriser est sélectionné, le compte peut être exclu des activités d'appel téléphonique distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser les appels téléphoniques</para>
    /// </summary>
    [AttributeLogicalName("donotphone")]
    [DisplayName("Ne pas autoriser les appels téléphoniques")]
    public bool? DoNotPhone {
        get {
            return GetAttributeValue<bool?>("donotphone");
        }
        set {
            SetAttributeValue("donotphone", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte autorise le courrier direct. Si Ne pas autoriser est sélectionné, le compte peut être exclu des activités de lettre distribuées dans les campagnes marketing.</para>
    /// <para>Display Name: Ne pas autoriser le courrier postal</para>
    /// </summary>
    [AttributeLogicalName("donotpostalmail")]
    [DisplayName("Ne pas autoriser le courrier postal")]
    public bool? DoNotPostalMail {
        get {
            return GetAttributeValue<bool?>("donotpostalmail");
        }
        set {
            SetAttributeValue("donotpostalmail", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le compte accepte les documents marketing, tels que des brochures ou des catalogues.</para>
    /// <para>Display Name: Envoyer les documents marketing</para>
    /// </summary>
    [AttributeLogicalName("donotsendmm")]
    [DisplayName("Envoyer les documents marketing")]
    public bool? DoNotSendMM {
        get {
            return GetAttributeValue<bool?>("donotsendmm");
        }
        set {
            SetAttributeValue("donotsendmm", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'adresse de messagerie principale pour le compte.</para>
    /// <para>Display Name: E-mail principal</para>
    /// </summary>
    [AttributeLogicalName("emailaddress1")]
    [DisplayName("E-mail principal")]
    [MaxLength(100)]
    public string EMailAddress1 {
        get {
            return GetAttributeValue<string>("emailaddress1");
        }
        set {
            SetAttributeValue("emailaddress1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'adresse de messagerie secondaire pour le compte.</para>
    /// <para>Display Name: E-mail secondaire</para>
    /// </summary>
    [AttributeLogicalName("emailaddress2")]
    [DisplayName("E-mail secondaire")]
    [MaxLength(100)]
    public string EMailAddress2 {
        get {
            return GetAttributeValue<string>("emailaddress2");
        }
        set {
            SetAttributeValue("emailaddress2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez une autre adresse de messagerie pour le compte.</para>
    /// <para>Display Name: Adresse de messagerie 3</para>
    /// </summary>
    [AttributeLogicalName("emailaddress3")]
    [DisplayName("Adresse de messagerie 3")]
    [MaxLength(100)]
    public string EMailAddress3 {
        get {
            return GetAttributeValue<string>("emailaddress3");
        }
        set {
            SetAttributeValue("emailaddress3", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Code d'image de l'entité</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    [DisplayName("Code d\'image de l\'entité")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs d'argent de l'enregistrement de la devise locale en devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie du compte.</para>
    /// <para>Display Name: Télécopie</para>
    /// </summary>
    [AttributeLogicalName("fax")]
    [DisplayName("Télécopie")]
    [MaxLength(50)]
    public string Fax {
        get {
            return GetAttributeValue<string>("fax");
        }
        set {
            SetAttributeValue("fax", value);
        }
    }
    
    /// <summary>
    /// <para>Informations indiquant si le suivi de l'activité de courrier électronique telle que les ouvertures, les affichages de pièce jointe et les clics sur les liens doit être autorisé pour les courriers électroniques envoyés vers le compte.</para>
    /// <para>Display Name: Suivre l'activité de courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("followemail")]
    [DisplayName("Suivre l\'activité de courrier électronique")]
    public bool? FollowEmail {
        get {
            return GetAttributeValue<bool?>("followemail");
        }
        set {
            SetAttributeValue("followemail", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'URL du site FTP du compte pour permettre aux utilisateurs d'accéder aux données et de partager les documents.</para>
    /// <para>Display Name: Site FTP</para>
    /// </summary>
    [AttributeLogicalName("ftpsiteurl")]
    [DisplayName("Site FTP")]
    [MaxLength(200)]
    public string FtpSiteURL {
        get {
            return GetAttributeValue<string>("ftpsiteurl");
        }
        set {
            SetAttributeValue("ftpsiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le secteur principal du compte à utiliser dans la segmentation marketing et l'analyse démographique.</para>
    /// <para>Display Name: Secteur d’activité</para>
    /// </summary>
    [AttributeLogicalName("industrycode")]
    [DisplayName("Secteur d’activité")]
    public Account_IndustryCode? IndustryCode {
        get {
            return GetOptionSetValue<Account_IndustryCode>("industrycode");
        }
        set {
            SetOptionSetValue("industrycode", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date de la dernière inclusion du compte à une campagne marketing ou une campagne rapide.</para>
    /// <para>Display Name: Dernière date incluse de la campagne</para>
    /// </summary>
    [AttributeLogicalName("lastusedincampaign")]
    [DisplayName("Dernière date incluse de la campagne")]
    public DateTime? LastUsedInCampaign {
        get {
            return GetAttributeValue<DateTime?>("lastusedincampaign");
        }
        set {
            SetAttributeValue("lastusedincampaign", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la capitalisation boursière du compte pour identifier les capitaux propres de la société, utilisés comme indicateur dans l'analyse des performances financières.</para>
    /// <para>Display Name: Capitalisation boursière</para>
    /// </summary>
    [AttributeLogicalName("marketcap")]
    [DisplayName("Capitalisation boursière")]
    public decimal? MarketCap {
        get {
            return GetMoneyValue("marketcap");
        }
        set {
            SetMoneyValue("marketcap", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la capitalisation boursière convertie en devise de base par défaut du système.</para>
    /// <para>Display Name: Capitalisation boursière (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("marketcap_base")]
    [DisplayName("Capitalisation boursière (devise de base)")]
    public decimal? MarketCap_Base {
        get {
            return GetMoneyValue("marketcap_base");
        }
    }
    
    /// <summary>
    /// <para>Indique si uniquement pour marketing</para>
    /// <para>Display Name: Marketing uniquement</para>
    /// </summary>
    [AttributeLogicalName("marketingonly")]
    [DisplayName("Marketing uniquement")]
    public bool? MarketingOnly {
        get {
            return GetAttributeValue<bool?>("marketingonly");
        }
        set {
            SetAttributeValue("marketingonly", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le compte principal avec lequel le compte a été fusionné.</para>
    /// <para>Display Name: ID principal</para>
    /// </summary>
    [AttributeLogicalName("masterid")]
    [DisplayName("ID principal")]
    public EntityReference MasterId {
        get {
            return GetAttributeValue<EntityReference>("masterid");
        }
    }
    
    /// <summary>
    /// <para>Indique si le compte a été fusionné avec un autre compte.</para>
    /// <para>Display Name: Fusionné(e)</para>
    /// </summary>
    [AttributeLogicalName("merged")]
    [DisplayName("Fusionné(e)")]
    public bool? Merged {
        get {
            return GetAttributeValue<bool?>("merged");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Affiche la partie externe qui a modifié l'enregistrement.</para>
    /// <para>Display Name: Modifié par (partie externe)</para>
    /// </summary>
    [AttributeLogicalName("modifiedbyexternalparty")]
    [DisplayName("Modifié par (partie externe)")]
    public EntityReference ModifiedByExternalParty {
        get {
            return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de la dernière mise à jour de l'enregistrement. La date et l'heure sont affichées selon le fuseau horaire sélectionné dans les options de Microsoft Dynamics 365.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom de la société ou de la division.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(160)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre d'employés impliqués dans le compte à utiliser dans la segmentation marketing et l'analyse démographique.</para>
    /// <para>Display Name: Nombre d'employés</para>
    /// </summary>
    [AttributeLogicalName("numberofemployees")]
    [DisplayName("Nombre d\'employés")]
    [Range(0, 1000000000)]
    public int? NumberOfEmployees {
        get {
            return GetAttributeValue<int?>("numberofemployees");
        }
        set {
            SetAttributeValue("numberofemployees", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée, en minutes, de la suspension de l'enregistrement.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
    }
    
    /// <summary>
    /// <para>Nombre d'opportunités ouvertes par rapport à un compte et à ses comptes enfants.</para>
    /// <para>Display Name: Transactions ouvertes</para>
    /// </summary>
    [AttributeLogicalName("opendeals")]
    [DisplayName("Transactions ouvertes")]
    [Range(-2147483648, 2147483647)]
    public int? OpenDeals {
        get {
            return GetAttributeValue<int?>("opendeals");
        }
    }
    
    /// <summary>
    /// <para>Heure de la dernière mise à jour du champ cumulatif Transactions ouvertes.</para>
    /// <para>Display Name: Transactions ouvertes (dernière mise à jour)</para>
    /// </summary>
    [AttributeLogicalName("opendeals_date")]
    [DisplayName("Transactions ouvertes (dernière mise à jour)")]
    public DateTime? OpenDeals_Date {
        get {
            return GetAttributeValue<DateTime?>("opendeals_date");
        }
    }
    
    /// <summary>
    /// <para>État du champ cumulatif Transactions ouvertes.</para>
    /// <para>Display Name: Transactions ouvertes (état)</para>
    /// </summary>
    [AttributeLogicalName("opendeals_state")]
    [DisplayName("Transactions ouvertes (état)")]
    [Range(-2147483648, 2147483647)]
    public int? OpenDeals_State {
        get {
            return GetAttributeValue<int?>("opendeals_state");
        }
    }
    
    /// <summary>
    /// <para>Montant des revenus en cours par rapport à un compte et à ses comptes enfants.</para>
    /// <para>Display Name: Revenus en cours</para>
    /// </summary>
    [AttributeLogicalName("openrevenue")]
    [DisplayName("Revenus en cours")]
    public decimal? OpenRevenue {
        get {
            return GetMoneyValue("openrevenue");
        }
    }
    
    /// <summary>
    /// <para>Valeur de Revenus en cours dans la devise de base.</para>
    /// <para>Display Name: Revenus en cours (de base)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_base")]
    [DisplayName("Revenus en cours (de base)")]
    public decimal? OpenRevenue_Base {
        get {
            return GetMoneyValue("openrevenue_base");
        }
    }
    
    /// <summary>
    /// <para>Heure de la dernière mise à jour du champ cumulatif Revenus en cours.</para>
    /// <para>Display Name: Revenus en cours (dernière mise à jour)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_date")]
    [DisplayName("Revenus en cours (dernière mise à jour)")]
    public DateTime? OpenRevenue_Date {
        get {
            return GetAttributeValue<DateTime?>("openrevenue_date");
        }
    }
    
    /// <summary>
    /// <para>État du champ cumulatif Revenus en cours.</para>
    /// <para>Display Name: Revenus en cours (état)</para>
    /// </summary>
    [AttributeLogicalName("openrevenue_state")]
    [DisplayName("Revenus en cours (état)")]
    [Range(-2147483648, 2147483647)]
    public int? OpenRevenue_State {
        get {
            return GetAttributeValue<int?>("openrevenue_state");
        }
    }
    
    /// <summary>
    /// <para>Affiche le prospect à partir duquel le compte a été créé si le compte a été créé par conversion d'un prospect dans Microsoft Dynamics 365. Permet d'établir un lien entre le compte et les données du prospect initial en vue d'une utilisation dans la génération de rapports et d'analyses.</para>
    /// <para>Display Name: Prospect d'origine</para>
    /// </summary>
    [AttributeLogicalName("originatingleadid")]
    [DisplayName("Prospect d\'origine")]
    public EntityReference OriginatingLeadId {
        get {
            return GetAttributeValue<EntityReference>("originatingleadid");
        }
        set {
            SetAttributeValue("originatingleadid", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez l'utilisateur ou l'équipe affectée à la gestion de l'enregistrement. Ce champ est mis à jour à chaque fois que l'enregistrement est attribué à un utilisateur différent.</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la structure de la propriété du compte, telle que publique ou privée.</para>
    /// <para>Display Name: Propriété</para>
    /// </summary>
    [AttributeLogicalName("ownershipcode")]
    [DisplayName("Propriété")]
    public Account_OwnershipCode? OwnershipCode {
        get {
            return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
        }
        set {
            SetOptionSetValue("ownershipcode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la division à laquelle le propriétaire appartient.</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’équipe propriétaire du compte.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire du compte.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choisissez le compte parent associé à ce compte pour afficher les entreprises mères et enfants dans la génération de rapports et d'analyses.</para>
    /// <para>Display Name: Compte parent</para>
    /// </summary>
    [AttributeLogicalName("parentaccountid")]
    [DisplayName("Compte parent")]
    public EntityReference ParentAccountId {
        get {
            return GetAttributeValue<EntityReference>("parentaccountid");
        }
        set {
            SetAttributeValue("parentaccountid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation par le système uniquement. Données de workflow héritées de Microsoft Dynamics CRM 3.0.</para>
    /// <para>Display Name: Participe au workflow</para>
    /// </summary>
    [AttributeLogicalName("participatesinworkflow")]
    [DisplayName("Participe au workflow")]
    public bool? ParticipatesInWorkflow {
        get {
            return GetAttributeValue<bool?>("participatesinworkflow");
        }
        set {
            SetAttributeValue("participatesinworkflow", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de paiement pour indiquer quand le client doit payer le montant total.</para>
    /// <para>Display Name: Conditions de paiement</para>
    /// </summary>
    [AttributeLogicalName("paymenttermscode")]
    [DisplayName("Conditions de paiement")]
    public Account_PaymentTermsCode? PaymentTermsCode {
        get {
            return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
        }
        set {
            SetOptionSetValue("paymenttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le jour préféré de la semaine pour les rendez-vous de service.</para>
    /// <para>Display Name: Jour privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmentdaycode")]
    [DisplayName("Jour privilégié")]
    public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
        get {
            return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
        }
        set {
            SetOptionSetValue("preferredappointmentdaycode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez l'heure préférée de la semaine pour les rendez-vous de service.</para>
    /// <para>Display Name: Heure privilégiée</para>
    /// </summary>
    [AttributeLogicalName("preferredappointmenttimecode")]
    [DisplayName("Heure privilégiée")]
    public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
        get {
            return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
        }
        set {
            SetOptionSetValue("preferredappointmenttimecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez la méthode de contact préférée.</para>
    /// <para>Display Name: Mode de communication privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredcontactmethodcode")]
    [DisplayName("Mode de communication privilégié")]
    public Account_PreferredContactMethodCode? PreferredContactMethodCode {
        get {
            return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
        }
        set {
            SetOptionSetValue("preferredcontactmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'équipement ou l'installation de service préférée du compte pour vous assurer que les services sont planifiés correctement pour le client.</para>
    /// <para>Display Name: Installation/équipement privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredequipmentid")]
    [DisplayName("Installation/équipement privilégié")]
    public EntityReference PreferredEquipmentId {
        get {
            return GetAttributeValue<EntityReference>("preferredequipmentid");
        }
        set {
            SetAttributeValue("preferredequipmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le service préféré du compte pour référence lorsque vous planifiez des activités de service.</para>
    /// <para>Display Name: Service privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredserviceid")]
    [DisplayName("Service privilégié")]
    public EntityReference PreferredServiceId {
        get {
            return GetAttributeValue<EntityReference>("preferredserviceid");
        }
        set {
            SetAttributeValue("preferredserviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le conseiller de service préféré pour référence lorsque vous planifiez des activités de service pour le compte.</para>
    /// <para>Display Name: Utilisateur privilégié</para>
    /// </summary>
    [AttributeLogicalName("preferredsystemuserid")]
    [DisplayName("Utilisateur privilégié")]
    public EntityReference PreferredSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("preferredsystemuserid");
        }
        set {
            SetAttributeValue("preferredsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contact principal pour le compte pour fournir un accès rapide aux détails du contact.</para>
    /// <para>Display Name: Représentant</para>
    /// </summary>
    [AttributeLogicalName("primarycontactid")]
    [DisplayName("Représentant")]
    public EntityReference PrimaryContactId {
        get {
            return GetAttributeValue<EntityReference>("primarycontactid");
        }
        set {
            SetAttributeValue("primarycontactid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le nom de la société ou de la division.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(160)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>ID Satori principal du compte</para>
    /// <para>Display Name: ID Satori principal</para>
    /// </summary>
    [AttributeLogicalName("primarysatoriid")]
    [DisplayName("ID Satori principal")]
    [MaxLength(200)]
    public string PrimarySatoriId {
        get {
            return GetAttributeValue<string>("primarysatoriid");
        }
        set {
            SetAttributeValue("primarysatoriid", value);
        }
    }
    
    /// <summary>
    /// <para>ID Twitter principal du compte</para>
    /// <para>Display Name: ID Twitter principal</para>
    /// </summary>
    [AttributeLogicalName("primarytwitterid")]
    [DisplayName("ID Twitter principal")]
    [MaxLength(128)]
    public string PrimaryTwitterId {
        get {
            return GetAttributeValue<string>("primarytwitterid");
        }
        set {
            SetAttributeValue("primarytwitterid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le revenu annuel du compte, utilisé comme indicateur dans l'analyse des performances financières.</para>
    /// <para>Display Name: Chiffre d’affaires annuel</para>
    /// </summary>
    [AttributeLogicalName("revenue")]
    [DisplayName("Chiffre d’affaires annuel")]
    public decimal? Revenue {
        get {
            return GetMoneyValue("revenue");
        }
        set {
            SetMoneyValue("revenue", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le revenu annuel converti en devise de base par défaut du système. Les calculs utilisent le taux de change spécifié dans la zone Devises.</para>
    /// <para>Display Name: Chiffre d'affaires annuel (devise de base)</para>
    /// </summary>
    [AttributeLogicalName("revenue_base")]
    [DisplayName("Chiffre d\'affaires annuel (devise de base)")]
    public decimal? Revenue_Base {
        get {
            return GetMoneyValue("revenue_base");
        }
    }
    
    /// <summary>
    /// <para>Tapez le code SIC (Standard Industrial Classification) qui indique le secteur principal de l'entreprise du compte à utiliser dans la segmentation marketing et l'analyse démographique.</para>
    /// <para>Display Name: Code NACE</para>
    /// </summary>
    [AttributeLogicalName("sic")]
    [DisplayName("Code NACE")]
    [MaxLength(20)]
    public string SIC {
        get {
            return GetAttributeValue<string>("sic");
        }
        set {
            SetAttributeValue("sic", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement de compte.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cet incident. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Tapez le nombre de partages à la disposition du public pour le compte. Ce nombre est utilisé comme indicateur dans l'analyse des performances financières.</para>
    /// <para>Display Name: Actions en circulation</para>
    /// </summary>
    [AttributeLogicalName("sharesoutstanding")]
    [DisplayName("Actions en circulation")]
    [Range(0, 1000000000)]
    public int? SharesOutstanding {
        get {
            return GetAttributeValue<int?>("sharesoutstanding");
        }
        set {
            SetAttributeValue("sharesoutstanding", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une méthode de livraison pour les livraisons envoyées à l'adresse du compte pour désigner le transporteur ou toute autre option de livraison préférée.</para>
    /// <para>Display Name: Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("shippingmethodcode")]
    [DisplayName("Mode de livraison")]
    public Account_ShippingMethodCode? ShippingMethodCode {
        get {
            return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
        }
        set {
            SetOptionSetValue("shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le compte est actif ou inactif. Les comptes inactifs sont en lecture seule et ne peuvent pas être modifiés avant d'être réactivés.</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut")]
    public AccountState? StateCode {
        get {
            return GetOptionSetValue<AccountState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez le statut du compte.</para>
    /// <para>Display Name: Raison du statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Raison du statut")]
    public Account_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<Account_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la place boursière sur laquelle le compte est répertorié pour suivre les performances financières et en bourse pour la société.</para>
    /// <para>Display Name: Place boursière</para>
    /// </summary>
    [AttributeLogicalName("stockexchange")]
    [DisplayName("Place boursière")]
    [MaxLength(20)]
    public string StockExchange {
        get {
            return GetAttributeValue<string>("stockexchange");
        }
        set {
            SetAttributeValue("stockexchange", value);
        }
    }
    
    /// <summary>
    /// <para>Nombre d'utilisateurs ou de conversations qui ont suivi l'enregistrement</para>
    /// <para>Display Name: TeamsFollowed</para>
    /// </summary>
    [AttributeLogicalName("teamsfollowed")]
    [DisplayName("TeamsFollowed")]
    [Range(-2147483648, 2147483647)]
    public int? TeamsFollowed {
        get {
            return GetAttributeValue<int?>("teamsfollowed");
        }
        set {
            SetAttributeValue("teamsfollowed", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone principal pour ce compte.</para>
    /// <para>Display Name: Téléphone bureau</para>
    /// </summary>
    [AttributeLogicalName("telephone1")]
    [DisplayName("Téléphone bureau")]
    [MaxLength(50)]
    public string Telephone1 {
        get {
            return GetAttributeValue<string>("telephone1");
        }
        set {
            SetAttributeValue("telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un deuxième numéro de téléphone pour ce compte.</para>
    /// <para>Display Name: Téléphone personnel</para>
    /// </summary>
    [AttributeLogicalName("telephone2")]
    [DisplayName("Téléphone personnel")]
    [MaxLength(50)]
    public string Telephone2 {
        get {
            return GetAttributeValue<string>("telephone2");
        }
        set {
            SetAttributeValue("telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un troisième numéro de téléphone pour ce compte.</para>
    /// <para>Display Name: Téléphone portable</para>
    /// </summary>
    [AttributeLogicalName("telephone3")]
    [DisplayName("Téléphone portable")]
    [MaxLength(50)]
    public string Telephone3 {
        get {
            return GetAttributeValue<string>("telephone3");
        }
        set {
            SetAttributeValue("telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez une région ou un territoire pour le compte, à utiliser dans la segmentation et les analyses.</para>
    /// <para>Display Name: Code de secteur de vente</para>
    /// </summary>
    [AttributeLogicalName("territorycode")]
    [DisplayName("Code de secteur de vente")]
    public Account_TerritoryCode? TerritoryCode {
        get {
            return GetOptionSetValue<Account_TerritoryCode>("territorycode");
        }
        set {
            SetOptionSetValue("territorycode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le secteur ou la région de vente du compte pour vous assurer que ce dernier est attribué au représentant correct. Le secteur ou la région de vente sera utilisé dans la segmentation et l'analyse.</para>
    /// <para>Display Name: Secteur de vente</para>
    /// </summary>
    [AttributeLogicalName("territoryid")]
    [DisplayName("Secteur de vente")]
    public EntityReference TerritoryId {
        get {
            return GetAttributeValue<EntityReference>("territoryid");
        }
        set {
            SetAttributeValue("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le symbole de place boursière du compte pour suivre les performances financières de la société. Vous pouvez cliquer sur le code entré dans ce champ pour accéder aux dernières informations commerciales provenant de MSN Money.</para>
    /// <para>Display Name: Symbole de l’action</para>
    /// </summary>
    [AttributeLogicalName("tickersymbol")]
    [DisplayName("Symbole de l’action")]
    [MaxLength(10)]
    public string TickerSymbol {
        get {
            return GetAttributeValue<string>("tickersymbol");
        }
        set {
            SetAttributeValue("tickersymbol", value);
        }
    }
    
    /// <summary>
    /// <para>Temps total que je consacre aux courriers électroniques (lecture et écriture) et aux réunions pour l'enregistrement de compte.</para>
    /// <para>Display Name: Temps que je consacre</para>
    /// </summary>
    [AttributeLogicalName("timespentbymeonemailandmeetings")]
    [DisplayName("Temps que je consacre")]
    [MaxLength(1250)]
    public string TimeSpentByMeOnEmailAndMeetings {
        get {
            return GetAttributeValue<string>("timespentbymeonemailandmeetings");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale pour l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code de fuseau horaire utilisé à la création de l’enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version du compte.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Tapez l'URL du site web du compte pour obtenir des détails rapides sur le profil de la société.</para>
    /// <para>Display Name: Site Web</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Site Web")]
    [MaxLength(200)]
    public string WebSiteURL {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'orthographe phonétique du nom de la société s'il est indiqué en japonais pour vous assurer que le nom est prononcé correctement dans les appels téléphoniques et toute autre communication.</para>
    /// <para>Display Name: Nom de compte Yomi</para>
    /// </summary>
    [AttributeLogicalName("yominame")]
    [DisplayName("Nom de compte Yomi")]
    [MaxLength(160)]
    public string YomiName {
        get {
            return GetAttributeValue<string>("yominame");
        }
        set {
            SetAttributeValue("yominame", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Account associated with Account.</para>
    /// <para>Display Name: Managing Partner</para>
    /// </summary>
    [AttributeLogicalName("msa_managingpartnerid")]
    [DisplayName("Managing Partner")]
    public EntityReference msa_managingpartnerid {
        get {
            return GetAttributeValue<EntityReference>("msa_managingpartnerid");
        }
        set {
            SetAttributeValue("msa_managingpartnerid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique le fuseau horaire principal sur lequel le client travaille.</para>
    /// <para>Display Name: Fuseau horaire principal</para>
    /// </summary>
    [AttributeLogicalName("msdyn_primarytimezone")]
    [DisplayName("Fuseau horaire principal")]
    [Range(-1500, 1500)]
    public int? msdyn_PrimaryTimeZone {
        get {
            return GetAttributeValue<int?>("msdyn_primarytimezone");
        }
        set {
            SetAttributeValue("msdyn_primarytimezone", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Indicateur de performance clé</para>
    /// </summary>
    [AttributeLogicalName("msdyn_accountkpiid")]
    [DisplayName("Indicateur de performance clé")]
    public EntityReference msdyn_accountkpiid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_accountkpiid");
        }
        set {
            SetAttributeValue("msdyn_accountkpiid", value);
        }
    }
    
    /// <summary>
    /// <para>Indique si le compte est désactivé ou non</para>
    /// <para>Display Name: Désactivation de GDPR</para>
    /// </summary>
    [AttributeLogicalName("msdyn_gdproptout")]
    [DisplayName("Désactivation de GDPR")]
    public bool? msdyn_gdproptout {
        get {
            return GetAttributeValue<bool?>("msdyn_gdproptout");
        }
        set {
            SetAttributeValue("msdyn_gdproptout", value);
        }
    }
    
    /// <summary>
    /// <para>ID d’informations d’accélération des ventes</para>
    /// <para>Display Name: ID d’informations d’accélération des ventes</para>
    /// </summary>
    [AttributeLogicalName("msdyn_salesaccelerationinsightid")]
    [DisplayName("ID d’informations d’accélération des ventes")]
    public EntityReference msdyn_salesaccelerationinsightid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_salesaccelerationinsightid");
        }
        set {
            SetAttributeValue("msdyn_salesaccelerationinsightid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du segment associé à account.</para>
    /// <para>Display Name: ID de segment</para>
    /// </summary>
    [AttributeLogicalName("msdyn_segmentid")]
    [DisplayName("ID de segment")]
    public EntityReference msdyn_segmentid {
        get {
            return GetAttributeValue<EntityReference>("msdyn_segmentid");
        }
        set {
            SetAttributeValue("msdyn_segmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Pays</para>
    /// </summary>
    [AttributeLogicalName("nxt_address1_countryid")]
    [DisplayName("Pays")]
    public EntityReference nxt_Address1_CountryId {
        get {
            return GetAttributeValue<EntityReference>("nxt_address1_countryid");
        }
        set {
            SetAttributeValue("nxt_address1_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Adresse 2 : Pays</para>
    /// </summary>
    [AttributeLogicalName("nxt_address2_countryid")]
    [DisplayName("Adresse 2 : Pays")]
    public EntityReference nxt_Address2_CountryId {
        get {
            return GetAttributeValue<EntityReference>("nxt_address2_countryid");
        }
        set {
            SetAttributeValue("nxt_address2_countryid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code établissement</para>
    /// </summary>
    [AttributeLogicalName("nxt_codeestablishment")]
    [DisplayName("Code établissement")]
    [MaxLength(100)]
    public string nxt_CodeEstablishment {
        get {
            return GetAttributeValue<string>("nxt_codeestablishment");
        }
        set {
            SetAttributeValue("nxt_codeestablishment", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Optin E-mail</para>
    /// </summary>
    [AttributeLogicalName("nxt_emailoptincode")]
    [DisplayName("Optin E-mail")]
    public nxt_optin? nxt_EMailOptinCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_emailoptincode");
        }
        set {
            SetOptionSetValue("nxt_emailoptincode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Stop PUB</para>
    /// </summary>
    [AttributeLogicalName("nxt_globaloptoutcode")]
    [DisplayName("Stop PUB")]
    public nxt_optin? nxt_GlobalOptoutCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_globaloptoutcode");
        }
        set {
            SetOptionSetValue("nxt_globaloptoutcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Id RGR</para>
    /// </summary>
    [AttributeLogicalName("nxt_idrgr")]
    [DisplayName("Id RGR")]
    [MaxLength(100)]
    public string nxt_IdRgr {
        get {
            return GetAttributeValue<string>("nxt_idrgr");
        }
        set {
            SetAttributeValue("nxt_idrgr", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Référence</para>
    /// </summary>
    [AttributeLogicalName("nxt_idsigeo")]
    [DisplayName("Référence")]
    [MaxLength(100)]
    public string nxt_IdSigeo {
        get {
            return GetAttributeValue<string>("nxt_idsigeo");
        }
        set {
            SetAttributeValue("nxt_idsigeo", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Collaborateur du groupe</para>
    /// </summary>
    [AttributeLogicalName("nxt_isgroupcollaborator")]
    [DisplayName("Collaborateur du groupe")]
    public bool? nxt_IsGroupCollaborator {
        get {
            return GetAttributeValue<bool?>("nxt_isgroupcollaborator");
        }
        set {
            SetAttributeValue("nxt_isgroupcollaborator", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Langue</para>
    /// </summary>
    [AttributeLogicalName("nxt_languageid")]
    [DisplayName("Langue")]
    public EntityReference nxt_LanguageId {
        get {
            return GetAttributeValue<EntityReference>("nxt_languageid");
        }
        set {
            SetAttributeValue("nxt_languageid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Langue</para>
    /// </summary>
    [AttributeLogicalName("nxt_languecode")]
    [DisplayName("Langue")]
    public msdyn_languagecodes? nxt_LangueCode {
        get {
            return GetOptionSetValue<msdyn_languagecodes>("nxt_languecode");
        }
        set {
            SetOptionSetValue("nxt_languecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ID Legacy</para>
    /// </summary>
    [AttributeLogicalName("nxt_legacyid")]
    [DisplayName("ID Legacy")]
    [MaxLength(100)]
    public string nxt_LegacyId {
        get {
            return GetAttributeValue<string>("nxt_legacyid");
        }
        set {
            SetAttributeValue("nxt_legacyid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Forme légale</para>
    /// </summary>
    [AttributeLogicalName("nxt_legalformcode")]
    [DisplayName("Forme légale")]
    public nxt_legalform? nxt_LegalFormCode {
        get {
            return GetOptionSetValue<nxt_legalform>("nxt_legalformcode");
        }
        set {
            SetOptionSetValue("nxt_legalformcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modifié par (système)</para>
    /// </summary>
    [AttributeLogicalName("nxt_modifiedbysystemcode")]
    [DisplayName("Modifié par (système)")]
    public nxt_systemcode? nxt_ModifiedBySystemCode {
        get {
            return GetOptionSetValue<nxt_systemcode>("nxt_modifiedbysystemcode");
        }
        set {
            SetOptionSetValue("nxt_modifiedbysystemcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Modifié le (système)</para>
    /// </summary>
    [AttributeLogicalName("nxt_modifiedonbysystem")]
    [DisplayName("Modifié le (système)")]
    public DateTime? nxt_ModifiedOnBySystem {
        get {
            return GetAttributeValue<DateTime?>("nxt_modifiedonbysystem");
        }
        set {
            SetAttributeValue("nxt_modifiedonbysystem", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Corps d'état</para>
    /// </summary>
    [AttributeLogicalName("nxt_publicsector")]
    [DisplayName("Corps d\'état")]
    public string nxt_PublicSector {
        get {
            return GetAttributeValue<string>("nxt_publicsector");
        }
        set {
            SetAttributeValue("nxt_publicsector", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: RCS</para>
    /// </summary>
    [AttributeLogicalName("nxt_rcsnumber")]
    [DisplayName("RCS")]
    [MaxLength(100)]
    public string nxt_RcsNumber {
        get {
            return GetAttributeValue<string>("nxt_rcsnumber");
        }
        set {
            SetAttributeValue("nxt_rcsnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Lien outil métier</para>
    /// </summary>
    [AttributeLogicalName("nxt_sigeourl")]
    [DisplayName("Lien outil métier")]
    [MaxLength(100)]
    public string nxt_SigeoURL {
        get {
            return GetAttributeValue<string>("nxt_sigeourl");
        }
        set {
            SetAttributeValue("nxt_sigeourl", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: SIREN</para>
    /// </summary>
    [AttributeLogicalName("nxt_siren")]
    [DisplayName("SIREN")]
    [MaxLength(100)]
    public string nxt_Siren {
        get {
            return GetAttributeValue<string>("nxt_siren");
        }
        set {
            SetAttributeValue("nxt_siren", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Optin SMS</para>
    /// </summary>
    [AttributeLogicalName("nxt_smsoptincode")]
    [DisplayName("Optin SMS")]
    public nxt_optin? nxt_SmsOptinCode {
        get {
            return GetOptionSetValue<nxt_optin>("nxt_smsoptincode");
        }
        set {
            SetOptionSetValue("nxt_smsoptincode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sous-type</para>
    /// </summary>
    [AttributeLogicalName("nxt_subtypecode")]
    [DisplayName("Sous-type")]
    public nxt_accountsubtype? nxt_SubTypeCode {
        get {
            return GetOptionSetValue<nxt_accountsubtype>("nxt_subtypecode");
        }
        set {
            SetOptionSetValue("nxt_subtypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: TVA</para>
    /// </summary>
    [AttributeLogicalName("nxt_tvanumber")]
    [DisplayName("TVA")]
    [MaxLength(100)]
    public string nxt_TvaNumber {
        get {
            return GetAttributeValue<string>("nxt_tvanumber");
        }
        set {
            SetAttributeValue("nxt_tvanumber", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Client VIP</para>
    /// </summary>
    [AttributeLogicalName("nxt_isvipcustomer")]
    [DisplayName("Client VIP")]
    public bool? nxt_isVipCustomer {
        get {
            return GetAttributeValue<bool?>("nxt_isvipcustomer");
        }
        set {
            SetAttributeValue("nxt_isvipcustomer", value);
        }
    }
    
    [RelationshipSchemaName("Account_Email_EmailSender")]
    public IEnumerable<Email> Account_Email_EmailSender {
        get {
            return GetRelatedEntities<Email>("Account_Email_EmailSender", null);
        }
        set {
            SetRelatedEntities("Account_Email_EmailSender", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Email_SendersAccount")]
    public IEnumerable<Email> Account_Email_SendersAccount {
        get {
            return GetRelatedEntities<Email>("Account_Email_SendersAccount", null);
        }
        set {
            SetRelatedEntities("Account_Email_SendersAccount", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Emails")]
    public IEnumerable<Email> Account_Emails {
        get {
            return GetRelatedEntities<Email>("Account_Emails", null);
        }
        set {
            SetRelatedEntities("Account_Emails", null, value);
        }
    }
    
    [RelationshipSchemaName("Account_Phonecalls")]
    public IEnumerable<PhoneCall> Account_Phonecalls {
        get {
            return GetRelatedEntities<PhoneCall>("Account_Phonecalls", null);
        }
        set {
            SetRelatedEntities("Account_Phonecalls", null, value);
        }
    }
    
    [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedaccount_master_account {
        get {
            return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedaccount_parent_account {
        get {
            return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referenced)]
    public IEnumerable<Account> Referencedmsa_account_managingpartner {
        get {
            return GetRelatedEntities<Account>("msa_account_managingpartner", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("msa_account_managingpartner", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("masterid")]
    [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
    public Account Referencingaccount_master_account {
        get {
            return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentaccountid")]
    [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
    public Account Referencingaccount_parent_account {
        get {
            return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("msa_managingpartnerid")]
    [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referencing)]
    public Account Referencingmsa_account_managingpartner {
        get {
            return GetRelatedEntity<Account>("msa_account_managingpartner", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("msa_account_managingpartner", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("account_activity_parties")]
    public IEnumerable<ActivityParty> account_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("account_activity_parties", null);
        }
        set {
            SetRelatedEntities("account_activity_parties", null, value);
        }
    }
    
    [RelationshipSchemaName("account_connections1")]
    public IEnumerable<Connection> account_connections1 {
        get {
            return GetRelatedEntities<Connection>("account_connections1", null);
        }
        set {
            SetRelatedEntities("account_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("account_connections2")]
    public IEnumerable<Connection> account_connections2 {
        get {
            return GetRelatedEntities<Connection>("account_connections2", null);
        }
        set {
            SetRelatedEntities("account_connections2", null, value);
        }
    }
    
    [RelationshipSchemaName("account_nxt_Messages")]
    public IEnumerable<nxt_Message> account_nxt_Messages {
        get {
            return GetRelatedEntities<nxt_Message>("account_nxt_Messages", null);
        }
        set {
            SetRelatedEntities("account_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("primarycontactid")]
    [RelationshipSchemaName("account_primary_contact")]
    public Contact account_primary_contact {
        get {
            return GetRelatedEntity<Contact>("account_primary_contact", null);
        }
        set {
            SetRelatedEntity("account_primary_contact", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("business_unit_accounts")]
    public BusinessUnit business_unit_accounts {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_accounts", null);
        }
        set {
            SetRelatedEntity("business_unit_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("contact_customer_accounts")]
    public IEnumerable<Contact> contact_customer_accounts {
        get {
            return GetRelatedEntities<Contact>("contact_customer_accounts", null);
        }
        set {
            SetRelatedEntities("contact_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("incident_customer_accounts")]
    public IEnumerable<Incident> incident_customer_accounts {
        get {
            return GetRelatedEntities<Incident>("incident_customer_accounts", null);
        }
        set {
            SetRelatedEntities("incident_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("invoice_customer_accounts")]
    public IEnumerable<Invoice> invoice_customer_accounts {
        get {
            return GetRelatedEntities<Invoice>("invoice_customer_accounts", null);
        }
        set {
            SetRelatedEntities("invoice_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_accountbase_createdby")]
    public SystemUser lk_accountbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
    public SystemUser lk_accountbase_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_accountbase_modifiedby")]
    public SystemUser lk_accountbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
    public SystemUser lk_accountbase_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("msa_contact_managingpartner")]
    public IEnumerable<Contact> msa_contact_managingpartner {
        get {
            return GetRelatedEntities<Contact>("msa_contact_managingpartner", null);
        }
        set {
            SetRelatedEntities("msa_contact_managingpartner", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_Contact_Account")]
    public IEnumerable<Contact> nxt_Contact_Account {
        get {
            return GetRelatedEntities<Contact>("nxt_Contact_Account", null);
        }
        set {
            SetRelatedEntities("nxt_Contact_Account", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_address1_countryid")]
    [RelationshipSchemaName("nxt_account_Address1_CountryId_nxt_country")]
    public nxt_country nxt_account_Address1_CountryId_nxt_country {
        get {
            return GetRelatedEntity<nxt_country>("nxt_account_Address1_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntity("nxt_account_Address1_CountryId_nxt_country", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_address2_countryid")]
    [RelationshipSchemaName("nxt_account_Address2_CountryId_nxt_country")]
    public nxt_country nxt_account_Address2_CountryId_nxt_country {
        get {
            return GetRelatedEntity<nxt_country>("nxt_account_Address2_CountryId_nxt_country", null);
        }
        set {
            SetRelatedEntity("nxt_account_Address2_CountryId_nxt_country", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_nxt_contractingrole")]
    public IEnumerable<nxt_ContractingRole> nxt_account_nxt_contractingrole {
        get {
            return GetRelatedEntities<nxt_ContractingRole>("nxt_account_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntities("nxt_account_nxt_contractingrole", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_nxt_contributor_21")]
    public IEnumerable<nxt_Contributor> nxt_account_nxt_contributor_21 {
        get {
            return GetRelatedEntities<nxt_Contributor>("nxt_account_nxt_contributor_21", null);
        }
        set {
            SetRelatedEntities("nxt_account_nxt_contributor_21", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_nxt_customerfolder_BuyerId")]
    public IEnumerable<nxt_customerfolder> nxt_account_nxt_customerfolder_BuyerId {
        get {
            return GetRelatedEntities<nxt_customerfolder>("nxt_account_nxt_customerfolder_BuyerId", null);
        }
        set {
            SetRelatedEntities("nxt_account_nxt_customerfolder_BuyerId", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_account_nxt_personaldata_CustomerId")]
    public IEnumerable<nxt_PersonalData> nxt_account_nxt_personaldata_CustomerId {
        get {
            return GetRelatedEntities<nxt_PersonalData>("nxt_account_nxt_personaldata_CustomerId", null);
        }
        set {
            SetRelatedEntities("nxt_account_nxt_personaldata_CustomerId", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_BuyerAccountId_account")]
    public IEnumerable<Incident> nxt_incident_BuyerAccountId_account {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_BuyerAccountId_account", null);
        }
        set {
            SetRelatedEntities("nxt_incident_BuyerAccountId_account", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_supplierintervention_AccountId_accoun")]
    public IEnumerable<nxt_SupplierIntervention> nxt_nxt_supplierintervention_AccountId_accoun {
        get {
            return GetRelatedEntities<nxt_SupplierIntervention>("nxt_nxt_supplierintervention_AccountId_accoun", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_supplierintervention_AccountId_accoun", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_supplierquote_AccountId_account")]
    public IEnumerable<nxt_SupplierQuote> nxt_nxt_supplierquote_AccountId_account {
        get {
            return GetRelatedEntities<nxt_SupplierQuote>("nxt_nxt_supplierquote_AccountId_account", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_supplierquote_AccountId_account", null, value);
        }
    }
    
    [RelationshipSchemaName("order_customer_accounts")]
    public IEnumerable<SalesOrder> order_customer_accounts {
        get {
            return GetRelatedEntities<SalesOrder>("order_customer_accounts", null);
        }
        set {
            SetRelatedEntities("order_customer_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("quote_customer_accounts")]
    public IEnumerable<Quote> quote_customer_accounts {
        get {
            return GetRelatedEntities<Quote>("quote_customer_accounts", null);
        }
        set {
            SetRelatedEntities("quote_customer_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("preferredsystemuserid")]
    [RelationshipSchemaName("system_user_accounts")]
    public SystemUser system_user_accounts {
        get {
            return GetRelatedEntity<SystemUser>("system_user_accounts", null);
        }
        set {
            SetRelatedEntity("system_user_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_accounts")]
    public Team team_accounts {
        get {
            return GetRelatedEntity<Team>("team_accounts", null);
        }
        set {
            SetRelatedEntity("team_accounts", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_accounts")]
    public SystemUser user_accounts {
        get {
            return GetRelatedEntity<SystemUser>("user_accounts", null);
        }
        set {
            SetRelatedEntity("user_accounts", null, value);
        }
    }
    
    public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyIdRgr'</para>
    /// </summary>
    public static Account Retrieve_nxt_AlternateKeyIdRgr(IOrganizationService service, string nxt_IdRgr, params Expression<Func<Account,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_idrgr", nxt_IdRgr);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyIdRgr'</para>
    /// </summary>
    public void AltKey_nxt_AlternateKeyIdRgr(string nxt_IdRgr) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_idrgr", nxt_IdRgr);
    }
}

[DataContract()]
public enum AccountState {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 1,
}

[DataContract()]
public enum Account_AccountCategoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Client favori", Index=0, Lcid=1036)]
    Clientfavori = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Standard", Index=1, Lcid=1036)]
    Standard = 2,
}

[DataContract()]
public enum Account_AccountClassificationCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_AccountRatingCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Principale", Index=0, Lcid=1036, Description="", Color="")]
    Principale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Secondaire", Index=1, Lcid=1036, Description="", Color="")]
    Secondaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=2, Lcid=1036, Description="", Color="")]
    Courrier = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facture", Index=3, Lcid=1036, Description="", Color="")]
    Facture = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Paiement", Index=4, Lcid=1036, Description="", Color="")]
    Paiement = 5,
}

[DataContract()]
public enum Account_Address1_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FAB", Index=0, Lcid=1036)]
    FAB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Sans supplément", Index=1, Lcid=1036)]
    Sanssupplément = 2,
}

[DataContract()]
public enum Account_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Courrier postal", Index=0, Lcid=1036)]
    Courrierpostal = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Collecte", Index=1, Lcid=1036)]
    Collecte = 7,
    
    [EnumMember()]
    [OptionSetMetadata("Autre", Index=2, Lcid=1036)]
    Autre = 8,
    
    [EnumMember()]
    [OptionSetMetadata("Transporteur", Index=3, Lcid=1036)]
    Transporteur = 17,
}

[DataContract()]
public enum Account_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Principale", Index=0, Lcid=1036, Description="", Color="")]
    Principale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Secondaire", Index=1, Lcid=1036, Description="", Color="")]
    Secondaire = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=2, Lcid=1036, Description="", Color="")]
    Courrier = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Facture", Index=3, Lcid=1036, Description="", Color="")]
    Facture = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Paiement", Index=4, Lcid=1036, Description="", Color="")]
    Paiement = 5,
}

[DataContract()]
public enum Account_Address2_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_BusinessTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_CustomerSizeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_CustomerTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Client", Index=0, Lcid=1036, Description="", Color="")]
    Client = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Intervenant", Index=1, Lcid=1036, Description="", Color="")]
    Intervenant = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Client Grand Compte", Index=2, Lcid=1036, Description="")]
    ClientGrandCompte = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Contact", Index=3, Lcid=1036)]
    Contact = 4,
}

[DataContract()]
public enum Account_IndustryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Agriculture, chasse, foresterie et pêche", Index=0, Lcid=1036)]
    Agriculturechasseforesterieetpêche = 34,
    
    [EnumMember()]
    [OptionSetMetadata("Énergie et eau", Index=1, Lcid=1036)]
    Énergieeteau = 35,
    
    [EnumMember()]
    [OptionSetMetadata("Extraction et transformation de minéraux non énergétiques et produits dérivés ; i" +
        "ndustrie chimique", Index=2, Lcid=1036)]
    Extractionettransformationdeminérauxnonénergétiquesetproduitsdérivésindustriechimique = 36,
    
    [EnumMember()]
    [OptionSetMetadata("Industries transformatrices des métaux, mécanique de précision", Index=3, Lcid=1036)]
    Industriestransformatricesdesmétauxmécaniquedeprécision = 37,
    
    [EnumMember()]
    [OptionSetMetadata("Autres industries manufacturières", Index=4, Lcid=1036)]
    Autresindustriesmanufacturières = 38,
    
    [EnumMember()]
    [OptionSetMetadata("Bâtiment et génie civil", Index=5, Lcid=1036)]
    Bâtimentetgéniecivil = 39,
    
    [EnumMember()]
    [OptionSetMetadata("Commerce, restauration et hébergement, réparations", Index=6, Lcid=1036)]
    Commercerestaurationethébergementréparations = 40,
    
    [EnumMember()]
    [OptionSetMetadata("Transports et communications", Index=7, Lcid=1036)]
    Transportsetcommunications = 41,
    
    [EnumMember()]
    [OptionSetMetadata("Institutions de crédit, assurances, services fournis aux entreprises, location", Index=8, Lcid=1036)]
    Institutionsdecréditassurancesservicesfournisauxentrepriseslocation = 42,
    
    [EnumMember()]
    [OptionSetMetadata("Autres services", Index=9, Lcid=1036)]
    Autresservices = 43,
}

[DataContract()]
public enum Account_OwnershipCode {
    
    [EnumMember()]
    [OptionSetMetadata("Public", Index=0, Lcid=1036)]
    Public = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Privé", Index=1, Lcid=1036)]
    Privé = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Filiale", Index=2, Lcid=1036)]
    Filiale = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Autre", Index=3, Lcid=1036)]
    Autre = 4,
}

[DataContract()]
public enum Account_PaymentTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("Net 30J", Index=0, Lcid=1036)]
    Net30J = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Net 60J", Index=1, Lcid=1036)]
    Net60J = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Au comptant", Index=2, Lcid=1036)]
    Aucomptant = 10,
    
    [EnumMember()]
    [OptionSetMetadata("À réception de facture", Index=3, Lcid=1036)]
    Àréceptiondefacture = 15,
    
    [EnumMember()]
    [OptionSetMetadata("30J FDM", Index=4, Lcid=1036)]
    _30JFDM = 16,
    
    [EnumMember()]
    [OptionSetMetadata("60J FDM", Index=5, Lcid=1036)]
    _60JFDM = 17,
}

[DataContract()]
public enum Account_PreferredAppointmentDayCode {
    
    [EnumMember()]
    [OptionSetMetadata("Dimanche", Index=0, Lcid=1036)]
    Dimanche = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Lundi", Index=1, Lcid=1036)]
    Lundi = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Mardi", Index=2, Lcid=1036)]
    Mardi = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Mercredi", Index=3, Lcid=1036)]
    Mercredi = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Jeudi", Index=4, Lcid=1036)]
    Jeudi = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Vendredi", Index=5, Lcid=1036)]
    Vendredi = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Samedi", Index=6, Lcid=1036)]
    Samedi = 6,
}

[DataContract()]
public enum Account_PreferredAppointmentTimeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Matin", Index=0, Lcid=1036)]
    Matin = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Après-midi", Index=1, Lcid=1036)]
    Aprèsmidi = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Soir", Index=2, Lcid=1036)]
    Soir = 3,
}

[DataContract()]
public enum Account_PreferredContactMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Sans préférence", Index=0, Lcid=1036, Description="")]
    Sanspréférence = 1,
    
    [EnumMember()]
    [OptionSetMetadata("E-mail", Index=1, Lcid=1036, Description="")]
    Email = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone mobile", Index=2, Lcid=1036, Description="")]
    Téléphonemobile = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone personnel", Index=3, Lcid=1036, Description="")]
    Téléphonepersonnel = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Téléphone bureau", Index=4, Lcid=1036, Description="")]
    Téléphonebureau = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Courrier", Index=5, Lcid=1036, Description="")]
    Courrier = 6,
}

[DataContract()]
public enum Account_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum Account_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Actif", Index=0, Lcid=1036)]
    Actif = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Inactif", Index=1, Lcid=1036)]
    Inactif = 2,
}

[DataContract()]
public enum Account_TerritoryCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}
