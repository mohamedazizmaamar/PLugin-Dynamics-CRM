//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Display Name: Message Espace Client</para>
/// </summary>
[EntityLogicalName("nxt_message")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class nxt_Message : ExtendedEntity<nxt_MessageState, nxt_Message_StatusCode> {
    
    public const string EntityLogicalName = "nxt_message";
    
    public const int EntityTypeCode = 10659;
    
    public nxt_Message() : 
            base(EntityLogicalName) {
    }
    
    public nxt_Message(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("subject");
        }
    }
    
    [AttributeLogicalName("activityid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'activité.</para>
    /// <para>Display Name: Activité</para>
    /// </summary>
    [AttributeLogicalName("activityid")]
    [DisplayName("Activité")]
    public Guid? ActivityId {
        get {
            return GetAttributeValue<Guid?>("activityid");
        }
        set {
            SetId("activityid", value);
        }
    }
    
    /// <summary>
    /// <para>Informations supplémentaires fournies par l'application externe comme JSON. Utilisation interne uniquement.</para>
    /// <para>Display Name: Autres paramètres d'activité</para>
    /// </summary>
    [AttributeLogicalName("activityadditionalparams")]
    [DisplayName("Autres paramètres d\'activité")]
    public string ActivityAdditionalParams {
        get {
            return GetAttributeValue<string>("activityadditionalparams");
        }
        set {
            SetAttributeValue("activityadditionalparams", value);
        }
    }
    
    /// <summary>
    /// <para>Type d'activité.</para>
    /// <para>Display Name: Type d'activité</para>
    /// </summary>
    [AttributeLogicalName("activitytypecode")]
    [DisplayName("Type d\'activité")]
    public string ActivityTypeCode {
        get {
            return GetAttributeValue<string>("activitytypecode");
        }
        set {
            SetAttributeValue("activitytypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Durée réelle de l'activité en minutes.</para>
    /// <para>Display Name: Durée réelle</para>
    /// </summary>
    [AttributeLogicalName("actualdurationminutes")]
    [DisplayName("Durée réelle")]
    [Range(0, 2147483647)]
    public int? ActualDurationMinutes {
        get {
            return GetAttributeValue<int?>("actualdurationminutes");
        }
        set {
            SetAttributeValue("actualdurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Heure de fin réelle de l'activité.</para>
    /// <para>Display Name: Fin réelle</para>
    /// </summary>
    [AttributeLogicalName("actualend")]
    [DisplayName("Fin réelle")]
    public DateTime? ActualEnd {
        get {
            return GetAttributeValue<DateTime?>("actualend");
        }
        set {
            SetAttributeValue("actualend", value);
        }
    }
    
    /// <summary>
    /// <para>Heure de début réelle de l'activité.</para>
    /// <para>Display Name: Début réel</para>
    /// </summary>
    [AttributeLogicalName("actualstart")]
    [DisplayName("Début réel")]
    public DateTime? ActualStart {
        get {
            return GetAttributeValue<DateTime?>("actualstart");
        }
        set {
            SetAttributeValue("actualstart", value);
        }
    }
    
    /// <summary>
    /// <para>Destinataires de l'activité en copie carbone invisible (Cci).</para>
    /// <para>Display Name: Cci</para>
    /// </summary>
    [AttributeLogicalName("bcc")]
    [DisplayName("Cci")]
    public IEnumerable<ActivityParty> Bcc {
        get {
            return GetEntityCollection<ActivityParty>("bcc");
        }
        set {
            SetEntityCollection("bcc", value);
        }
    }
    
    /// <summary>
    /// <para>Destinataires de l'activité en copie carbone (Cc).</para>
    /// <para>Display Name: Cc</para>
    /// </summary>
    [AttributeLogicalName("cc")]
    [DisplayName("Cc")]
    public IEnumerable<ActivityParty> Cc {
        get {
            return GetEntityCollection<ActivityParty>("cc");
        }
        set {
            SetEntityCollection("cc", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'origine du contact au sujet de l'activité sociale, comme Twitter ou Facebook. Ce champ est en lecture seule.</para>
    /// <para>Display Name: Canal social</para>
    /// </summary>
    [AttributeLogicalName("community")]
    [DisplayName("Canal social")]
    public socialprofile_community? Community {
        get {
            return GetOptionSetValue<socialprofile_community>("community");
        }
        set {
            SetOptionSetValue("community", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a créé l'activité.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
        set {
            SetAttributeValue("createdby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la création de l'activité.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
        set {
            SetAttributeValue("createdon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a créé le pointeur d’activité.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
        set {
            SetAttributeValue("createdonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Client auquel est associée l'activité.</para>
    /// <para>Display Name: Clients</para>
    /// </summary>
    [AttributeLogicalName("customers")]
    [DisplayName("Clients")]
    public IEnumerable<ActivityParty> Customers {
        get {
            return GetEntityCollection<ActivityParty>("customers");
        }
        set {
            SetEntityCollection("customers", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la dernière tentative de livraison de l'activité.</para>
    /// <para>Display Name: Date de dernière tentative de livraison</para>
    /// </summary>
    [AttributeLogicalName("deliverylastattemptedon")]
    [DisplayName("Date de dernière tentative de livraison")]
    public DateTime? DeliveryLastAttemptedOn {
        get {
            return GetAttributeValue<DateTime?>("deliverylastattemptedon");
        }
        set {
            SetAttributeValue("deliverylastattemptedon", value);
        }
    }
    
    /// <summary>
    /// <para>Priorité de livraison de l'activité au serveur de messagerie.</para>
    /// <para>Display Name: Priorité de livraison</para>
    /// </summary>
    [AttributeLogicalName("deliveryprioritycode")]
    [DisplayName("Priorité de livraison")]
    public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
        get {
            return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
        }
        set {
            SetOptionSetValue("deliveryprioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Description de l'activité.</para>
    /// <para>Display Name: Message</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Message")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>ID de message de l'activité retournée par Exchange Server.</para>
    /// <para>Display Name: ID d'élément Exchange</para>
    /// </summary>
    [AttributeLogicalName("exchangeitemid")]
    [DisplayName("ID d\'élément Exchange")]
    [MaxLength(200)]
    public string ExchangeItemId {
        get {
            return GetAttributeValue<string>("exchangeitemid");
        }
        set {
            SetAttributeValue("exchangeitemid", value);
        }
    }
    
    /// <summary>
    /// <para>Taux de change de la devise associée au pointeur d’activité par rapport à la devise de base.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
        set {
            SetAttributeValue("exchangerate", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le lien Web de l'activité de type Courrier électronique.</para>
    /// <para>Display Name: WebLink Exchange</para>
    /// </summary>
    [AttributeLogicalName("exchangeweblink")]
    [DisplayName("WebLink Exchange")]
    [MaxLength(1250)]
    public string ExchangeWebLink {
        get {
            return GetAttributeValue<string>("exchangeweblink");
        }
        set {
            SetAttributeValue("exchangeweblink", value);
        }
    }
    
    /// <summary>
    /// <para>Personne dont provient l'activité.</para>
    /// <para>Display Name: De</para>
    /// </summary>
    [AttributeLogicalName("from")]
    [DisplayName("De")]
    public IEnumerable<ActivityParty> From {
        get {
            return GetEntityCollection<ActivityParty>("from");
        }
        set {
            SetEntityCollection("from", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Type d’instance d’une série périodique.</para>
    /// <para>Display Name: Type d’instance périodique</para>
    /// </summary>
    [AttributeLogicalName("instancetypecode")]
    [DisplayName("Type d’instance périodique")]
    public nxt_Message_InstanceTypeCode? InstanceTypeCode {
        get {
            return GetOptionSetValue<nxt_Message_InstanceTypeCode>("instancetypecode");
        }
        set {
            SetOptionSetValue("instancetypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l'activité a été facturée dans le cadre de la résolution d'un incident.</para>
    /// <para>Display Name: Est facturé</para>
    /// </summary>
    [AttributeLogicalName("isbilled")]
    [DisplayName("Est facturé")]
    public bool? IsBilled {
        get {
            return GetAttributeValue<bool?>("isbilled");
        }
        set {
            SetAttributeValue("isbilled", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Est privé</para>
    /// </summary>
    [AttributeLogicalName("ismapiprivate")]
    [DisplayName("Est privé")]
    public bool? IsMapiPrivate {
        get {
            return GetAttributeValue<bool?>("ismapiprivate");
        }
        set {
            SetAttributeValue("ismapiprivate", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l’activité est régulière ou de type événement.</para>
    /// <para>Display Name: Est une activité régulière</para>
    /// </summary>
    [AttributeLogicalName("isregularactivity")]
    [DisplayName("Est une activité régulière")]
    public bool? IsRegularActivity {
        get {
            return GetAttributeValue<bool?>("isregularactivity");
        }
        set {
            SetAttributeValue("isregularactivity", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si l'activité a été créée à partir d'une règle de workflow.</para>
    /// <para>Display Name: Est créé(e) par le workflow</para>
    /// </summary>
    [AttributeLogicalName("isworkflowcreated")]
    [DisplayName("Est créé(e) par le workflow")]
    public bool? IsWorkflowCreated {
        get {
            return GetAttributeValue<bool?>("isworkflowcreated");
        }
        set {
            SetAttributeValue("isworkflowcreated", value);
        }
    }
    
    /// <summary>
    /// <para>Contient l'horodatage de la dernière durée de suspension.</para>
    /// <para>Display Name: Dernière durée de suspension</para>
    /// </summary>
    [AttributeLogicalName("lastonholdtime")]
    [DisplayName("Dernière durée de suspension")]
    public DateTime? LastOnHoldTime {
        get {
            return GetAttributeValue<DateTime?>("lastonholdtime");
        }
        set {
            SetAttributeValue("lastonholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Quitté la messagerie vocale</para>
    /// <para>Display Name: Message vocal laissé</para>
    /// </summary>
    [AttributeLogicalName("leftvoicemail")]
    [DisplayName("Message vocal laissé")]
    public bool? LeftVoiceMail {
        get {
            return GetAttributeValue<bool?>("leftvoicemail");
        }
        set {
            SetAttributeValue("leftvoicemail", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a modifié l'activité pour la dernière fois.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
        set {
            SetAttributeValue("modifiedby", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la dernière modification de l'activité.</para>
    /// <para>Display Name: Dernière mise à jour</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Dernière mise à jour")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
        set {
            SetAttributeValue("modifiedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a modifié le pointeur d’activité pour la dernière fois.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
        set {
            SetAttributeValue("modifiedonbehalfby", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la durée, en minutes, de la suspension de l'enregistrement.</para>
    /// <para>Display Name: Durée de la suspension (minutes)</para>
    /// </summary>
    [AttributeLogicalName("onholdtime")]
    [DisplayName("Durée de la suspension (minutes)")]
    [Range(-2147483648, 2147483647)]
    public int? OnHoldTime {
        get {
            return GetAttributeValue<int?>("onholdtime");
        }
        set {
            SetAttributeValue("onholdtime", value);
        }
    }
    
    /// <summary>
    /// <para>Liste des participants facultatifs pour l'activité.</para>
    /// <para>Display Name: Participants facultatifs</para>
    /// </summary>
    [AttributeLogicalName("optionalattendees")]
    [DisplayName("Participants facultatifs")]
    public IEnumerable<ActivityParty> OptionalAttendees {
        get {
            return GetEntityCollection<ActivityParty>("optionalattendees");
        }
        set {
            SetEntityCollection("optionalattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Personne ayant organisé l'activité.</para>
    /// <para>Display Name: Organisateur</para>
    /// </summary>
    [AttributeLogicalName("organizer")]
    [DisplayName("Organisateur")]
    public IEnumerable<ActivityParty> Organizer {
        get {
            return GetEntityCollection<ActivityParty>("organizer");
        }
        set {
            SetEntityCollection("organizer", value);
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur ou de l’équipe propriétaire de l’activité.</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'activité.</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’équipe propriétaire de l’activité.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur propriétaire de l’activité.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Fournisseur externe auquel est associée l'activité.</para>
    /// <para>Display Name: Fournisseurs externes</para>
    /// </summary>
    [AttributeLogicalName("partners")]
    [DisplayName("Fournisseurs externes")]
    public IEnumerable<ActivityParty> Partners {
        get {
            return GetEntityCollection<ActivityParty>("partners");
        }
        set {
            SetEntityCollection("partners", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Postposer le traitement de l'activité à</para>
    /// </summary>
    [AttributeLogicalName("postponeactivityprocessinguntil")]
    [DisplayName("Postposer le traitement de l\'activité à")]
    public DateTime? PostponeActivityProcessingUntil {
        get {
            return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
        }
    }
    
    /// <summary>
    /// <para>Sujet associé à l'activité.</para>
    /// <para>Display Name: Sujet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Sujet")]
    [MaxLength(400)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Priorité de l'activité.</para>
    /// <para>Display Name: Priorité</para>
    /// </summary>
    [AttributeLogicalName("prioritycode")]
    [DisplayName("Priorité")]
    public nxt_Message_PriorityCode? PriorityCode {
        get {
            return GetOptionSetValue<nxt_Message_PriorityCode>("prioritycode");
        }
        set {
            SetOptionSetValue("prioritycode", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique du processus.</para>
    /// <para>Display Name: Processus</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    [DisplayName("Processus")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'objet auquel l'activité est associée.</para>
    /// <para>Display Name: Concernant</para>
    /// </summary>
    [AttributeLogicalName("regardingobjectid")]
    [DisplayName("Concernant")]
    public EntityReference RegardingObjectId {
        get {
            return GetAttributeValue<EntityReference>("regardingobjectid");
        }
        set {
            SetAttributeValue("regardingobjectid", value);
        }
    }
    
    /// <summary>
    /// <para>Liste des participants requis pour l'activité.</para>
    /// <para>Display Name: Participants obligatoires</para>
    /// </summary>
    [AttributeLogicalName("requiredattendees")]
    [DisplayName("Participants obligatoires")]
    public IEnumerable<ActivityParty> RequiredAttendees {
        get {
            return GetEntityCollection<ActivityParty>("requiredattendees");
        }
        set {
            SetEntityCollection("requiredattendees", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisateurs ou installation/équipement nécessaires pour l'activité.</para>
    /// <para>Display Name: Ressources</para>
    /// </summary>
    [AttributeLogicalName("resources")]
    [DisplayName("Ressources")]
    public IEnumerable<ActivityParty> Resources {
        get {
            return GetEntityCollection<ActivityParty>("resources");
        }
        set {
            SetEntityCollection("resources", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement d'incident.</para>
    /// <para>Display Name: Contrat SLA</para>
    /// </summary>
    [AttributeLogicalName("slaid")]
    [DisplayName("Contrat SLA")]
    public EntityReference SLAId {
        get {
            return GetAttributeValue<EntityReference>("slaid");
        }
        set {
            SetAttributeValue("slaid", value);
        }
    }
    
    /// <summary>
    /// <para>Dernier contrat SLA ayant été appliqué à cet incident. Ce champ est destiné à une utilisation interne uniquement.</para>
    /// <para>Display Name: Dernier contrat SLA appliqué</para>
    /// </summary>
    [AttributeLogicalName("slainvokedid")]
    [DisplayName("Dernier contrat SLA appliqué")]
    public EntityReference SLAInvokedId {
        get {
            return GetAttributeValue<EntityReference>("slainvokedid");
        }
    }
    
    /// <summary>
    /// <para>Durée planifiée de l'activité, en minutes.</para>
    /// <para>Display Name: Durée planifiée</para>
    /// </summary>
    [AttributeLogicalName("scheduleddurationminutes")]
    [DisplayName("Durée planifiée")]
    [Range(0, 2147483647)]
    public int? ScheduledDurationMinutes {
        get {
            return GetAttributeValue<int?>("scheduleddurationminutes");
        }
        set {
            SetAttributeValue("scheduleddurationminutes", value);
        }
    }
    
    /// <summary>
    /// <para>Heure de fin planifiée de l'activité.</para>
    /// <para>Display Name: Date d’échéance</para>
    /// </summary>
    [AttributeLogicalName("scheduledend")]
    [DisplayName("Date d’échéance")]
    public DateTime? ScheduledEnd {
        get {
            return GetAttributeValue<DateTime?>("scheduledend");
        }
        set {
            SetAttributeValue("scheduledend", value);
        }
    }
    
    /// <summary>
    /// <para>Heure de début planifiée de l'activité.</para>
    /// <para>Display Name: Date de début</para>
    /// </summary>
    [AttributeLogicalName("scheduledstart")]
    [DisplayName("Date de début")]
    public DateTime? ScheduledStart {
        get {
            return GetAttributeValue<DateTime?>("scheduledstart");
        }
        set {
            SetAttributeValue("scheduledstart", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la boîte aux lettres associée à l'expéditeur du message électronique.</para>
    /// <para>Display Name: Boîte aux lettres de l'expéditeur</para>
    /// </summary>
    [AttributeLogicalName("sendermailboxid")]
    [DisplayName("Boîte aux lettres de l\'expéditeur")]
    public EntityReference SenderMailboxId {
        get {
            return GetAttributeValue<EntityReference>("sendermailboxid");
        }
    }
    
    /// <summary>
    /// <para>Date et heure d'envoi de l'activité.</para>
    /// <para>Display Name: Date d'envoi</para>
    /// </summary>
    [AttributeLogicalName("senton")]
    [DisplayName("Date d\'envoi")]
    public DateTime? SentOn {
        get {
            return GetAttributeValue<DateTime?>("senton");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique spécifiant l’ID de série périodique d’une instance.</para>
    /// <para>Display Name: ID de la série</para>
    /// </summary>
    [AttributeLogicalName("seriesid")]
    [DisplayName("ID de la série")]
    public Guid? SeriesId {
        get {
            return GetAttributeValue<Guid?>("seriesid");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique d'un service associé.</para>
    /// <para>Display Name: Service</para>
    /// </summary>
    [AttributeLogicalName("serviceid")]
    [DisplayName("Service")]
    public EntityReference ServiceId {
        get {
            return GetAttributeValue<EntityReference>("serviceid");
        }
        set {
            SetAttributeValue("serviceid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche la date et l'heure de tri des activités.</para>
    /// <para>Display Name: Date de tri</para>
    /// </summary>
    [AttributeLogicalName("sortdate")]
    [DisplayName("Date de tri")]
    public DateTime? SortDate {
        get {
            return GetAttributeValue<DateTime?>("sortdate");
        }
        set {
            SetAttributeValue("sortdate", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la phase.</para>
    /// <para>Display Name: (Déconseillé) Phase du processus</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    [DisplayName("(Déconseillé) Phase du processus")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de l'activité.</para>
    /// <para>Display Name: Statut d'activité</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    [DisplayName("Statut d\'activité")]
    public nxt_MessageState? StateCode {
        get {
            return GetOptionSetValue<nxt_MessageState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Raison du statut de l'activité.</para>
    /// <para>Display Name: Statut</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    [DisplayName("Statut")]
    public nxt_Message_StatusCode? StatusCode {
        get {
            return GetOptionSetValue<nxt_Message_StatusCode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Sujet associé à l'activité.</para>
    /// <para>Display Name: Sujet</para>
    /// </summary>
    [AttributeLogicalName("subject")]
    [DisplayName("Sujet")]
    [MaxLength(400)]
    public string Subject {
        get {
            return GetAttributeValue<string>("subject");
        }
        set {
            SetAttributeValue("subject", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Personne qui reçoit l'activité.</para>
    /// <para>Display Name: À</para>
    /// </summary>
    [AttributeLogicalName("to")]
    [DisplayName("À")]
    public IEnumerable<ActivityParty> To {
        get {
            return GetEntityCollection<ActivityParty>("to");
        }
        set {
            SetEntityCollection("to", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la devise associée au pointeur d’activité.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: (Déconseillé) Chemin d’accès traversé</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    [DisplayName("(Déconseillé) Chemin d’accès traversé")]
    [MaxLength(1250)]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Code de fuseau horaire utilisé à la création de l’enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version de l’activité.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Display Name: msft_DataState</para>
    /// </summary>
    [AttributeLogicalName("msft_datastate")]
    [DisplayName("msft_DataState")]
    public msft_datastate? msft_DataState {
        get {
            return GetOptionSetValue<msft_datastate>("msft_datastate");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Canal</para>
    /// </summary>
    [AttributeLogicalName("nxt_channelcode")]
    [DisplayName("Canal")]
    public nxt_messagechannel? nxt_ChannelCode {
        get {
            return GetOptionSetValue<nxt_messagechannel>("nxt_channelcode");
        }
        set {
            SetOptionSetValue("nxt_channelcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Créé par (system)</para>
    /// </summary>
    [AttributeLogicalName("nxt_createdbysystemcode")]
    [DisplayName("Créé par (system)")]
    public nxt_systemcode? nxt_CreatedBySystemCode {
        get {
            return GetOptionSetValue<nxt_systemcode>("nxt_createdbysystemcode");
        }
        set {
            SetOptionSetValue("nxt_createdbysystemcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Historique</para>
    /// </summary>
    [AttributeLogicalName("nxt_historic")]
    [DisplayName("Historique")]
    [MaxLength(4000)]
    public string nxt_Historic {
        get {
            return GetAttributeValue<string>("nxt_historic");
        }
        set {
            SetAttributeValue("nxt_historic", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Traité</para>
    /// </summary>
    [AttributeLogicalName("nxt_isprocessed")]
    [DisplayName("Traité")]
    public bool? nxt_IsProcessed {
        get {
            return GetAttributeValue<bool?>("nxt_isprocessed");
        }
        set {
            SetAttributeValue("nxt_isprocessed", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Satisfaction client</para>
    /// </summary>
    [AttributeLogicalName("nxt_satisfactioncode")]
    [DisplayName("Satisfaction client")]
    public nxt_customersatisfaction? nxt_SatisfactionCode {
        get {
            return GetOptionSetValue<nxt_customersatisfaction>("nxt_satisfactioncode");
        }
        set {
            SetOptionSetValue("nxt_satisfactioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Message initiateur</para>
    /// </summary>
    [AttributeLogicalName("nxt_isinitiatingmessage")]
    [DisplayName("Message initiateur")]
    public bool? nxt_isInitiatingMessage {
        get {
            return GetAttributeValue<bool?>("nxt_isinitiatingmessage");
        }
        set {
            SetAttributeValue("nxt_isinitiatingmessage", value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("account_nxt_Messages")]
    public Account account_nxt_Messages {
        get {
            return GetRelatedEntity<Account>("account_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("account_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("contact_nxt_Messages")]
    public Contact contact_nxt_Messages {
        get {
            return GetRelatedEntity<Contact>("contact_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("contact_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("incident_nxt_Messages")]
    public Incident incident_nxt_Messages {
        get {
            return GetRelatedEntity<Incident>("incident_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("incident_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("invoice_nxt_Messages")]
    public Invoice invoice_nxt_Messages {
        get {
            return GetRelatedEntity<Invoice>("invoice_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("invoice_nxt_Messages", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_Message_activity_parties")]
    public IEnumerable<ActivityParty> nxt_Message_activity_parties {
        get {
            return GetRelatedEntities<ActivityParty>("nxt_Message_activity_parties", null);
        }
        set {
            SetRelatedEntities("nxt_Message_activity_parties", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_customerfolder_nxt_Messages")]
    public nxt_customerfolder nxt_customerfolder_nxt_Messages {
        get {
            return GetRelatedEntity<nxt_customerfolder>("nxt_customerfolder_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("nxt_customerfolder_nxt_Messages", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_message_QueueItems")]
    public IEnumerable<QueueItem> nxt_message_QueueItems {
        get {
            return GetRelatedEntities<QueueItem>("nxt_message_QueueItems", null);
        }
        set {
            SetRelatedEntities("nxt_message_QueueItems", null, value);
        }
    }
    
    [AttributeLogicalName("owningbusinessunit")]
    [RelationshipSchemaName("nxt_message_businessunit_owningbusinessunit")]
    public BusinessUnit nxt_message_businessunit_owningbusinessunit {
        get {
            return GetRelatedEntity<BusinessUnit>("nxt_message_businessunit_owningbusinessunit", null);
        }
        set {
            SetRelatedEntity("nxt_message_businessunit_owningbusinessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_message_connections1")]
    public IEnumerable<Connection> nxt_message_connections1 {
        get {
            return GetRelatedEntities<Connection>("nxt_message_connections1", null);
        }
        set {
            SetRelatedEntities("nxt_message_connections1", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_message_connections2")]
    public IEnumerable<Connection> nxt_message_connections2 {
        get {
            return GetRelatedEntities<Connection>("nxt_message_connections2", null);
        }
        set {
            SetRelatedEntities("nxt_message_connections2", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("nxt_message_systemuser_createdby")]
    public SystemUser nxt_message_systemuser_createdby {
        get {
            return GetRelatedEntity<SystemUser>("nxt_message_systemuser_createdby", null);
        }
        set {
            SetRelatedEntity("nxt_message_systemuser_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("nxt_message_systemuser_createdonbehalfby")]
    public SystemUser nxt_message_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("nxt_message_systemuser_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("nxt_message_systemuser_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("nxt_message_systemuser_modifiedby")]
    public SystemUser nxt_message_systemuser_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("nxt_message_systemuser_modifiedby", null);
        }
        set {
            SetRelatedEntity("nxt_message_systemuser_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("nxt_message_systemuser_modifiedonbehalfby")]
    public SystemUser nxt_message_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("nxt_message_systemuser_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("nxt_message_systemuser_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("nxt_message_systemuser_owninguser")]
    public SystemUser nxt_message_systemuser_owninguser {
        get {
            return GetRelatedEntity<SystemUser>("nxt_message_systemuser_owninguser", null);
        }
        set {
            SetRelatedEntity("nxt_message_systemuser_owninguser", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("nxt_message_team_owningteam")]
    public Team nxt_message_team_owningteam {
        get {
            return GetRelatedEntity<Team>("nxt_message_team_owningteam", null);
        }
        set {
            SetRelatedEntity("nxt_message_team_owningteam", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_document_MessageId_nxt_message")]
    public IEnumerable<nxt_Document> nxt_nxt_document_MessageId_nxt_message {
        get {
            return GetRelatedEntities<nxt_Document>("nxt_nxt_document_MessageId_nxt_message", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_document_MessageId_nxt_message", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_program_nxt_Messages")]
    public nxt_Program nxt_program_nxt_Messages {
        get {
            return GetRelatedEntity<nxt_Program>("nxt_program_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("nxt_program_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierintervention_nxt_Messages")]
    public nxt_SupplierIntervention nxt_supplierintervention_nxt_Messages {
        get {
            return GetRelatedEntity<nxt_SupplierIntervention>("nxt_supplierintervention_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("nxt_supplierintervention_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("nxt_supplierquote_nxt_Messages")]
    public nxt_SupplierQuote nxt_supplierquote_nxt_Messages {
        get {
            return GetRelatedEntity<nxt_SupplierQuote>("nxt_supplierquote_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("nxt_supplierquote_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("quote_nxt_Messages")]
    public Quote quote_nxt_Messages {
        get {
            return GetRelatedEntity<Quote>("quote_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("quote_nxt_Messages", null, value);
        }
    }
    
    [AttributeLogicalName("regardingobjectid")]
    [RelationshipSchemaName("salesorder_nxt_Messages")]
    public SalesOrder salesorder_nxt_Messages {
        get {
            return GetRelatedEntity<SalesOrder>("salesorder_nxt_Messages", null);
        }
        set {
            SetRelatedEntity("salesorder_nxt_Messages", null, value);
        }
    }
    
    public static nxt_Message Retrieve(IOrganizationService service, Guid id, params Expression<Func<nxt_Message,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum nxt_MessageState {
    
    [EnumMember()]
    [OptionSetMetadata("Ouvert", Index=0, Lcid=1036)]
    Ouvert = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Terminé", Index=1, Lcid=1036)]
    Terminé = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé", Index=2, Lcid=1036)]
    Annulé = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Planifié", Index=3, Lcid=1036)]
    Planifié = 3,
}

[DataContract()]
public enum nxt_Message_InstanceTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Non périodique", Index=0, Lcid=1036)]
    Nonpériodique = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Enregistrement principal périodique", Index=1, Lcid=1036)]
    Enregistrementprincipalpériodique = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Instance périodique", Index=2, Lcid=1036)]
    Instancepériodique = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Exception périodique", Index=3, Lcid=1036)]
    Exceptionpériodique = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Exception future périodique", Index=4, Lcid=1036)]
    Exceptionfuturepériodique = 4,
}

[DataContract()]
public enum nxt_Message_PriorityCode {
    
    [EnumMember()]
    [OptionSetMetadata("Faible", Index=0, Lcid=1036)]
    Faible = 0,
    
    [EnumMember()]
    [OptionSetMetadata("Normale", Index=1, Lcid=1036)]
    Normale = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Haute", Index=2, Lcid=1036)]
    Haute = 2,
}

[DataContract()]
public enum nxt_Message_StatusCode {
    
    [EnumMember()]
    [OptionSetMetadata("Brouillon", Index=0, Lcid=1036, Description="")]
    Brouillon = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Envoi en cours", Index=1, Lcid=1036, Description="")]
    Envoiencours = 2,
    
    [EnumMember()]
    [OptionSetMetadata("Envoyé", Index=2, Lcid=1036, Description="")]
    Envoyé = 3,
    
    [EnumMember()]
    [OptionSetMetadata("Reçu", Index=5, Lcid=1036, Description="")]
    Reçu = 4,
    
    [EnumMember()]
    [OptionSetMetadata("Annulé", Index=3, Lcid=1036, Description="")]
    Annulé = 5,
    
    [EnumMember()]
    [OptionSetMetadata("Planifié", Index=4, Lcid=1036, Description="")]
    Planifié = 6,
}
