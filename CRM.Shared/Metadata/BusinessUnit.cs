//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Entreprise, division ou service dans la base de données Microsoft Dynamics 365.</para>
/// <para>Display Name: Division</para>
/// </summary>
[EntityLogicalName("businessunit")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class BusinessUnit : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "businessunit";
    
    public const int EntityTypeCode = 10;
    
    public BusinessUnit() : 
            base(EntityLogicalName) {
    }
    
    public BusinessUnit(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("name");
        }
    }
    
    [AttributeLogicalName("businessunitid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division.</para>
    /// <para>Display Name: Division</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    [DisplayName("Division")]
    public Guid? BusinessUnitId {
        get {
            return GetAttributeValue<Guid?>("businessunitid");
        }
        set {
            SetId("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    [DisplayName("Adresse 1 : ID")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type de l'adresse 1, tel que l'adresse de facturation, l'adresse d'expédition ou l'adresse principale.</para>
    /// <para>Display Name: Adresse 1 : Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    [DisplayName("Adresse 1 : Type d\'adresse")]
    public BusinessUnit_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<BusinessUnit_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de la ville de l'adresse 1.</para>
    /// <para>Display Name: Ville de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    [DisplayName("Ville de facturation")]
    [MaxLength(80)]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Nom du pays ou de la région de l'adresse 1.</para>
    /// <para>Display Name: Pays/région de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    [DisplayName("Pays/région de facturation")]
    [MaxLength(80)]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de la commune de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Commune</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    [DisplayName("Adresse 1 : Commune")]
    [MaxLength(50)]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de télécopie de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    [DisplayName("Adresse 1 : Télécopie")]
    [MaxLength(50)]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    [DisplayName("Adresse 1 : Latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Première ligne de l'adresse 1.</para>
    /// <para>Display Name: Rue 1 de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    [DisplayName("Rue 1 de facturation")]
    [MaxLength(250)]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Deuxième ligne de l'adresse 1.</para>
    /// <para>Display Name: Rue 2 de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    [DisplayName("Rue 2 de facturation")]
    [MaxLength(250)]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Troisième ligne de l'adresse 1.</para>
    /// <para>Display Name: Rue 3 de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    [DisplayName("Rue 3 de facturation")]
    [MaxLength(250)]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    [DisplayName("Adresse 1 : Longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Nom à entrer pour l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Nom</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    [DisplayName("Adresse 1 : Nom")]
    [MaxLength(100)]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de boîte postale de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    [DisplayName("Adresse 1 : Boîte postale")]
    [MaxLength(20)]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Code postal de l'adresse 1.</para>
    /// <para>Display Name: Code postal de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    [DisplayName("Code postal de facturation")]
    [MaxLength(20)]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Mode de livraison de l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    [DisplayName("Adresse 1 : Mode de livraison")]
    public BusinessUnit_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<BusinessUnit_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Département ou province de l'adresse 1.</para>
    /// <para>Display Name: Département/province de facturation</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    [DisplayName("Département/province de facturation")]
    [MaxLength(50)]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Premier numéro de téléphone associé à l'adresse 1.</para>
    /// <para>Display Name: Téléphone principal</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    [DisplayName("Téléphone principal")]
    [MaxLength(50)]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Deuxième numéro de téléphone associé à l'adresse 1.</para>
    /// <para>Display Name: Autre téléphone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    [DisplayName("Autre téléphone")]
    [MaxLength(50)]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Troisième numéro de téléphone associé à l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    [DisplayName("Adresse 1 : Téléphone 3")]
    [MaxLength(50)]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Zone UPS (United Parcel Service) pour l'adresse 1.</para>
    /// <para>Display Name: Adresse 1 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    [DisplayName("Adresse 1 : Zone UPS")]
    [MaxLength(4)]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Décalage UTC de l'adresse 1. Il s'agit de la différence entre l'heure locale et le temps universel coordonné.</para>
    /// <para>Display Name: Adresse 1 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    [DisplayName("Adresse 1 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    [DisplayName("Adresse 2 : ID")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type de l'adresse 2, tel que l'adresse de facturation, l'adresse d'expédition ou l'adresse principale.</para>
    /// <para>Display Name: Adresse 2 : Type d'adresse</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    [DisplayName("Adresse 2 : Type d\'adresse")]
    public BusinessUnit_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<BusinessUnit_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de la ville de l'adresse 2.</para>
    /// <para>Display Name: Ville d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    [DisplayName("Ville d\'expédition")]
    [MaxLength(80)]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Nom du pays ou de la région de l'adresse 2.</para>
    /// <para>Display Name: Pays/région d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    [DisplayName("Pays/région d\'expédition")]
    [MaxLength(80)]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de la commune de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Commune</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    [DisplayName("Adresse 2 : Commune")]
    [MaxLength(50)]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de télécopie de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Télécopie</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    [DisplayName("Adresse 2 : Télécopie")]
    [MaxLength(50)]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    [DisplayName("Adresse 2 : Latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>Première ligne de l'adresse 2.</para>
    /// <para>Display Name: Rue 1 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    [DisplayName("Rue 1 d\'expédition")]
    [MaxLength(250)]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Deuxième ligne de l'adresse 2.</para>
    /// <para>Display Name: Rue 2 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    [DisplayName("Rue 2 d\'expédition")]
    [MaxLength(250)]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Troisième ligne de l'adresse 2.</para>
    /// <para>Display Name: Rue 3 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    [DisplayName("Rue 3 d\'expédition")]
    [MaxLength(250)]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    [DisplayName("Adresse 2 : Longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Nom à entrer pour l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Nom</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    [DisplayName("Adresse 2 : Nom")]
    [MaxLength(100)]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de boîte postale de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Boîte postale</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    [DisplayName("Adresse 2 : Boîte postale")]
    [MaxLength(20)]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>Code postal de l'adresse 2.</para>
    /// <para>Display Name: Code postal d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    [DisplayName("Code postal d\'expédition")]
    [MaxLength(20)]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Mode de livraison de l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Mode de livraison</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    [DisplayName("Adresse 2 : Mode de livraison")]
    public BusinessUnit_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<BusinessUnit_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>Département ou province de l'adresse 2.</para>
    /// <para>Display Name: Département/province d'expédition</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    [DisplayName("Département/province d\'expédition")]
    [MaxLength(50)]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Premier numéro de téléphone associé à l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    [DisplayName("Adresse 2 : Téléphone 1")]
    [MaxLength(50)]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Deuxième numéro de téléphone associé à l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    [DisplayName("Adresse 2 : Téléphone 2")]
    [MaxLength(50)]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Troisième numéro de téléphone associé à l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Téléphone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    [DisplayName("Adresse 2 : Téléphone 3")]
    [MaxLength(50)]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>Zone UPS (United Parcel Service) pour l'adresse 2.</para>
    /// <para>Display Name: Adresse 2 : Zone UPS</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    [DisplayName("Adresse 2 : Zone UPS")]
    [MaxLength(4)]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>Décalage UTC de l'adresse 2. Il s'agit de la différence entre l'heure locale et le temps universel coordonné.</para>
    /// <para>Display Name: Adresse 2 : Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    [DisplayName("Adresse 2 : Décalage UTC")]
    [Range(-1500, 1500)]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Calendrier fiscal associé à la division.</para>
    /// <para>Display Name: Calendrier</para>
    /// </summary>
    [AttributeLogicalName("calendarid")]
    [DisplayName("Calendrier")]
    public EntityReference CalendarId {
        get {
            return GetAttributeValue<EntityReference>("calendarid");
        }
        set {
            SetAttributeValue("calendarid", value);
        }
    }
    
    /// <summary>
    /// <para>Nom du centre de coûts de la division.</para>
    /// <para>Display Name: Centre de coûts</para>
    /// </summary>
    [AttributeLogicalName("costcenter")]
    [DisplayName("Centre de coûts")]
    [MaxLength(100)]
    public string CostCenter {
        get {
            return GetAttributeValue<string>("costcenter");
        }
        set {
            SetAttributeValue("costcenter", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a créé la division.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la création de la division.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a créé la division.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Limite de crédit de la division.</para>
    /// <para>Display Name: Limite de crédit</para>
    /// </summary>
    [AttributeLogicalName("creditlimit")]
    [DisplayName("Limite de crédit")]
    public double? CreditLimit {
        get {
            return GetAttributeValue<double?>("creditlimit");
        }
        set {
            SetAttributeValue("creditlimit", value);
        }
    }
    
    /// <summary>
    /// <para>Description de la division.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Raison de la désactivation de la division.</para>
    /// <para>Display Name: Raison du statut Désactivé</para>
    /// </summary>
    [AttributeLogicalName("disabledreason")]
    [DisplayName("Raison du statut Désactivé")]
    [MaxLength(500)]
    public string DisabledReason {
        get {
            return GetAttributeValue<string>("disabledreason");
        }
    }
    
    /// <summary>
    /// <para>Nom de la division à laquelle la division appartient.</para>
    /// <para>Display Name: Division</para>
    /// </summary>
    [AttributeLogicalName("divisionname")]
    [DisplayName("Division")]
    [MaxLength(100)]
    public string DivisionName {
        get {
            return GetAttributeValue<string>("divisionname");
        }
        set {
            SetAttributeValue("divisionname", value);
        }
    }
    
    /// <summary>
    /// <para>Adresse de messagerie de la division.</para>
    /// <para>Display Name: Courrier électronique</para>
    /// </summary>
    [AttributeLogicalName("emailaddress")]
    [DisplayName("Courrier électronique")]
    [MaxLength(100)]
    public string EMailAddress {
        get {
            return GetAttributeValue<string>("emailaddress");
        }
        set {
            SetAttributeValue("emailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Taux de change de la devise associée à la division par rapport à la devise de base.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Autre nom sous lequel la division peut être archivée.</para>
    /// <para>Display Name: Classer sous le nom</para>
    /// </summary>
    [AttributeLogicalName("fileasname")]
    [DisplayName("Classer sous le nom")]
    [MaxLength(100)]
    public string FileAsName {
        get {
            return GetAttributeValue<string>("fileasname");
        }
        set {
            SetAttributeValue("fileasname", value);
        }
    }
    
    /// <summary>
    /// <para>URL du site FTP de la division.</para>
    /// <para>Display Name: Site FTP</para>
    /// </summary>
    [AttributeLogicalName("ftpsiteurl")]
    [DisplayName("Site FTP")]
    [MaxLength(200)]
    public string FtpSiteUrl {
        get {
            return GetAttributeValue<string>("ftpsiteurl");
        }
        set {
            SetAttributeValue("ftpsiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'importation ou de la migration de données ayant généré cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d'importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d\'importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Masque d'héritage de la division.</para>
    /// <para>Display Name: Masque d'héritage</para>
    /// </summary>
    [AttributeLogicalName("inheritancemask")]
    [DisplayName("Masque d\'héritage")]
    [Range(0, 1000000000)]
    public int? InheritanceMask {
        get {
            return GetAttributeValue<int?>("inheritancemask");
        }
        set {
            SetAttributeValue("inheritancemask", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si la division est activée ou désactivée.</para>
    /// <para>Display Name: Est désactivé(e)</para>
    /// </summary>
    [AttributeLogicalName("isdisabled")]
    [DisplayName("Est désactivé(e)")]
    public bool? IsDisabled {
        get {
            return GetAttributeValue<bool?>("isdisabled");
        }
        set {
            SetAttributeValue("isdisabled", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur qui a modifié la division pour la dernière fois.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la dernière modification de la division.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l’utilisateur délégué qui a modifié la division pour la dernière fois.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Nom de la division.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(160)]
    public string Name {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'organisation associée à la division.</para>
    /// <para>Display Name: Organisation</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    [DisplayName("Organisation")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de la migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division mère.</para>
    /// <para>Display Name: Division mère</para>
    /// </summary>
    [AttributeLogicalName("parentbusinessunitid")]
    [DisplayName("Division mère")]
    public EntityReference ParentBusinessUnitId {
        get {
            return GetAttributeValue<EntityReference>("parentbusinessunitid");
        }
        set {
            SetAttributeValue("parentbusinessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Image ou diagramme de la division.</para>
    /// <para>Display Name: Image</para>
    /// </summary>
    [AttributeLogicalName("picture")]
    [DisplayName("Image")]
    public string Picture {
        get {
            return GetAttributeValue<string>("picture");
        }
        set {
            SetAttributeValue("picture", value);
        }
    }
    
    /// <summary>
    /// <para>Nom de la division.</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("name")]
    [DisplayName("Nom")]
    [MaxLength(160)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("name");
        }
        set {
            SetAttributeValue("name", value);
        }
    }
    
    /// <summary>
    /// <para>Place boursière dans laquelle l'entreprise est cotée.</para>
    /// <para>Display Name: Place boursière</para>
    /// </summary>
    [AttributeLogicalName("stockexchange")]
    [DisplayName("Place boursière")]
    [MaxLength(20)]
    public string StockExchange {
        get {
            return GetAttributeValue<string>("stockexchange");
        }
        set {
            SetAttributeValue("stockexchange", value);
        }
    }
    
    /// <summary>
    /// <para>Symbole boursier de la division.</para>
    /// <para>Display Name: Symbole de l’action</para>
    /// </summary>
    [AttributeLogicalName("tickersymbol")]
    [DisplayName("Symbole de l’action")]
    [MaxLength(10)]
    public string TickerSymbol {
        get {
            return GetAttributeValue<string>("tickersymbol");
        }
        set {
            SetAttributeValue("tickersymbol", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la devise associée à la division.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Décalage UTC de la division. Il s'agit de la différence entre l'heure locale et le temps universel coordonné.</para>
    /// <para>Display Name: Décalage UTC</para>
    /// </summary>
    [AttributeLogicalName("utcoffset")]
    [DisplayName("Décalage UTC")]
    [Range(-1500, 1500)]
    public int? UTCOffset {
        get {
            return GetAttributeValue<int?>("utcoffset");
        }
        set {
            SetAttributeValue("utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version de la division.</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>URL du site Web de la division.</para>
    /// <para>Display Name: Site Web</para>
    /// </summary>
    [AttributeLogicalName("websiteurl")]
    [DisplayName("Site Web")]
    [MaxLength(200)]
    public string WebSiteUrl {
        get {
            return GetAttributeValue<string>("websiteurl");
        }
        set {
            SetAttributeValue("websiteurl", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si des règles de processus de vente ou de workflow ont été suspendues.</para>
    /// <para>Display Name: Workflow interrompu</para>
    /// </summary>
    [AttributeLogicalName("workflowsuspended")]
    [DisplayName("Workflow interrompu")]
    public bool? WorkflowSuspended {
        get {
            return GetAttributeValue<bool?>("workflowsuspended");
        }
        set {
            SetAttributeValue("workflowsuspended", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Bureau</para>
    /// </summary>
    [AttributeLogicalName("nxt_agencycode")]
    [DisplayName("Code Bureau")]
    [MaxLength(100)]
    public string nxt_AgencyCode {
        get {
            return GetAttributeValue<string>("nxt_agencycode");
        }
        set {
            SetAttributeValue("nxt_agencycode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Capital</para>
    /// </summary>
    [AttributeLogicalName("nxt_capital")]
    [DisplayName("Capital")]
    public decimal? nxt_Capital {
        get {
            return GetMoneyValue("nxt_capital");
        }
        set {
            SetMoneyValue("nxt_capital", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Forme juridique</para>
    /// </summary>
    [AttributeLogicalName("nxt_legalform")]
    [DisplayName("Forme juridique")]
    [MaxLength(100)]
    public string nxt_LegalForm {
        get {
            return GetAttributeValue<string>("nxt_legalform");
        }
        set {
            SetAttributeValue("nxt_legalform", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Niveau</para>
    /// </summary>
    [AttributeLogicalName("nxt_levelcode")]
    [DisplayName("Niveau")]
    public nxt_businessunitlevel? nxt_LevelCode {
        get {
            return GetOptionSetValue<nxt_businessunitlevel>("nxt_levelcode");
        }
        set {
            SetOptionSetValue("nxt_levelcode", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: RCS</para>
    /// </summary>
    [AttributeLogicalName("nxt_rcs")]
    [DisplayName("RCS")]
    [MaxLength(100)]
    public string nxt_Rcs {
        get {
            return GetAttributeValue<string>("nxt_rcs");
        }
        set {
            SetAttributeValue("nxt_rcs", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: SIRET</para>
    /// </summary>
    [AttributeLogicalName("nxt_siret")]
    [DisplayName("SIRET")]
    [MaxLength(100)]
    public string nxt_Siret {
        get {
            return GetAttributeValue<string>("nxt_siret");
        }
        set {
            SetAttributeValue("nxt_siret", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Code Site</para>
    /// </summary>
    [AttributeLogicalName("nxt_sitecode")]
    [DisplayName("Code Site")]
    [MaxLength(100)]
    public string nxt_SiteCode {
        get {
            return GetAttributeValue<string>("nxt_sitecode");
        }
        set {
            SetAttributeValue("nxt_sitecode", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Capital dans la devise de base.</para>
    /// <para>Display Name: Capital (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_capital_base")]
    [DisplayName("Capital (de base)")]
    public decimal? nxt_capital_Base {
        get {
            return GetMoneyValue("nxt_capital_base");
        }
    }
    
    [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referenced)]
    public IEnumerable<BusinessUnit> Referencedbusiness_unit_parent_business_unit {
        get {
            return GetRelatedEntities<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("business_unit_parent_business_unit", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentbusinessunitid")]
    [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referencing)]
    public BusinessUnit Referencingbusiness_unit_parent_business_unit {
        get {
            return GetRelatedEntity<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("business_unit_parent_business_unit", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_accounts")]
    public IEnumerable<Account> business_unit_accounts {
        get {
            return GetRelatedEntities<Account>("business_unit_accounts", null);
        }
        set {
            SetRelatedEntities("business_unit_accounts", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_connections")]
    public IEnumerable<Connection> business_unit_connections {
        get {
            return GetRelatedEntities<Connection>("business_unit_connections", null);
        }
        set {
            SetRelatedEntities("business_unit_connections", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_contacts")]
    public IEnumerable<Contact> business_unit_contacts {
        get {
            return GetRelatedEntities<Contact>("business_unit_contacts", null);
        }
        set {
            SetRelatedEntities("business_unit_contacts", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_email_activities")]
    public IEnumerable<Email> business_unit_email_activities {
        get {
            return GetRelatedEntities<Email>("business_unit_email_activities", null);
        }
        set {
            SetRelatedEntities("business_unit_email_activities", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_environmentvariabledefinition")]
    public IEnumerable<EnvironmentVariableDefinition> business_unit_environmentvariabledefinition {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("business_unit_environmentvariabledefinition", null);
        }
        set {
            SetRelatedEntities("business_unit_environmentvariabledefinition", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_environmentvariablevalue")]
    public IEnumerable<EnvironmentVariableValue> business_unit_environmentvariablevalue {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("business_unit_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntities("business_unit_environmentvariablevalue", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_incidents")]
    public IEnumerable<Incident> business_unit_incidents {
        get {
            return GetRelatedEntities<Incident>("business_unit_incidents", null);
        }
        set {
            SetRelatedEntities("business_unit_incidents", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_invoices")]
    public IEnumerable<Invoice> business_unit_invoices {
        get {
            return GetRelatedEntities<Invoice>("business_unit_invoices", null);
        }
        set {
            SetRelatedEntities("business_unit_invoices", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_applicationsmapping")]
    public IEnumerable<nxt_ApplicationsMapping> business_unit_nxt_applicationsmapping {
        get {
            return GetRelatedEntities<nxt_ApplicationsMapping>("business_unit_nxt_applicationsmapping", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_applicationsmapping", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_commercialphase")]
    public IEnumerable<nxt_CommercialPhase> business_unit_nxt_commercialphase {
        get {
            return GetRelatedEntities<nxt_CommercialPhase>("business_unit_nxt_commercialphase", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_commercialphase", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_contract")]
    public IEnumerable<nxt_Contract> business_unit_nxt_contract {
        get {
            return GetRelatedEntities<nxt_Contract>("business_unit_nxt_contract", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_contract", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_contractingrole")]
    public IEnumerable<nxt_ContractingRole> business_unit_nxt_contractingrole {
        get {
            return GetRelatedEntities<nxt_ContractingRole>("business_unit_nxt_contractingrole", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_contractingrole", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_contributor")]
    public IEnumerable<nxt_Contributor> business_unit_nxt_contributor {
        get {
            return GetRelatedEntities<nxt_Contributor>("business_unit_nxt_contributor", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_contributor", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_customerfolder")]
    public IEnumerable<nxt_customerfolder> business_unit_nxt_customerfolder {
        get {
            return GetRelatedEntities<nxt_customerfolder>("business_unit_nxt_customerfolder", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_customerfolder", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_customlog")]
    public IEnumerable<nxt_CustomLog> business_unit_nxt_customlog {
        get {
            return GetRelatedEntities<nxt_CustomLog>("business_unit_nxt_customlog", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_customlog", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_document")]
    public IEnumerable<nxt_Document> business_unit_nxt_document {
        get {
            return GetRelatedEntities<nxt_Document>("business_unit_nxt_document", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_document", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_environmentparameter")]
    public IEnumerable<nxt_EnvironmentParameter> business_unit_nxt_environmentparameter {
        get {
            return GetRelatedEntities<nxt_EnvironmentParameter>("business_unit_nxt_environmentparameter", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_environmentparameter", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_housingcomplex")]
    public IEnumerable<nxt_HousingComplex> business_unit_nxt_housingcomplex {
        get {
            return GetRelatedEntities<nxt_HousingComplex>("business_unit_nxt_housingcomplex", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_housingcomplex", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_loan")]
    public IEnumerable<nxt_Loan> business_unit_nxt_loan {
        get {
            return GetRelatedEntities<nxt_Loan>("business_unit_nxt_loan", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_loan", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_lot")]
    public IEnumerable<nxt_Lot> business_unit_nxt_lot {
        get {
            return GetRelatedEntities<nxt_Lot>("business_unit_nxt_lot", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_lot", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_managementactor")]
    public IEnumerable<nxt_ManagementActor> business_unit_nxt_managementactor {
        get {
            return GetRelatedEntities<nxt_ManagementActor>("business_unit_nxt_managementactor", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_managementactor", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_personaldata")]
    public IEnumerable<nxt_PersonalData> business_unit_nxt_personaldata {
        get {
            return GetRelatedEntities<nxt_PersonalData>("business_unit_nxt_personaldata", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_personaldata", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_program")]
    public IEnumerable<nxt_Program> business_unit_nxt_program {
        get {
            return GetRelatedEntities<nxt_Program>("business_unit_nxt_program", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_program", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_routingrule")]
    public IEnumerable<nxt_RoutingRule> business_unit_nxt_routingrule {
        get {
            return GetRelatedEntities<nxt_RoutingRule>("business_unit_nxt_routingrule", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_routingrule", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_slacustomerfolder")]
    public IEnumerable<nxt_SLACustomerFolder> business_unit_nxt_slacustomerfolder {
        get {
            return GetRelatedEntities<nxt_SLACustomerFolder>("business_unit_nxt_slacustomerfolder", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_slacustomerfolder", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_subscription")]
    public IEnumerable<nxt_Subscription> business_unit_nxt_subscription {
        get {
            return GetRelatedEntities<nxt_Subscription>("business_unit_nxt_subscription", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_subscription", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_subtheme")]
    public IEnumerable<nxt_SubTheme> business_unit_nxt_subtheme {
        get {
            return GetRelatedEntities<nxt_SubTheme>("business_unit_nxt_subtheme", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_subtheme", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_supplierintervention")]
    public IEnumerable<nxt_SupplierIntervention> business_unit_nxt_supplierintervention {
        get {
            return GetRelatedEntities<nxt_SupplierIntervention>("business_unit_nxt_supplierintervention", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_supplierintervention", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_supplierquote")]
    public IEnumerable<nxt_SupplierQuote> business_unit_nxt_supplierquote {
        get {
            return GetRelatedEntities<nxt_SupplierQuote>("business_unit_nxt_supplierquote", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_supplierquote", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_theme")]
    public IEnumerable<nxt_Theme> business_unit_nxt_theme {
        get {
            return GetRelatedEntities<nxt_Theme>("business_unit_nxt_theme", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_theme", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_tradediscountcategory")]
    public IEnumerable<nxt_TradeDiscountCategory> business_unit_nxt_tradediscountcategory {
        get {
            return GetRelatedEntities<nxt_TradeDiscountCategory>("business_unit_nxt_tradediscountcategory", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_tradediscountcategory", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_tradediscounttype")]
    public IEnumerable<nxt_TradeDiscountType> business_unit_nxt_tradediscounttype {
        get {
            return GetRelatedEntities<nxt_TradeDiscountType>("business_unit_nxt_tradediscounttype", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_tradediscounttype", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_nxt_vat")]
    public IEnumerable<nxt_Vat> business_unit_nxt_vat {
        get {
            return GetRelatedEntities<nxt_Vat>("business_unit_nxt_vat", null);
        }
        set {
            SetRelatedEntities("business_unit_nxt_vat", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_orders")]
    public IEnumerable<SalesOrder> business_unit_orders {
        get {
            return GetRelatedEntities<SalesOrder>("business_unit_orders", null);
        }
        set {
            SetRelatedEntities("business_unit_orders", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_phone_call_activities")]
    public IEnumerable<PhoneCall> business_unit_phone_call_activities {
        get {
            return GetRelatedEntities<PhoneCall>("business_unit_phone_call_activities", null);
        }
        set {
            SetRelatedEntities("business_unit_phone_call_activities", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_queues")]
    public IEnumerable<Queue> business_unit_queues {
        get {
            return GetRelatedEntities<Queue>("business_unit_queues", null);
        }
        set {
            SetRelatedEntities("business_unit_queues", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_queues2")]
    public IEnumerable<Queue> business_unit_queues2 {
        get {
            return GetRelatedEntities<Queue>("business_unit_queues2", null);
        }
        set {
            SetRelatedEntities("business_unit_queues2", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_quotes")]
    public IEnumerable<Quote> business_unit_quotes {
        get {
            return GetRelatedEntities<Quote>("business_unit_quotes", null);
        }
        set {
            SetRelatedEntities("business_unit_quotes", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_system_users")]
    public IEnumerable<SystemUser> business_unit_system_users {
        get {
            return GetRelatedEntities<SystemUser>("business_unit_system_users", null);
        }
        set {
            SetRelatedEntities("business_unit_system_users", null, value);
        }
    }
    
    [RelationshipSchemaName("business_unit_teams")]
    public IEnumerable<Team> business_unit_teams {
        get {
            return GetRelatedEntities<Team>("business_unit_teams", null);
        }
        set {
            SetRelatedEntities("business_unit_teams", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
    public SystemUser lk_businessunit_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_businessunit_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_businessunit_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
    public SystemUser lk_businessunit_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_businessunit_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_businessunit_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_businessunitbase_createdby")]
    public SystemUser lk_businessunitbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_businessunitbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_businessunitbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
    public SystemUser lk_businessunitbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_businessunitbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_businessunitbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_AgencyId_businessunit")]
    public IEnumerable<Incident> nxt_incident_AgencyId_businessunit {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_AgencyId_businessunit", null);
        }
        set {
            SetRelatedEntities("nxt_incident_AgencyId_businessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_incident_SiteId_businessunit")]
    public IEnumerable<Incident> nxt_incident_SiteId_businessunit {
        get {
            return GetRelatedEntities<Incident>("nxt_incident_SiteId_businessunit", null);
        }
        set {
            SetRelatedEntities("nxt_incident_SiteId_businessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_message_businessunit_owningbusinessunit")]
    public IEnumerable<nxt_Message> nxt_message_businessunit_owningbusinessunit {
        get {
            return GetRelatedEntities<nxt_Message>("nxt_message_businessunit_owningbusinessunit", null);
        }
        set {
            SetRelatedEntities("nxt_message_businessunit_owningbusinessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_contract_SiteId_businessunit")]
    public IEnumerable<nxt_Contract> nxt_nxt_contract_SiteId_businessunit {
        get {
            return GetRelatedEntities<nxt_Contract>("nxt_nxt_contract_SiteId_businessunit", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_contract_SiteId_businessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_program_AgencyId_businessunit")]
    public IEnumerable<nxt_Program> nxt_nxt_program_AgencyId_businessunit {
        get {
            return GetRelatedEntities<nxt_Program>("nxt_nxt_program_AgencyId_businessunit", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_program_AgencyId_businessunit", null, value);
        }
    }
    
    [RelationshipSchemaName("nxt_nxt_program_SubsidiaryCompanyId_businessu")]
    public IEnumerable<nxt_Program> nxt_nxt_program_SubsidiaryCompanyId_businessu {
        get {
            return GetRelatedEntities<nxt_Program>("nxt_nxt_program_SubsidiaryCompanyId_businessu", null);
        }
        set {
            SetRelatedEntities("nxt_nxt_program_SubsidiaryCompanyId_businessu", null, value);
        }
    }
    
    public static BusinessUnit Retrieve(IOrganizationService service, Guid id, params Expression<Func<BusinessUnit,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
    
    /// <summary>
    /// <para>Retrieves the record using the alternate key called 'AlternateKeyCode'</para>
    /// </summary>
    public static BusinessUnit Retrieve_nxt_alternatekeycode(IOrganizationService service, string nxt_SiteCode, params Expression<Func<BusinessUnit,object>>[] attrs) {
        KeyAttributeCollection keys = new KeyAttributeCollection();
        keys.Add("nxt_sitecode", nxt_SiteCode);
        return Retrieve_AltKey(service, keys, attrs);
    }
    
    /// <summary>
    /// <para>Set values for the alternate key called 'AlternateKeyCode'</para>
    /// </summary>
    public void AltKey_nxt_alternatekeycode(string nxt_SiteCode) {
        KeyAttributes.Clear();
        KeyAttributes.Add("nxt_sitecode", nxt_SiteCode);
    }
}

[DataContract()]
public enum BusinessUnit_Address1_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum BusinessUnit_Address1_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum BusinessUnit_Address2_AddressTypeCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}

[DataContract()]
public enum BusinessUnit_Address2_ShippingMethodCode {
    
    [EnumMember()]
    [OptionSetMetadata("Valeur par défaut", Index=0, Lcid=1036)]
    Valeurpardéfaut = 1,
}
