//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;




/// <summary>
/// <para>Ligne d'une facture qui contient des informations de facturation détaillées sur un produit.</para>
/// <para>Display Name: Produit de la facture</para>
/// </summary>
[EntityLogicalName("invoicedetail")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class InvoiceDetail : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "invoicedetail";
    
    public const int EntityTypeCode = 1091;
    
    public InvoiceDetail() : 
            base(EntityLogicalName) {
    }
    
    public InvoiceDetail(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("invoicedetailname");
        }
    }
    
    [AttributeLogicalName("invoicedetailid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("invoicedetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la ligne de produit de la facture.</para>
    /// <para>Display Name: Produit de la facture</para>
    /// </summary>
    [AttributeLogicalName("invoicedetailid")]
    [DisplayName("Produit de la facture")]
    public Guid? InvoiceDetailId {
        get {
            return GetAttributeValue<Guid?>("invoicedetailid");
        }
        set {
            SetId("invoicedetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Entrez la date à laquelle le produit facturé a été livré au client.</para>
    /// <para>Display Name: Livré le</para>
    /// </summary>
    [AttributeLogicalName("actualdeliveryon")]
    [DisplayName("Livré le")]
    public DateTime? ActualDeliveryOn {
        get {
            return GetAttributeValue<DateTime?>("actualdeliveryon");
        }
        set {
            SetAttributeValue("actualdeliveryon", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le prix total du produit de la facture, basé sur le prix unitaire, la remise sur quantité et la quantité.</para>
    /// <para>Display Name: ZZ_Montant HT</para>
    /// </summary>
    [AttributeLogicalName("baseamount")]
    [DisplayName("ZZ_Montant HT")]
    public decimal? BaseAmount {
        get {
            return GetMoneyValue("baseamount");
        }
        set {
            SetMoneyValue("baseamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant dans la devise de base.</para>
    /// <para>Display Name: Montant HT (de base)</para>
    /// </summary>
    [AttributeLogicalName("baseamount_base")]
    [DisplayName("Montant HT (de base)")]
    public decimal? BaseAmount_Base {
        get {
            return GetMoneyValue("baseamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche le créateur de l'enregistrement.</para>
    /// <para>Display Name: Créé par</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    [DisplayName("Créé par")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de création de l'enregistrement.</para>
    /// <para>Display Name: Créé le</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    [DisplayName("Créé le")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Créé par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    [DisplayName("Créé par (délégué)")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Entrez des informations supplémentaires pour décrire la ligne de produit de la facture.</para>
    /// <para>Display Name: Descriptif</para>
    /// </summary>
    [AttributeLogicalName("description")]
    [DisplayName("Descriptif")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs monétaires de l'enregistrement en devise locale dans la devise par défaut du système.</para>
    /// <para>Display Name: Taux de change</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    [DisplayName("Taux de change")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>Affiche le montant total dû pour le produit de la facture, égal à la somme du prix unitaire, de la quantité, des remises et des taxes.</para>
    /// <para>Display Name: ZZ_Montant TTC</para>
    /// </summary>
    [AttributeLogicalName("extendedamount")]
    [DisplayName("ZZ_Montant TTC")]
    public decimal? ExtendedAmount {
        get {
            return GetMoneyValue("extendedamount");
        }
        set {
            SetMoneyValue("extendedamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Total final dans la devise de base.</para>
    /// <para>Display Name: Total final (de base)</para>
    /// </summary>
    [AttributeLogicalName("extendedamount_base")]
    [DisplayName("Total final (de base)")]
    public decimal? ExtendedAmount_Base {
        get {
            return GetMoneyValue("extendedamount_base");
        }
    }
    
    /// <summary>
    /// <para>Numéro séquentiel de l'importation ayant créé cet enregistrement.</para>
    /// <para>Display Name: Numéro séquentiel d’importation</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    [DisplayName("Numéro séquentiel d’importation")]
    [Range(-2147483648, 2147483647)]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Nom des détails de la facture. Ajouté pour la relation référentielle 1 à n (utilisation interne uniquement)</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("invoicedetailname")]
    [DisplayName("Nom")]
    [MaxLength(850)]
    public string InvoiceDetailName {
        get {
            return GetAttributeValue<string>("invoicedetailname");
        }
        set {
            SetAttributeValue("invoicedetailname", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la facture associée à la ligne de produit de la facture.</para>
    /// <para>Display Name: Réf. facture</para>
    /// </summary>
    [AttributeLogicalName("invoiceid")]
    [DisplayName("Réf. facture")]
    public EntityReference InvoiceId {
        get {
            return GetAttributeValue<EntityReference>("invoiceid");
        }
        set {
            SetAttributeValue("invoiceid", value);
        }
    }
    
    /// <summary>
    /// <para>Information indiquant si les tarifs des produits de la facture sont bloqués.</para>
    /// <para>Display Name: Facture avec prix bloqué</para>
    /// </summary>
    [AttributeLogicalName("invoiceispricelocked")]
    [DisplayName("Facture avec prix bloqué")]
    public bool? InvoiceIsPriceLocked {
        get {
            return GetAttributeValue<bool?>("invoiceispricelocked");
        }
    }
    
    /// <summary>
    /// <para>Statut du produit de la facture.</para>
    /// <para>Display Name: Statut de la facture</para>
    /// </summary>
    [AttributeLogicalName("invoicestatecode")]
    [DisplayName("Statut de la facture")]
    public Object InvoiceStateCode {
        get {
            return GetAttributeValue<Object>("invoicestatecode");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le produit de la facture a été copié à partir d'un autre élément ou d'une autre source de données.</para>
    /// <para>Display Name: Copié(e)</para>
    /// </summary>
    [AttributeLogicalName("iscopied")]
    [DisplayName("Copié(e)")]
    public bool? IsCopied {
        get {
            return GetAttributeValue<bool?>("iscopied");
        }
        set {
            SetAttributeValue("iscopied", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le prix unitaire est fixé à la valeur indiquée dans les tarifs spécifiés ou s’il peut être remplacé par les utilisateurs qui ont les droits de modification du produit de la facture.</para>
    /// <para>Display Name: Tarification</para>
    /// </summary>
    [AttributeLogicalName("ispriceoverridden")]
    [DisplayName("Tarification")]
    public bool? IsPriceOverridden {
        get {
            return GetAttributeValue<bool?>("ispriceoverridden");
        }
        set {
            SetAttributeValue("ispriceoverridden", value);
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le produit existe dans le catalogue de produits Microsoft Dynamics 365 ou s'il s'agit d'un produit hors catalogue spécifique à la facture parente.</para>
    /// <para>Display Name: Sélectionner un produit</para>
    /// </summary>
    [AttributeLogicalName("isproductoverridden")]
    [DisplayName("Sélectionner un produit")]
    public bool? IsProductOverridden {
        get {
            return GetAttributeValue<bool?>("isproductoverridden");
        }
        set {
            SetAttributeValue("isproductoverridden", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de ligne du produit de la facture pour identifier simplement le produit sur la facture et garantir son classement dans la commande appropriée.</para>
    /// <para>Display Name: Numéro de ligne</para>
    /// </summary>
    [AttributeLogicalName("lineitemnumber")]
    [DisplayName("Numéro de ligne")]
    [Range(0, 1000000000)]
    public int? LineItemNumber {
        get {
            return GetAttributeValue<int?>("lineitemnumber");
        }
        set {
            SetAttributeValue("lineitemnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant de la remise manuelle du produit de la facture pour déduire les remises négociées ou autres du total du produit.</para>
    /// <para>Display Name: Remise</para>
    /// </summary>
    [AttributeLogicalName("manualdiscountamount")]
    [DisplayName("Remise")]
    public decimal? ManualDiscountAmount {
        get {
            return GetMoneyValue("manualdiscountamount");
        }
        set {
            SetMoneyValue("manualdiscountamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Remise manuelle dans la devise de base.</para>
    /// <para>Display Name: Remise manuelle (de base)</para>
    /// </summary>
    [AttributeLogicalName("manualdiscountamount_base")]
    [DisplayName("Remise manuelle (de base)")]
    public decimal? ManualDiscountAmount_Base {
        get {
            return GetMoneyValue("manualdiscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.</para>
    /// <para>Display Name: Modifié par</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    [DisplayName("Modifié par")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de modification de l'enregistrement.</para>
    /// <para>Display Name: Modifié le</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    [DisplayName("Modifié le")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement pour un autre utilisateur.</para>
    /// <para>Display Name: Modifié par (délégué)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    [DisplayName("Modifié par (délégué)")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date et heure de migration de l'enregistrement.</para>
    /// <para>Display Name: Enregistrement créé le</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    [DisplayName("Enregistrement créé le")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>ID du propriétaire</para>
    /// <para>Display Name: Propriétaire</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    [DisplayName("Propriétaire")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la division propriétaire de l'enregistrement</para>
    /// <para>Display Name: Division propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    [DisplayName("Division propriétaire")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'équipe propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Équipe propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    [DisplayName("Équipe propriétaire")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'utilisateur propriétaire de l'enregistrement.</para>
    /// <para>Display Name: Utilisateur propriétaire</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    [DisplayName("Utilisateur propriétaire")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Choisir l'offre groupée parente associée à ce produit</para>
    /// <para>Display Name: Offre groupée parente</para>
    /// </summary>
    [AttributeLogicalName("parentbundleid")]
    [DisplayName("Offre groupée parente")]
    public Guid? ParentBundleId {
        get {
            return GetAttributeValue<Guid?>("parentbundleid");
        }
        set {
            SetAttributeValue("parentbundleid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisir l'offre groupée parente associée à ce produit</para>
    /// <para>Display Name: Offre groupée parente de produits</para>
    /// </summary>
    [AttributeLogicalName("parentbundleidref")]
    [DisplayName("Offre groupée parente de produits")]
    public EntityReference ParentBundleIdRef {
        get {
            return GetAttributeValue<EntityReference>("parentbundleidref");
        }
        set {
            SetAttributeValue("parentbundleidref", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le prix unitaire du produit de la facture. La valeur par défaut est celle des tarifs spécifiés sur la facture parente pour les produits existants.</para>
    /// <para>Display Name: Prix unitaire TTC</para>
    /// </summary>
    [AttributeLogicalName("priceperunit")]
    [DisplayName("Prix unitaire TTC")]
    public decimal? PricePerUnit {
        get {
            return GetMoneyValue("priceperunit");
        }
        set {
            SetMoneyValue("priceperunit", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Prix unitaire dans la devise de base.</para>
    /// <para>Display Name: Prix unitaire (de base)</para>
    /// </summary>
    [AttributeLogicalName("priceperunit_base")]
    [DisplayName("Prix unitaire (de base)")]
    public decimal? PricePerUnit_Base {
        get {
            return GetMoneyValue("priceperunit_base");
        }
    }
    
    /// <summary>
    /// <para>Erreur de tarification de la ligne de produit de la facture.</para>
    /// <para>Display Name: Erreur de tarification </para>
    /// </summary>
    [AttributeLogicalName("pricingerrorcode")]
    [DisplayName("Erreur de tarification ")]
    public qooi_pricingerrorcode? PricingErrorCode {
        get {
            return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
        }
        set {
            SetOptionSetValue("pricingerrorcode", value);
        }
    }
    
    /// <summary>
    /// <para>Nom des détails de la facture. Ajouté pour la relation référentielle 1 à n (utilisation interne uniquement)</para>
    /// <para>Display Name: Nom</para>
    /// </summary>
    [AttributeLogicalName("invoicedetailname")]
    [DisplayName("Nom")]
    [MaxLength(850)]
    public string PrimaryNameField {
        get {
            return GetAttributeValue<string>("invoicedetailname");
        }
        set {
            SetAttributeValue("invoicedetailname", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de l'association de ligne de produit avec l'offre groupée dans la facture</para>
    /// <para>Display Name: Association de l'élément d'offre groupée</para>
    /// </summary>
    [AttributeLogicalName("productassociationid")]
    [DisplayName("Association de l\'élément d\'offre groupée")]
    public Guid? ProductAssociationId {
        get {
            return GetAttributeValue<Guid?>("productassociationid");
        }
        set {
            SetAttributeValue("productassociationid", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom ou une description pour identifier le type de produit hors catalogue inclus dans la facture.</para>
    /// <para>Display Name: Produit hors catalogue</para>
    /// </summary>
    [AttributeLogicalName("productdescription")]
    [DisplayName("Produit hors catalogue")]
    [MaxLength(850)]
    public string ProductDescription {
        get {
            return GetAttributeValue<string>("productdescription");
        }
        set {
            SetAttributeValue("productdescription", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez le produit à inclure sur la facture.</para>
    /// <para>Display Name: Produit existant</para>
    /// </summary>
    [AttributeLogicalName("productid")]
    [DisplayName("Produit existant")]
    public EntityReference ProductId {
        get {
            return GetAttributeValue<EntityReference>("productid");
        }
        set {
            SetAttributeValue("productid", value);
        }
    }
    
    /// <summary>
    /// <para>Champ calculé qui sera rempli en fonction du nom et de la description du produit.</para>
    /// <para>Display Name: Pièce</para>
    /// </summary>
    [AttributeLogicalName("productname")]
    [DisplayName("Pièce")]
    [MaxLength(850)]
    public string ProductName {
        get {
            return GetAttributeValue<string>("productname");
        }
        set {
            SetAttributeValue("productname", value);
        }
    }
    
    /// <summary>
    /// <para>ID produit défini par l’utilisateur.</para>
    /// <para>Display Name: Numéro de produit</para>
    /// </summary>
    [AttributeLogicalName("productnumber")]
    [DisplayName("Numéro de produit")]
    [MaxLength(100)]
    public string ProductNumber {
        get {
            return GetAttributeValue<string>("productnumber");
        }
    }
    
    /// <summary>
    /// <para>Type de produit</para>
    /// <para>Display Name: Type de produit</para>
    /// </summary>
    [AttributeLogicalName("producttypecode")]
    [DisplayName("Type de produit")]
    public qooiproduct_producttype? ProductTypeCode {
        get {
            return GetOptionSetValue<qooiproduct_producttype>("producttypecode");
        }
        set {
            SetOptionSetValue("producttypecode", value);
        }
    }
    
    /// <summary>
    /// <para>Statut de la configuration de la propriété.</para>
    /// <para>Display Name: Configuration de la propriété</para>
    /// </summary>
    [AttributeLogicalName("propertyconfigurationstatus")]
    [DisplayName("Configuration de la propriété")]
    public qooiproduct_propertiesconfigurationstatus? PropertyConfigurationStatus {
        get {
            return GetOptionSetValue<qooiproduct_propertiesconfigurationstatus>("propertyconfigurationstatus");
        }
        set {
            SetOptionSetValue("propertyconfigurationstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant ou la quantité du produit inclus dans le montant total dû de la facture.</para>
    /// <para>Display Name: Quantité</para>
    /// </summary>
    [AttributeLogicalName("quantity")]
    [DisplayName("Quantité")]
    public decimal? Quantity {
        get {
            return GetAttributeValue<decimal?>("quantity");
        }
        set {
            SetAttributeValue("quantity", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant ou la quantité du produit dont la livraison est différée pour la facture.</para>
    /// <para>Display Name: Quantité différée</para>
    /// </summary>
    [AttributeLogicalName("quantitybackordered")]
    [DisplayName("Quantité différée")]
    public decimal? QuantityBackordered {
        get {
            return GetAttributeValue<decimal?>("quantitybackordered");
        }
        set {
            SetAttributeValue("quantitybackordered", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant ou la quantité du produit qui a été annulé pour la ligne de facture.</para>
    /// <para>Display Name: Quantité annulée</para>
    /// </summary>
    [AttributeLogicalName("quantitycancelled")]
    [DisplayName("Quantité annulée")]
    public decimal? QuantityCancelled {
        get {
            return GetAttributeValue<decimal?>("quantitycancelled");
        }
        set {
            SetAttributeValue("quantitycancelled", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant ou la quantité du produit qui a été livré.</para>
    /// <para>Display Name: Quantité livrée</para>
    /// </summary>
    [AttributeLogicalName("quantityshipped")]
    [DisplayName("Quantité livrée")]
    public decimal? QuantityShipped {
        get {
            return GetAttributeValue<decimal?>("quantityshipped");
        }
        set {
            SetAttributeValue("quantityshipped", value);
        }
    }
    
    /// <summary>
    /// <para>Identificateur unique de la ligne de commande associée à la ligne de facture.</para>
    /// <para>Display Name: ID du produit de la commande</para>
    /// </summary>
    [AttributeLogicalName("salesorderdetailid")]
    [DisplayName("ID du produit de la commande")]
    public EntityReference SalesOrderDetailId {
        get {
            return GetAttributeValue<EntityReference>("salesorderdetailid");
        }
        set {
            SetAttributeValue("salesorderdetailid", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'utilisateur responsable de la vente du produit de la facture.</para>
    /// <para>Display Name: Vendeur</para>
    /// </summary>
    [AttributeLogicalName("salesrepid")]
    [DisplayName("Vendeur")]
    public EntityReference SalesRepId {
        get {
            return GetAttributeValue<EntityReference>("salesrepid");
        }
        set {
            SetAttributeValue("salesrepid", value);
        }
    }
    
    /// <summary>
    /// <para>Affiche l'ID des données qui gère la séquence.</para>
    /// <para>Display Name: Numéro séquentiel</para>
    /// </summary>
    [AttributeLogicalName("sequencenumber")]
    [DisplayName("Numéro séquentiel")]
    [Range(-2147483648, 2147483647)]
    public int? SequenceNumber {
        get {
            return GetAttributeValue<int?>("sequencenumber");
        }
        set {
            SetAttributeValue("sequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la ville de l'adresse de livraison du client.</para>
    /// <para>Display Name: Ville d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_city")]
    [DisplayName("Ville d\'expédition")]
    [MaxLength(80)]
    public string ShipTo_City {
        get {
            return GetAttributeValue<string>("shipto_city");
        }
        set {
            SetAttributeValue("shipto_city", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le pays ou la région de l'adresse de livraison du client.</para>
    /// <para>Display Name: Pays/région d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_country")]
    [DisplayName("Pays/région d\'expédition")]
    [MaxLength(80)]
    public string ShipTo_Country {
        get {
            return GetAttributeValue<string>("shipto_country");
        }
        set {
            SetAttributeValue("shipto_country", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de télécopie à l'adresse de livraison du client.</para>
    /// <para>Display Name: Télécopie d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_fax")]
    [DisplayName("Télécopie d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_Fax {
        get {
            return GetAttributeValue<string>("shipto_fax");
        }
        set {
            SetAttributeValue("shipto_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Sélectionnez les conditions de transport pour vous assurer du traitement correct des bons de livraison.</para>
    /// <para>Display Name: Conditions de transport</para>
    /// </summary>
    [AttributeLogicalName("shipto_freighttermscode")]
    [DisplayName("Conditions de transport")]
    public InvoiceDetail_ShipTo_FreightTermsCode? ShipTo_FreightTermsCode {
        get {
            return GetOptionSetValue<InvoiceDetail_ShipTo_FreightTermsCode>("shipto_freighttermscode");
        }
        set {
            SetOptionSetValue("shipto_freighttermscode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la première ligne de l'adresse de livraison du client.</para>
    /// <para>Display Name: Rue 1 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line1")]
    [DisplayName("Rue 1 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line1 {
        get {
            return GetAttributeValue<string>("shipto_line1");
        }
        set {
            SetAttributeValue("shipto_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la deuxième ligne de l'adresse de livraison du client.</para>
    /// <para>Display Name: Rue 2 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line2")]
    [DisplayName("Rue 2 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line2 {
        get {
            return GetAttributeValue<string>("shipto_line2");
        }
        set {
            SetAttributeValue("shipto_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez la troisième ligne de l'adresse de livraison.</para>
    /// <para>Display Name: Rue 3 d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_line3")]
    [DisplayName("Rue 3 d\'expédition")]
    [MaxLength(250)]
    public string ShipTo_Line3 {
        get {
            return GetAttributeValue<string>("shipto_line3");
        }
        set {
            SetAttributeValue("shipto_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un nom pour l'adresse de livraison du client, tel que « Siège » ou « Bureau local », pour identifier l'adresse.</para>
    /// <para>Display Name: Nom d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_name")]
    [DisplayName("Nom d\'expédition")]
    [MaxLength(200)]
    public string ShipTo_Name {
        get {
            return GetAttributeValue<string>("shipto_name");
        }
        set {
            SetAttributeValue("shipto_name", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le code postal de l'adresse de livraison.</para>
    /// <para>Display Name: Code postal d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_postalcode")]
    [DisplayName("Code postal d\'expédition")]
    [MaxLength(20)]
    public string ShipTo_PostalCode {
        get {
            return GetAttributeValue<string>("shipto_postalcode");
        }
        set {
            SetAttributeValue("shipto_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez l'état ou la province de l'adresse de livraison.</para>
    /// <para>Display Name: Département/province d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_stateorprovince")]
    [DisplayName("Département/province d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_StateOrProvince {
        get {
            return GetAttributeValue<string>("shipto_stateorprovince");
        }
        set {
            SetAttributeValue("shipto_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le numéro de téléphone à l'adresse de livraison du client.</para>
    /// <para>Display Name: Téléphone d'expédition</para>
    /// </summary>
    [AttributeLogicalName("shipto_telephone")]
    [DisplayName("Téléphone d\'expédition")]
    [MaxLength(50)]
    public string ShipTo_Telephone {
        get {
            return GetAttributeValue<string>("shipto_telephone");
        }
        set {
            SetAttributeValue("shipto_telephone", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez un numéro de suivi pour la livraison du produit facturé.</para>
    /// <para>Display Name: Numéro de suivi de la livraison</para>
    /// </summary>
    [AttributeLogicalName("shippingtrackingnumber")]
    [DisplayName("Numéro de suivi de la livraison")]
    [MaxLength(100)]
    public string ShippingTrackingNumber {
        get {
            return GetAttributeValue<string>("shippingtrackingnumber");
        }
        set {
            SetAttributeValue("shippingtrackingnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Ignorer le calcul du prix</para>
    /// <para>Display Name: Ignorer le calcul du prix</para>
    /// </summary>
    [AttributeLogicalName("skippricecalculation")]
    [DisplayName("Ignorer le calcul du prix")]
    public qooidetail_skippricecalculation? SkipPriceCalculation {
        get {
            return GetOptionSetValue<qooidetail_skippricecalculation>("skippricecalculation");
        }
        set {
            SetOptionSetValue("skippricecalculation", value);
        }
    }
    
    /// <summary>
    /// <para>Tapez le montant des taxes pour le produit de la facture.</para>
    /// <para>Display Name: Taxe</para>
    /// </summary>
    [AttributeLogicalName("tax")]
    [DisplayName("Taxe")]
    public decimal? Tax {
        get {
            return GetMoneyValue("tax");
        }
        set {
            SetMoneyValue("tax", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Taxe dans la devise de base.</para>
    /// <para>Display Name: Taxe (de base)</para>
    /// </summary>
    [AttributeLogicalName("tax_base")]
    [DisplayName("Taxe (de base)")]
    public decimal? Tax_Base {
        get {
            return GetMoneyValue("tax_base");
        }
    }
    
    /// <summary>
    /// <para>Utilisation interne uniquement.</para>
    /// <para>Display Name: Numéro de version de la règle du fuseau horaire</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    [DisplayName("Numéro de version de la règle du fuseau horaire")]
    [Range(-1, 2147483647)]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez la devise locale de l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.</para>
    /// <para>Display Name: Devise</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    [DisplayName("Devise")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Code du fuseau horaire utilisé à la création de l'enregistrement.</para>
    /// <para>Display Name: Code de fuseau horaire pour la conversion UTC</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    [DisplayName("Code de fuseau horaire pour la conversion UTC")]
    [Range(-1, 2147483647)]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Choisissez l'unité de mesure pour la quantité unitaire de base de cet achat, comme la pièce ou la douzaine.</para>
    /// <para>Display Name: Unité</para>
    /// </summary>
    [AttributeLogicalName("uomid")]
    [DisplayName("Unité")]
    public EntityReference UoMId {
        get {
            return GetAttributeValue<EntityReference>("uomid");
        }
        set {
            SetAttributeValue("uomid", value);
        }
    }
    
    /// <summary>
    /// <para>Numéro de version</para>
    /// <para>Display Name: Numéro de version</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    [DisplayName("Numéro de version")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Affiche le montant de la remise unitaire en cas d'achat d'un volume spécifié. Configurez les remises sur quantité dans le catalogue de produits dans la zone Paramètres.</para>
    /// <para>Display Name: Remise sur la quantité</para>
    /// </summary>
    [AttributeLogicalName("volumediscountamount")]
    [DisplayName("Remise sur la quantité")]
    public decimal? VolumeDiscountAmount {
        get {
            return GetMoneyValue("volumediscountamount");
        }
    }
    
    /// <summary>
    /// <para>Valeur de Remise sur la quantité dans la devise de base.</para>
    /// <para>Display Name: Remise sur la quantité (de base)</para>
    /// </summary>
    [AttributeLogicalName("volumediscountamount_base")]
    [DisplayName("Remise sur la quantité (de base)")]
    public decimal? VolumeDiscountAmount_Base {
        get {
            return GetMoneyValue("volumediscountamount_base");
        }
    }
    
    /// <summary>
    /// <para>Indiquez si le produit de la facture doit être livré à l'adresse spécifiée ou conservé jusqu'à ce que le client donne des instructions d'enlèvement ou de livraison.</para>
    /// <para>Display Name: Expédier vers</para>
    /// </summary>
    [AttributeLogicalName("willcall")]
    [DisplayName("Expédier vers")]
    public bool? WillCall {
        get {
            return GetAttributeValue<bool?>("willcall");
        }
        set {
            SetAttributeValue("willcall", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Taux TVA</para>
    /// </summary>
    [AttributeLogicalName("nxt_vatcodeid")]
    [DisplayName("Taux TVA")]
    public EntityReference nxt_VatCodeId {
        get {
            return GetAttributeValue<EntityReference>("nxt_vatcodeid");
        }
        set {
            SetAttributeValue("nxt_vatcodeid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant HT</para>
    /// </summary>
    [AttributeLogicalName("nxt_baseamount")]
    [DisplayName("Montant HT")]
    public decimal? nxt_baseamount {
        get {
            return GetMoneyValue("nxt_baseamount");
        }
        set {
            SetMoneyValue("nxt_baseamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant HT dans la devise de base.</para>
    /// <para>Display Name: Montant HT (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_baseamount_base")]
    [DisplayName("Montant HT (de base)")]
    public decimal? nxt_baseamount_Base {
        get {
            return GetMoneyValue("nxt_baseamount_base");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Montant TTC</para>
    /// </summary>
    [AttributeLogicalName("nxt_extendedamount")]
    [DisplayName("Montant TTC")]
    public decimal? nxt_extendedamount {
        get {
            return GetMoneyValue("nxt_extendedamount");
        }
        set {
            SetMoneyValue("nxt_extendedamount", value);
        }
    }
    
    /// <summary>
    /// <para>Valeur de Montant TTC dans la devise de base.</para>
    /// <para>Display Name: Montant TTC (de base)</para>
    /// </summary>
    [AttributeLogicalName("nxt_extendedamount_base")]
    [DisplayName("Montant TTC (de base)")]
    public decimal? nxt_extendedamount_Base {
        get {
            return GetMoneyValue("nxt_extendedamount_base");
        }
    }
    
    [RelationshipSchemaName("invoicedetail_parent_invoicedetail", EntityRole.Referenced)]
    public IEnumerable<InvoiceDetail> Referencedinvoicedetail_parent_invoicedetail {
        get {
            return GetRelatedEntities<InvoiceDetail>("invoicedetail_parent_invoicedetail", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("invoicedetail_parent_invoicedetail", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("invoicedetail_parentref_invoicedetail", EntityRole.Referenced)]
    public IEnumerable<InvoiceDetail> Referencedinvoicedetail_parentref_invoicedetail {
        get {
            return GetRelatedEntities<InvoiceDetail>("invoicedetail_parentref_invoicedetail", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("invoicedetail_parentref_invoicedetail", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentbundleid")]
    [RelationshipSchemaName("invoicedetail_parent_invoicedetail", EntityRole.Referencing)]
    public InvoiceDetail Referencinginvoicedetail_parent_invoicedetail {
        get {
            return GetRelatedEntity<InvoiceDetail>("invoicedetail_parent_invoicedetail", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("invoicedetail_parent_invoicedetail", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentbundleidref")]
    [RelationshipSchemaName("invoicedetail_parentref_invoicedetail", EntityRole.Referencing)]
    public InvoiceDetail Referencinginvoicedetail_parentref_invoicedetail {
        get {
            return GetRelatedEntity<InvoiceDetail>("invoicedetail_parentref_invoicedetail", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("invoicedetail_parentref_invoicedetail", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("invoiceid")]
    [RelationshipSchemaName("invoice_details")]
    public Invoice invoice_details {
        get {
            return GetRelatedEntity<Invoice>("invoice_details", null);
        }
        set {
            SetRelatedEntity("invoice_details", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_invoicedetail_createdonbehalfby")]
    public SystemUser lk_invoicedetail_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicedetail_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_invoicedetail_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_invoicedetail_modifiedonbehalfby")]
    public SystemUser lk_invoicedetail_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicedetail_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_invoicedetail_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_invoicedetailbase_createdby")]
    public SystemUser lk_invoicedetailbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicedetailbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_invoicedetailbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_invoicedetailbase_modifiedby")]
    public SystemUser lk_invoicedetailbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_invoicedetailbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_invoicedetailbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("salesorderdetailid")]
    [RelationshipSchemaName("msdyn_salesorderdetail_invoicedetail")]
    public SalesOrderDetail msdyn_salesorderdetail_invoicedetail {
        get {
            return GetRelatedEntity<SalesOrderDetail>("msdyn_salesorderdetail_invoicedetail", null);
        }
        set {
            SetRelatedEntity("msdyn_salesorderdetail_invoicedetail", null, value);
        }
    }
    
    [AttributeLogicalName("nxt_vatcodeid")]
    [RelationshipSchemaName("nxt_invoicedetail_VatCodeId_nxt_vat")]
    public nxt_Vat nxt_invoicedetail_VatCodeId_nxt_vat {
        get {
            return GetRelatedEntity<nxt_Vat>("nxt_invoicedetail_VatCodeId_nxt_vat", null);
        }
        set {
            SetRelatedEntity("nxt_invoicedetail_VatCodeId_nxt_vat", null, value);
        }
    }
    
    [AttributeLogicalName("salesrepid")]
    [RelationshipSchemaName("system_user_invoicedetail")]
    public SystemUser system_user_invoicedetail {
        get {
            return GetRelatedEntity<SystemUser>("system_user_invoicedetail", null);
        }
        set {
            SetRelatedEntity("system_user_invoicedetail", null, value);
        }
    }
    
    [AttributeLogicalName("owningteam")]
    [RelationshipSchemaName("team_invoicedetail")]
    public Team team_invoicedetail {
        get {
            return GetRelatedEntity<Team>("team_invoicedetail", null);
        }
        set {
            SetRelatedEntity("team_invoicedetail", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_invoicedetail")]
    public SystemUser user_invoicedetail {
        get {
            return GetRelatedEntity<SystemUser>("user_invoicedetail", null);
        }
        set {
            SetRelatedEntity("user_invoicedetail", null, value);
        }
    }
    
    public static InvoiceDetail Retrieve(IOrganizationService service, Guid id, params Expression<Func<InvoiceDetail,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

[DataContract()]
public enum InvoiceDetail_ShipTo_FreightTermsCode {
    
    [EnumMember()]
    [OptionSetMetadata("FAB", Index=0, Lcid=1036)]
    FAB = 1,
    
    [EnumMember()]
    [OptionSetMetadata("Sans supplément", Index=1, Lcid=1036)]
    Sanssupplément = 2,
}
